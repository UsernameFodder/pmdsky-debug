ram:
  versions:
    - NA
    - EU
    - JP
  address:
    NA: 0x2000000
    EU: 0x2000000
    JP: 0x2000000
  length:
    NA: 0x400000
    EU: 0x400000
    JP: 0x400000
  description: |-
    Main memory.
    Data in this file aren't located in the ROM itself, and are instead constructs loaded at runtime.
    
    More specifically, this file is a dumping ground for addresses that are useful to know about, but don't fall in the address ranges of any of the other files. Dynamically loaded constructs that do fall within the address range of a relevant binary should be listed in the corresponding YAML file of that binary, since it still has direct utility when reverse-engineering that particular binary.
  functions: []
  data:
    - name: DUNGEON_COLORMAP_PTR
      address:
        NA: 0x21B9CF4
        EU: 0x21BA634
      length:
        NA: 0x4
        EU: 0x4
      description: |-
        Pointer to a colormap used to render colors in a dungeon.
        
        The colormap is a list of 4-byte RGB colors of the form {R, G, B, padding}, which the game indexes into when rendering colors. Some weather conditions modify the colormap, which is how the color scheme changes when it's, e.g., raining.
    - name: DUNGEON_STRUCT
      address:
        NA: 0x21B9D34
        EU: 0x21BA674
      length:
        NA: 0x2CB14
        EU: 0x2CB14
      description: |-
        The dungeon context struct used for tons of stuff in dungeon mode. See struct dungeon in the C headers.
        
        This struct never seems to be referenced directly, and is instead usually accessed via DUNGEON_PTR in overlay 29.
        
        type: struct dungeon
    - name: MOVE_DATA_TABLE
      address:
        NA: 0x22113CC
        EU: 0x2211D0C
      length:
        NA: 0x38C6
        EU: 0x38C6
      description: |-
        The move data table loaded directly from /BALANCE/waza_p.bin. See struct move_data_table in the C headers.
        
        Pointed to by MOVE_DATA_TABLE_PTR in the ARM 9 binary.
        
        type: struct move_data_table
    - name: FRAMES_SINCE_LAUNCH
      address:
        NA:
          - 0x22A354C
          - 0x22A359C
        EU:
          - 0x22A3E8C
          - 0x22A3EDC
      length:
        NA: 0x4
        EU: 0x4
      description: "Starts at 0 when the game is first launched, and continuously ticks up once per frame while the game is running."
    - name: BAG_ITEMS
      address:
        NA: 0x22A3824
        EU: 0x22A4164
      length:
        NA: 0x12C
        EU: 0x12C
      description: |-
        Array of item structs within the player's bag.
        
        While the game only allows a maximum of 48 items during normal play, it seems to read up to 50 item slots if filled.
        
        type: struct item[50]
    - name: BAG_ITEMS_PTR
      address:
        NA: 0x22A3BA8
        EU: 0x22A44E8
      length:
        NA: 0x4
        EU: 0x4
      description: Pointer to BAG_ITEMS.
    - name: STORAGE_ITEMS
      address:
        NA: 0x22A3BAE
        EU: 0x22A44EE
      length:
        NA: 0x7D0
        EU: 0x7D0
      description: |-
        Array of item IDs in the player's item storage.
        
        For stackable items, the quantities are stored elsewhere, in STORAGE_ITEM_QUANTITIES.
        
        type: struct item_id_16[1000]
    - name: STORAGE_ITEM_QUANTITIES
      address:
        NA: 0x22A437E
        EU: 0x22A4CBE
      length:
        NA: 0x7D0
        EU: 0x7D0
      description: |-
        Array of 1000 2-byte (unsigned) quantities corresponding to the item IDs in STORAGE_ITEMS.
        
        If the corresponding item ID is not a stackable item, the entry in this array is unused, and will be 0.
    - name: KECLEON_SHOP_ITEMS_PTR
      address:
        NA: 0x22A4B50
        EU: 0x22A5490
      length:
        NA: 0x4
        EU: 0x4
      description: Pointer to KECLEON_SHOP_ITEMS.
    - name: KECLEON_SHOP_ITEMS
      address:
        NA: 0x22A4B54
        EU: 0x22A5494
      length:
        NA: 0x20
        EU: 0x20
      description: |-
        Array of up to 8 items in the Kecleon Shop of the form {struct item_id_16 id, uint16_t quantity}.
        
        If there are fewer than 8 items, the array is expected to be null-terminated.
    - name: UNUSED_KECLEON_SHOP_ITEMS
      address:
        NA: 0x22A4B74
        EU: 0x22A54B4
      length:
        NA: 0x20
        EU: 0x20
      description: "Seems to be another array like KECLEON_SHOP_ITEMS, but don't actually appear to be used by the Kecleon Shop."
    - name: KECLEON_WARES_ITEMS_PTR
      address:
        NA: 0x22A4B94
        EU: 0x22A54D4
      length:
        NA: 0x4
        EU: 0x4
      description: Pointer to KECLEON_WARES_ITEMS.
    - name: KECLEON_WARES_ITEMS
      address:
        NA: 0x22A4B98
        EU: 0x22A54D8
      length:
        NA: 0x10
        EU: 0x10
      description: |-
        Array of up to 4 items in Kecleon Wares of the form {struct item_id_16 id, uint16_t quantity}.
        
        If there are fewer than 4 items, the array is expected to be null-terminated.
    - name: UNUSED_KECLEON_WARES_ITEMS
      address:
        NA: 0x22A4BA8
        EU: 0x22A54E8
      length:
        NA: 0x10
        EU: 0x10
      description: "Seems to be another array like KECLEON_WARES_ITEMS, but don't actually appear to be used by Kecleon Wares."
    - name: MONEY_CARRIED
      address:
        NA: 0x22A4BB8
        EU: 0x22A54F8
      length:
        NA: 0x4
        EU: 0x4
      description: The amount of money the player is currently carrying.
    - name: MONEY_STORED
      address:
        NA: 0x22A4BC4
        EU: 0x22A5504
      length:
        NA: 0x4
        EU: 0x4
      description: The amount of money the player currently has stored in the Duskull Bank.
    - name: LAST_NEW_MOVE
      address:
        NA: 0x22AAE4C
        EU: 0x22AB78C
      length:
        NA: 0x8
        EU: 0x8
      description: |-
        Move struct of the last new move introduced when learning a new move. Persists even after the move selection is made in the menu.
        
        type: struct move
    - name: SCRIPT_VARS_VALUES
      address:
        NA: 0x22AB0AC
        EU: 0x22AB9EC
      length:
        NA: 0x400
        EU: 0x400
      description: |-
        The table of game variable values. Its structure is determined by SCRIPT_VARS.
        
        Note that with the script variable list defined in SCRIPT_VARS, the used length of this table is actually only 0x2B4. However, the real length of this table is 0x400 based on the game code.
        
        type: struct script_var_value_table
    - name: BAG_LEVEL
      address:
        NA: 0x22AB15C
        EU: 0x22ABA9C
      length:
        NA: 0x1
        EU: 0x1
      description: "The player's bag level, which determines the bag capacity. This indexes directly into the BAG_CAPACITY_TABLE in the ARM9 binary."
    - name: DEBUG_SPECIAL_EPISODE_NUMBER
      address:
        NA: 0x22AB4AC
        EU: 0x22ABDEC
      length:
        NA: 0x1
        EU: 0x1
      description: |-
        The number of the special episode currently being played.
        
        0: normal, Bidoof's Wish
        1: Igglybuff the Prodigy
        2: Today's "Oh My Gosh"
        3: Here Comes Team Charm!
        4: In the Future of Darkness
    - name: PENDING_DUNGEON_ID
      address:
        NA: 0x22AB4FC
        EU: 0x22ABE3C
      length:
        NA: 0x1
        EU: 0x1
      description: |-
        The ID of the selected dungeon when setting off from the overworld.
        
        Controls the text and map location during the "map cutscene" just before entering a dungeon, as well as the actual dungeon loaded afterwards.
        
        type: struct dungeon_id_8
    - name: PENDING_STARTING_FLOOR
      address:
        NA: 0x22AB4FD
        EU: 0x22ABE3D
      length:
        NA: 0x1
        EU: 0x1
      description: The floor number to start from in the dungeon specified by PENDING_DUNGEON_ID.
    - name: PLAY_TIME_SECONDS
      address:
        NA: 0x22AB694
        EU: 0x22ABFD4
      length:
        NA: 0x4
        EU: 0x4
      description: "The player's total play time in seconds."
    - name: PLAY_TIME_FRAME_COUNTER
      address:
        NA: 0x22AB698
        EU: 0x22ABFD8
      length:
        NA: 0x1
        EU: 0x1
      description: "Counts from 0-59 in a loop, with the play time being incremented by 1 second with each rollover."
    - name: TEAM_NAME
      address:
        NA: 0x22AB918
        EU: 0x22AC258
      length:
        NA: 0xC
        EU: 0xC
      description: |-
        The team name.
        
        A null-terminated string, with a maximum length of 10. Presumably encoded with the ANSI/Shift JIS encoding the game typically uses.
        
        This is presumably part of a larger struct, together with other nearby data.
    - name: HERO_SPECIES_ID
      address:
        NA: 0x22ABDE4
        EU: 0x22AC724
      length:
        NA: 0x2
        EU: 0x2
      description: |-
        The hero's species ID.
        
        This is presumably part of a larger struct, together with other nearby data.
        
        type: struct monster_id_16
    - name: HERO_NICKNAME
      address:
        NA: 0x22ABE1A
        EU: 0x22AC75A
      length:
        NA: 0xA
        EU: 0xA
      description: |-
        The hero's nickname.
        
        A null-terminated string, with a maximum length of 10. Presumably encoded with the ANSI/Shift JIS encoding the game typically uses.
        
        This is presumably part of a larger struct, together with other nearby data.
    - name: PARTNER_SPECIES_ID
      address:
        NA: 0x22ABE28
        EU: 0x22AC768
      length:
        NA: 0x2
        EU: 0x2
      description: |-
        The partner's species ID.
        
        This is presumably part of a larger struct, together with other nearby data.
        
        type: struct monster_id_16
    - name: LEADER_IQ_SKILLS
      address:
        NA: 0x22B5198
        EU: 0x22B5AD8
      length:
        NA: 0xC
        EU: 0xC
      description: |-
        Unlocked IQ skills of the current leader, available for selection from the IQ skills menu.
        
        One bit per skill (1 if unlocked). Same format as the IQ skills bitvector on the monster info struct.
        
        This is presumably part of a larger struct, together with other nearby data.
    - name: LEADER_NICKNAME
      address:
        NA: 0x22B51AA
        EU: 0x22B5AEA
      length:
        NA: 0xA
        EU: 0xA
      description: |-
        The current leader's nickname.
        
        A null-terminated string, with a maximum length of 10. Presumably encoded with the ANSI/Shift JIS encoding the game typically uses.
        
        This is presumably part of a larger struct, together with other nearby data.
    - name: PARTY_MEMBER_2_IQ_SKILLS
      address:
        NA: 0x22B5200
        EU: 0x22B5B40
      length:
        NA: 0xC
        EU: 0xC
      description: |-
        Unlocked IQ skills of the second party member, available for selection from the IQ skills menu.
        
        One bit per skill (1 if unlocked). Same format as the IQ skills bitvector on the monster info struct.
        
        This is presumably part of a larger struct, together with other nearby data.
    - name: FRAMES_SINCE_LAUNCH_TIMES_THREE
      address:
        NA: 0x22B99C4
        EU: 0x22BA304
      length:
        NA: 0x4
        EU: 0x4
      description: "Starts at 0 when the game is first launched, and ticks up by 3 per frame while the game is running."
    - name: TURNING_ON_THE_SPOT_FLAG
      address:
        NA: 0x237C9A6
        EU: 0x237D5A6
      length:
        NA: 0x1
        EU: 0x1
      description: "[Runtime] Flag for whether the player is turning on the spot (pressing Y)."
    - name: FLOOR_GENERATION_STATUS
      address:
        NA: 0x237CFBC
        EU: 0x237DBBC
      length:
        NA: 0x40
        EU: 0x40
      description: |-
        [Runtime] Status data related to generation of the current floor in a dungeon.
        
        This data is populated as the dungeon floor is generated.
        
        type: struct floor_generation_status
