overlay11:
  versions:
    - EU
    - NA
    - JP
  address:
    EU: 0x22DCB80
    NA: 0x22DC240
    JP: 0x22DD8E0
  length:
    EU: 0x48E40
    NA: 0x48C40
    JP: 0x48B00
  description: |-
    The script engine.
    
    This is the "main" overlay of ground mode. The script engine is what runs the ground mode scripts contained in the SCRIPT folder, which are written in a custom scripting language. These scripts encode things like cutscenes, screen transitions, ground mode events, and tons of other things related to ground mode.
  functions:
    - name: FuncThatCallsCommandParsing
      address:
        EU: 0x22DDAA4
        NA: 0x22DD164
        JP: 0x22DE804
    - name: ScriptCommandParsing
      address:
        EU: 0x22DE6A4
        NA: 0x22DDD64
        JP: 0x22DF404
    - name: LoadFileFromRomVeneer
      address:
        NA: 0x22E46DC
      description: |-
        Likely a linker-generated veneer for LoadFileFromRom.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: [output] pointer to an IO struct {ptr, len}
        r1: file path string pointer
        r2: flags
    - name: SsbLoad2
      address:
        EU: 0x22E503C
        NA: 0x22E46FC
        JP: 0x22E5D28
    - name: StationLoadHanger
      address:
        EU: 0x22E5514
        NA: 0x22E4BD4
        JP: 0x22E6200
    - name: ScriptStationLoadTalk
      address:
        EU: 0x22E5D24
        NA: 0x22E53E4
        JP: 0x22E6A10
    - name: SsbLoad1
      address:
        EU: 0x22E6690
        NA: 0x22E5D50
        JP: 0x22E737C
    - name: ScriptSpecialProcessCall
      address:
        EU: 0x22E7A58
        NA: 0x22E7118
        JP: 0x22E874C
      description: |-
        Processes calls to the OPCODE_PROCESS_SPECIAL script opcode.
        
        r0: some struct containing a callback of some sort, only used for special process ID 18
        r1: special process ID
        r2: first argument, if relevant? Probably corresponds to the second parameter of OPCODE_PROCESS_SPECIAL
        r3: second argument, if relevant? Probably corresponds to the third parameter of OPCODE_PROCESS_SPECIAL
        return: return value of the special process if it has one, otherwise 0
    - name: GetSpecialRecruitmentSpecies
      address:
        EU: 0x22E897C
        NA: 0x22E803C
        JP: 0x22E9670
      description: |-
        Returns an entry from RECRUITMENT_TABLE_SPECIES.
        
        Note: This indexes without doing bounds checking.
        
        r0: index into RECRUITMENT_TABLE_SPECIES
        return: enum monster_id
    - name: PrepareMenuAcceptTeamMember
      address:
        EU: 0x22E89C0
        NA: 0x22E8080
        JP: 0x22E96B4
      description: |-
        Implements SPECIAL_PROC_PREPARE_MENU_ACCEPT_TEAM_MEMBER (see ScriptSpecialProcessCall).
        
        r0: index into RECRUITMENT_TABLE_SPECIES
    - name: InitRandomNpcJobs
      address:
        EU: 0x22E8A64
        NA: 0x22E8124
        JP: 0x22E9758
      description: |-
        Implements SPECIAL_PROC_INIT_RANDOM_NPC_JOBS (see ScriptSpecialProcessCall).
        
        r0: job type? 0 is a random NPC job, 1 is a bottle mission
        r1: ?
    - name: GetRandomNpcJobType
      address:
        EU: 0x22E8AFC
        NA: 0x22E81BC
        JP: 0x22E97F0
      description: |-
        Implements SPECIAL_PROC_GET_RANDOM_NPC_JOB_TYPE (see ScriptSpecialProcessCall).
        
        return: job type?
    - name: GetRandomNpcJobSubtype
      address:
        EU: 0x22E8B14
        NA: 0x22E81D4
        JP: 0x22E9808
      description: |-
        Implements SPECIAL_PROC_GET_RANDOM_NPC_JOB_SUBTYPE (see ScriptSpecialProcessCall).
        
        return: job subtype?
    - name: GetRandomNpcJobStillAvailable
      address:
        EU: 0x22E8B30
        NA: 0x22E81F0
        JP: 0x22E9824
      description: |-
        Implements SPECIAL_PROC_GET_RANDOM_NPC_JOB_STILL_AVAILABLE (see ScriptSpecialProcessCall).
        
        return: bool
    - name: AcceptRandomNpcJob
      address:
        EU: 0x22E8B98
        NA: 0x22E8258
        JP: 0x22E988C
      description: |-
        Implements SPECIAL_PROC_ACCEPT_RANDOM_NPC_JOB (see ScriptSpecialProcessCall).
        
        return: bool
    - name: GroundMainLoop
      address:
        EU: 0x22E90B4
        NA: 0x22E8774
        JP: 0x22E9DA8
      description: |-
        Appears to be the main loop for ground mode.
        
        Based on debug print statements and general code structure, it seems contain a core loop, and dispatches to various functions in response to different events.
        
        r0: mode, which is stored globally and used in switch statements for dispatch
        return: return code
    - name: GetAllocArenaGround
      address:
        EU: 0x22E9C9C
        NA: 0x22E935C
        JP: 0x22EA990
      description: |-
        The GetAllocArena function used for ground mode. See SetMemAllocatorParams for more information.
        
        For (flags & 0xFF):
          8, 15, 16: GROUND_MEMORY_ARENA_1
          14: GROUND_MEMORY_ARENA_2
          other: null (default arena)
        
        r0: initial memory arena pointer, or null
        r1: flags (see MemAlloc)
        return: memory arena pointer, or null
    - name: GetFreeArenaGround
      address:
        EU: 0x22E9D00
        NA: 0x22E93C0
        JP: 0x22EA9F4
      description: |-
        The GetFreeArena function used for ground mode. See SetMemAllocatorParams for more information.
        
        r0: initial memory arena pointer, or null
        r1: pointer to free
        return: memory arena pointer, or null
    - name: GroundMainReturnDungeon
      address:
        EU: 0x22E9D54
        NA: 0x22E9414
        JP: 0x22EAA48
      description: |-
        Implements SPECIAL_PROC_RETURN_DUNGEON (see ScriptSpecialProcessCall).
        
        No params.
    - name: GroundMainNextDay
      address:
        EU: 0x22E9D78
        NA: 0x22E9438
        JP: 0x22EAA6C
      description: |-
        Implements SPECIAL_PROC_NEXT_DAY (see ScriptSpecialProcessCall).
        
        No params.
    - name: JumpToTitleScreen
      address:
        EU: 0x22E9F1C
        NA: 0x22E95DC
        JP: 0x22EAC10
      description: |-
        Implements SPECIAL_PROC_JUMP_TO_TITLE_SCREEN and SPECIAL_PROC_0x1A (see ScriptSpecialProcessCall).
        
        r0: int, argument value for SPECIAL_PROC_JUMP_TO_TITLE_SCREEN and -1 for SPECIAL_PROC_0x1A
        return: bool (but note that the special process ignores this and always returns 0)
    - name: ReturnToTitleScreen
      address:
        EU: 0x22E9FD4
        NA: 0x22E9694
        JP: 0x22EACC8
      description: |-
        Implements SPECIAL_PROC_RETURN_TO_TITLE_SCREEN (see ScriptSpecialProcessCall).
        
        r0: fade duration
        return: bool (but note that the special process ignores this and always returns 0)
    - name: ScriptSpecialProcess0x16
      address:
        EU: 0x22EA034
        NA: 0x22E96F4
        JP: 0x22EAD28
      description: |-
        Implements SPECIAL_PROC_0x16 (see ScriptSpecialProcessCall).
        
        r0: bool
    - name: LoadBackgroundAttributes
      address:
        EU: 0x22EC480
        NA: 0x22EBB40
        JP: 0x22ED174
      description: |-
        Open and read an entry from the MAP_BG/bg_list.dat
        
        Documentation on this format can be found here:
        https://github.com/SkyTemple/skytemple-files/tree/55b3017631a8a1b0f106111ef91a901dc394c6df/skytemple_files/graphics/bg_list_dat
        
        r0: [output] The entry
        r1: background ID
    - name: LoadMapType10
      address:
        EU: 0x22ED664
        NA: 0x22ECD24
        JP: 0x22EE358
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] buffer_ptr
        r1: map_id
        r2: dungeon_info_str
        r3: additional_info
    - name: LoadMapType11
      address:
        EU: 0x22EDB84
        NA: 0x22ED244
        JP: 0x22EE878
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] buffer_ptr
        r1: map_id
        r2: dungeon_info_str
        r3: additional_info
    - name: GetSpecialLayoutBackground
      address:
        EU: 0x22F1F00
        NA: 0x22F155C
        JP: 0x22F2BA8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: bg_id
        r1: dungeon_info_str
        r2: additional_info
        r3: copy_fixed_room_layout
    - name: SetAnimDataFields
      address:
        EU: 0x22F51BC
        NA: 0x22F481C
        JP: 0x22F5E74
      description: |-
        Sets some fields on the animation struct?
        
        r0: animation pointer
        r1: ?
    - name: SetAnimDataFieldsWrapper
      address:
        EU: 0x22F52FC
        NA: 0x22F495C
        JP: 0x22F5FB4
      description: Calls SetAnimDataFields with the second argument right-shifted by 16.
    - name: InitAnimDataFromOtherAnimData
      address:
        EU: 0x22F5604
        NA: 0x22F4C64
        JP: 0x22F62E8
      description: |-
        Appears to partially copy some animation data into another animation struct, plus doing extra initialization on the destination struct.
        
        r0: dst
        r1: src
    - name: SetAnimDataFields2
      address:
        EU: 0x22F5C88
        NA: 0x22F52E8
        JP: 0x22F696C
      description: |-
        Sets some fields on the animation struct, based on the params?
        
        r0: animation pointer
        r1: flags
        r2: ?
    - name: LoadObjectAnimData
      address:
        EU: 0x22F7800
        NA: 0x22F6E60
        JP: 0x22F84E4
      description: |-
        Loads the animation (WAN) data for a given object index?
        
        r0: animation pointer
        r1: object index
        r2: flags
    - name: InitAnimDataFromOtherAnimDataVeneer
      address:
        EU: 0x22F78A8
        NA: 0x22F6F0C
      description: |-
        Likely a linker-generated veneer for InitAnimDataFromOtherAnimData.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: dst
        r1: src
    - name: AnimRelatedFunction
      address:
        EU:
          - 0x22F78B4
          - 0x22F7A04
        NA:
          - 0x22F6F14
          - 0x22F7064
      description: |-
        Does more stuff related to animations...probably?
        
        r0: animation pointer?
        others: ?
    - name: AllocAndInitPartnerFollowDataAndLiveActorList
      address:
        EU: 0x22F865C
        NA: 0x22F7CBC
        JP: 0x22F9340
      description: |-
        Allocate and initialize the partner follow data and the live actor list (in GROUND_STATE_PTRS)
        
        No params.
    - name: InitPartnerFollowDataAndLiveActorList
      address:
        EU: 0x22F86B8
        NA: 0x22F7D18
        JP: 0x22F939C
      description: |-
        Initialize the partner follow data and the live actor list (in GROUND_STATE_PTRS, doesn’t perform the allocation of the structures)
        
        No params.
    - name: DeleteLiveActor
      address:
        EU: 0x22F8F18
        NA: 0x22F8578
        JP: 0x22F9BFC
      description: |-
        Remove the actor from the overworld actor list (in GROUND_STATE_PTRS)
        
        r0: the index of the actor in the live actor list
    - name: InitPartnerFollowData
      address:
        EU: 0x22FC3C8
        NA: 0x22FBA28
        JP: 0x22FD0AC
      description: |-
        Initialize the partner follow data structure, without allocating it (in GROUND_STATE_PTRS)
        
        No params.
    - name: GetDirectionLiveActor
      address:
        EU: 0x22FDB48
        NA: 0x22FD1A8
        JP: 0x22FE820
      description: |-
        Put the direction of the actor in the destination
        
        r0: live actor
        r1: destination address (1 byte)
    - name: SetDirectionLiveActor
      address:
        EU: 0x22FDB58
        NA: 0x22FD1B8
        JP: 0x22FE830
      description: |-
        Store the direction in the actor structure
        -1 input is ignored
        Unsure if this change the animation
        
        r0: live actor
        r1: direction
    - name: SprintfStatic
      address:
        EU: 0x2309868
        NA: 0x2308ECC
        JP: 0x230A478
      description: |-
        Statically defined copy of sprintf(3) in overlay 11. See arm9.yml for more information.
        
        r0: str
        r1: format
        ...: variadic
        return: number of characters printed, excluding the null-terminator
    - name: GetExclusiveItemRequirements
      address:
        EU: 0x230B8D4
        NA: 0x230AF38
        JP: 0x230C4DC
      description: |-
        Used to calculate the items required to get a certain exclusive item in the swap shop.
        
        r0: ?
        r1: ?
    - name: GetDungeonMapPos
      address:
        EU: 0x230F6E4
        NA: 0x230ED48
        JP: 0x23102F4
      description: |-
        Checks if a dungeon should be displayed on the map and the position where it should be displayed if so.
        
        r0: [Output] Buffer where the coordinates of the map marker will be stored. The coordinates are shifted 8 bits to the left, so they are probably fixed-point numbers instead of integers.
        r1: Dungeon ID
        return: True if the dungeon should be displayed on the map, false otherwise.
    - name: WorldMapSetMode
      address:
        EU: 0x230F9A0
        NA: 0x230F004
        JP: 0x23105B0
      description: |-
        Function called by the script function "worldmap_SetMode"
        Define the mode of the world map, which can among other things be used to decide if the player character should appear on the world map
        The mode is set even if no world map is set
        
        r0: world map mode
    - name: WorldMapSetCamera
      address:
        EU: 0x230FA60
        NA: 0x230F0C4
        JP: 0x2310670
      description: |-
        Function called with the script function "worldmap_SetCamera".
        Set the map marker the world map should try to center on (while still ensuring it doesn't go over the background border)
        Has no effect if no map is currently set
        
        r0: map marker id
    - name: StatusUpdate
      address:
        EU: 0x2314478
        NA: 0x2313A98
        JP: 0x2314FFC
      description: |-
        Implements SPECIAL_PROC_STATUS_UPDATE (see ScriptSpecialProcessCall).
        
        No params.
  data:
    - name: OVERLAY11_UNKNOWN_TABLE__NA_2316A38
      address:
        NA: 0x2316A38
      length:
        NA: 0xA0
      description: |-
        Multiple entries are pointers to the string "script.c"
        
        Note: unverified, ported from Irdkwia's notes
        
        type: undefined4[40]
    - name: SCRIPT_COMMAND_PARSING_DATA
      address:
        NA: 0x2316AD8
      length:
        NA: 0x20
      description: Used by ScriptCommandParsing somehow
    - name: SCRIPT_OP_CODE_NAMES
      address:
        NA: 0x2316AF8
      length:
        NA: 0x1B18
      description: "Opcode name strings pointed to by entries in SCRIPT_OP_CODES (script_opcode::name)"
    - name: SCRIPT_OP_CODES
      address:
        EU: 0x2318FF0
        NA: 0x2318610
        JP: 0x2319B74
      length:
        EU: 0xBF8
        NA: 0xBF8
        JP: 0xBF8
      description: |-
        Table of opcodes for the script engine. There are 383 8-byte entries.
        
        These opcodes underpin the various ExplorerScript functions you can call in the SkyTemple SSB debugger.
        
        type: struct script_opcode_table
    - name: OVERLAY11_DEBUG_STRINGS
      address:
        NA: 0x2319208
      length:
        NA: 0x8E4
      description: Strings used with various debug printing functions throughout the overlay
    - name: C_ROUTINE_NAMES
      address:
        NA: 0x2319AEC
      length:
        NA: 0x2D3C
      description: "Common routine name strings pointed to by entries in C_ROUTINES (common_routine::name)"
    - name: C_ROUTINES
      address:
        EU: 0x231D208
        NA: 0x231C828
        JP: 0x231DD8C
      length:
        NA: 0x15E8
        JP: 0x15E8
      description: |-
        Common routines used within the unionall.ssb script (the master script). There are 701 8-byte entries.
        
        These routines underpin the ExplorerScript coroutines you can call in the SkyTemple SSB debugger.
        
        type: struct common_routine_table
    - name: GROUND_WEATHER_TABLE
      address:
        NA: 0x231DE10
      length:
        NA: 0x30
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct ground_weather_entry[12]
    - name: GROUND_WAN_FILES_TABLE
      address:
        EU: 0x231E820
        NA: 0x231DE40
      length:
        EU: 0x10BC
        NA: 0x1014
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: char[343][12]
    - name: OBJECTS
      address:
        EU: 0x231F8DC
        NA: 0x231EE54
        JP: 0x23203B8
      length:
        EU: 0x1AAC
        NA: 0x1A04
        JP: 0x1A04
      description: |-
        Table of objects for the script engine, which can be placed in scenes. There are a version-dependent number of 12-byte entries.
        
        type: struct script_object[length / 12]
    - name: RECRUITMENT_TABLE_LOCATIONS
      address:
        EU: 0x23213C4
        NA: 0x2320894
        JP: 0x2321DF8
      length:
        EU: 0x16
        NA: 0x16
        JP: 0x16
      description: |-
        Table of dungeon IDs corresponding to entries in RECRUITMENT_TABLE_SPECIES.
        
        type: struct dungeon_id_16[22]
    - name: RECRUITMENT_TABLE_LEVELS
      address:
        EU: 0x23213DC
        NA: 0x23208AC
        JP: 0x2321E10
      length:
        EU: 0x2C
        NA: 0x2C
        JP: 0x2C
      description: |-
        Table of levels for recruited Pokémon, corresponding to entries in RECRUITMENT_TABLE_SPECIES.
        
        type: int16_t[22]
    - name: RECRUITMENT_TABLE_SPECIES
      address:
        EU: 0x2321408
        NA: 0x23208D8
        JP: 0x2321E3C
      length:
        EU: 0x2C
        NA: 0x2C
        JP: 0x2C
      description: |-
        Table of Pokémon recruited at special locations, such as at the ends of certain dungeons (e.g., Dialga or the Seven Treasures legendaries) or during a cutscene (e.g., Cresselia and Manaphy).
        
        Interestingly, this includes both Heatran genders. It also includes Darkrai for some reason?
        
        type: struct monster_id_16[22]
    - name: LEVEL_TILEMAP_LIST
      address:
        EU: 0x232185C
        NA: 0x2320D2C
        JP: 0x2322290
      length:
        EU: 0x288
        NA: 0x288
        JP: 0x288
      description: |-
        Irdkwia's notes: FIXED_FLOOR_GROUND_ASSOCIATION
        
        type: struct level_tilemap_list_entry[81]
    - name: OVERLAY11_OVERLAY_LOAD_TABLE
      address:
        EU: 0x2323B9C
        NA: 0x232306C
      length:
        EU: 0x150
        NA: 0x150
      description: |-
        The overlays that can be loaded while this one is loaded.
        
        Each entry is 16 bytes, consisting of:
        - overlay group ID (see arm9.yml or enum overlay_group_id in the C headers for a mapping between group ID and overlay number)
        - function pointer to entry point
        - function pointer to destructor
        - possibly function pointer to frame-update function?
        
        type: struct overlay_load_entry[21]
    - name: UNIONALL_RAM_ADDRESS
      address:
        EU: 0x23257E4
        NA: 0x2324CA4
        JP: 0x2326204
      description: "[Runtime]"
    - name: GROUND_STATE_MAP
      address:
        EU: 0x2325800
        NA: 0x2324CC0
        JP: 0x2326220
      description: "[Runtime]"
    - name: GROUND_STATE_WEATHER
      address:
        EU: 0x232580C
      description: "[Runtime] Same structure format as GROUND_STATE_MAP"
    - name: GROUND_STATE_PTRS
      address:
        EU: 0x2325834
        NA: 0x2324CF4
        JP: 0x2326254
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: |-
        Host pointers to multiple structure used for performing an overworld scene
        
        type: struct main_ground_data
    - name: WORLD_MAP_MODE
      address:
        EU: 0x2325924
        NA: 0x2324DE4
      length:
        EU: 0x4
        NA: 0x4
      description: The current world map
