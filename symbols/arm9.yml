arm9:
  versions:
    - EU
    - NA
    - JP
    - EU-ITCM
    - NA-ITCM
    - JP-ITCM
  address:
    EU: 0x2000000
    NA: 0x2000000
    JP: 0x2000000
    EU-ITCM: 0x1FF8000
    NA-ITCM: 0x1FF8000
    JP-ITCM: 0x1FF8000
  length:
    EU: 0xB7D38
    NA: 0xB73F8
    JP: 0xB8CB8
    EU-ITCM: 0x4000
    NA-ITCM: 0x4000
    JP-ITCM: 0x4060
  description: |-
    The main ARM9 binary.
    
    This is the main binary that gets loaded when the game is launched, and contains the core code that runs the game, low level facilities such as memory allocation, compression, other external dependencies (such as linked libraries), and the functions and tables necessary to load overlays and dispatch execution to them.
    
    Speaking generally, this is the program run by the Nintendo DS's main ARM946E-S CPU, which handles all gameplay mechanisms and graphics rendering.
  subregions:
    - itcm.yml
    - libs.yml
  functions:
    - name: Svc_SoftReset
      address:
        EU: 0x20001A4
        NA: 0x2000566
        JP: 0x2000154
      description: Software interrupt.
    - name: Svc_WaitByLoop
      address:
        EU: 0x20006B0
        NA: 0x2000088
        JP: 0x200073A
      description: Software interrupt.
    - name: Svc_CpuSet
      address:
        EU: 0x200079E
        NA: 0x200078E
        JP: 0x2000226
      description: Software interrupt.
    - name: _start
      address:
        EU: 0x2000800
        NA: 0x2000800
        JP: 0x2000800
      description: |-
        The entrypoint for the ARM9 CPU. This is like the "main" function for the ARM9 subsystem.
        
        Once the entry function reaches the end, a constant containing the address to NitroMain is loaded into a register (r1), and a `bx` branch will jump to NitroMain.
        
        No params.
    - name: InitI_CpuClear32
      address:
        EU: 0x2000954
        NA: 0x2000954
        JP: 0x2000954
    - name: MIi_UncompressBackward
      address:
        EU: 0x2000970
        NA: 0x2000970
        JP: 0x2000970
      description: "Startup routine in the program's crt0 (https://en.wikipedia.org/wiki/Crt0)."
    - name: do_autoload
      address:
        EU: 0x2000A1C
        NA: 0x2000A1C
        JP: 0x2000A1C
      description: "Startup routine in the program's crt0 (https://en.wikipedia.org/wiki/Crt0)."
    - name: StartAutoloadDoneCallback
      address:
        EU: 0x2000AAC
        NA: 0x2000AAC
        JP: 0x2000AAC
      description: "Startup routine in the program's crt0 (https://en.wikipedia.org/wiki/Crt0)."
    - name: init_cp15
      address:
        EU: 0x2000AB0
        NA: 0x2000AB0
        JP: 0x2000AB0
    - name: OSi_ReferSymbol
      address:
        EU: 0x2000B9C
        NA: 0x2000B9C
        JP: 0x2000B9C
      description: "Startup routine in the program's crt0 (https://en.wikipedia.org/wiki/Crt0)."
    - name: NitroMain
      address:
        EU: 0x2000C6C
        NA: 0x2000C6C
        JP: 0x2000C6C
      description: "Entrypoint into NitroSDK, the DS devkit library."
    - name: InitMemAllocTable
      address:
        EU: 0x2000DE0
        NA: 0x2000DE0
        JP: 0x2000DE0
      description: |-
        Initializes MEMORY_ALLOCATION_TABLE.
        
        Sets up the default memory arena, sets the default memory allocator parameters (calls SetMemAllocatorParams(0, 0)), and does some other stuff.
        
        No params.
    - name: SetMemAllocatorParams
      address:
        EU: 0x2000E70
        NA: 0x2000E70
        JP: 0x2000E70
      description: |-
        Sets global parameters for the memory allocator.
        
        This includes MEMORY_ALLOCATION_ARENA_GETTERS and some other stuff.
        
        Dungeon mode uses the default arena getters. Ground mode uses its own arena getters that return custom arenas for some flag values, which are defined in overlay 11 and set (by calling this function) at the start of GroundMainLoop. Note that the sound memory arena is provided explicitly to MemLocateSet in the sound code, so doesn't go through this path.
        
        r0: GetAllocArena function pointer (GetAllocArenaDefault is used if null)
        r1: GetFreeArena function pointer (GetFreeArenaDefault is used if null)
    - name: GetAllocArenaDefault
      address:
        EU: 0x2000EC0
        NA: 0x2000EC0
        JP: 0x2000EC0
      description: |-
        The default function for retrieving the arena for memory allocations. This function always just returns the initial arena pointer.
        
        r0: initial memory arena pointer, or null
        r1: flags (see MemAlloc)
        return: memory arena pointer, or null
    - name: GetFreeArenaDefault
      address:
        EU: 0x2000EC4
        NA: 0x2000EC4
        JP: 0x2000EC4
      description: |-
        The default function for retrieving the arena for memory freeing. This function always just returns the initial arena pointer.
        
        r0: initial memory arena pointer, or null
        r1: pointer to free
        return: memory arena pointer, or null
    - name: InitMemArena
      address:
        EU: 0x2000EC8
        NA: 0x2000EC8
        JP: 0x2000EC8
      description: |-
        Initializes a new memory arena with the given specifications, and records it in the global MEMORY_ALLOCATION_TABLE.
        
        r0: arena struct to be initialized
        r1: memory region to be owned by the arena, as {pointer, length}
        r2: pointer to block metadata array for the arena to use
        r3: maximum number of blocks that the arena can hold
    - name: MemAllocFlagsToBlockType
      address:
        EU: 0x2000F44
        NA: 0x2000F44
        JP: 0x2000F44
      description: |-
        Converts the internal alloc flags bitfield (struct mem_block field 0x4) to the block type bitfield (struct mem_block field 0x0).
        
        r0: internal alloc flags
        return: block type flags
    - name: FindAvailableMemBlock
      address:
        EU: 0x2000F88
        NA: 0x2000F88
        JP: 0x2000F88
      description: |-
        Searches through the given memory arena for a block with enough free space.
        
        Blocks are searched in reverse order. For object allocations (i.e., not arenas), the block with the smallest amount of free space that still suffices is returned. For arena allocations, the first satisfactory block found is returned.
        
        r0: memory arena to search
        r1: internal alloc flags
        r2: amount of space needed, in bytes
        return: index of the located block in the arena's block array, or -1 if nothing is available
    - name: SplitMemBlock
      address:
        EU: 0x2001070
        NA: 0x2001070
        JP: 0x2001070
      description: |-
        Given a memory block at a given index, splits off another memory block of the specified size from the end.
        
        Since blocks are stored in an array on the memory arena struct, this is essentially an insertion operation, plus some processing on the block being split and its child.
        
        r0: memory arena
        r1: block index
        r2: internal alloc flags
        r3: number of bytes to split off
        stack[0]: user alloc flags (to assign to the new block)
        return: the newly split-off memory block
    - name: MemAlloc
      address:
        EU: 0x2001170
        NA: 0x2001170
        JP: 0x2001170
      description: |-
        Allocates some memory on the heap, returning a pointer to the starting address.
        
        Memory allocation is done with region-based memory management. See MEMORY_ALLOCATION_TABLE for more information.
        
        This function is just a wrapper around MemLocateSet.
        
        r0: length in bytes
        r1: flags (see the comment on struct mem_block::user_flags)
        return: pointer
    - name: MemFree
      address:
        EU: 0x2001188
        NA: 0x2001188
        JP: 0x2001188
      description: |-
        Frees heap-allocated memory.
        
        This function is just a wrapper around MemLocateUnset.
        
        r0: pointer
    - name: MemArenaAlloc
      address:
        EU: 0x200119C
        NA: 0x200119C
        JP: 0x200119C
      description: |-
        Allocates some memory on the heap and creates a new global memory arena with it.
        
        The actual allocation part works similarly to the normal MemAlloc.
        
        r0: desired parent memory arena, or null
        r1: length of the arena in bytes
        r2: maximum number of blocks that the arena can hold
        r3: flags (see MemAlloc)
        return: memory arena pointer
    - name: CreateMemArena
      address:
        EU: 0x2001280
        NA: 0x2001280
        JP: 0x2001280
      description: |-
        Creates a new memory arena within a given block of memory.
        
        This is essentially a wrapper around InitMemArena, accounting for the space needed by the arena metadata.
        
        r0: memory region in which to create the arena, as {pointer, length}
        r1: maximum number of blocks that the arena can hold
        return: memory arena pointer
    - name: MemLocateSet
      address:
        EU: 0x2001390
        NA: 0x2001390
        JP: 0x2001390
      description: |-
        The implementation for MemAlloc.
        
        At a high level, memory is allocated by choosing a memory arena, looking through blocks in the memory arena until a free one that's large enough is found, then splitting off a new memory block of the needed size.
        
        This function is not fallible, i.e., it hangs the whole program on failure, so callers can assume it never fails.
        
        The name for this function comes from the error message logged on failure, and it reflects what the function does: locate an available block of memory and set it up for the caller.
        
        r0: desired memory arena for allocation, or null (MemAlloc passes null)
        r1: length in bytes
        r2: flags (see MemAlloc)
        return: pointer to allocated memory
    - name: MemLocateUnset
      address:
        EU: 0x2001638
        NA: 0x2001638
        JP: 0x2001638
      description: |-
        The implementation for MemFree.
        
        At a high level, memory is freed by locating the pointer in its memory arena (searching block-by-block) and emptying the block so it's available for future allocations, and merging it with neighboring blocks if they're available.
        
        r0: desired memory arena for freeing, or null (MemFree passes null)
        r1: pointer to free
    - name: RoundUpDiv256
      address:
        EU: 0x2001894
        NA: 0x2001894
        JP: 0x2001894
      description: |-
        Divide a number by 256 and round up to the nearest integer.
        
        r0: number
        return: number // 256
    - name: UFixedPoint64CmpLt
      address:
        EU: 0x2001A30
        NA: 0x2001A30
        JP: 0x2001A30
      description: |-
        Compares two unsigned 64-bit fixed-point numbers (16 fraction bits) x and y.
        
        r0: upper 32 bits of x
        r1: lower 32 bits of x
        r2: upper 32 bits of y
        r3: lower 32 bits of y
        return: x < y
    - name: MultiplyByFixedPoint
      address:
        EU: 0x2001A54
        NA: 0x2001A54
        JP: 0x2001A54
      description: |-
        Multiply a signed integer x by a signed binary fixed-point multiplier (8 fraction bits).
        
        r0: x
        r1: multiplier
        return: x * multiplier
    - name: UMultiplyByFixedPoint
      address:
        EU: 0x2001B0C
        NA: 0x2001B0C
        JP: 0x2001B0C
      description: |-
        Multiplies an unsigned integer x by an unsigned binary fixed-point multiplier (8 fraction bits).
        
        r0: x
        r1: multiplier
        return: x * multiplier
    - name: IntToFixedPoint64
      address:
        EU: 0x2001C80
        NA: 0x2001C80
        JP: 0x2001C80
      description: |-
        Converts a signed integer to a 64-bit fixed-point number (16 fraction bits).
        
        Note that this function appears to be bugged: it appears to try to sign-extend if the input is negative, but in a nonsensical way, checking the sign bit for a 16-bit signed integer, but then doing the sign extension as if the input were a 32-bit signed integer.
        
        r0: [output] 64-bit fixed-point number
        r1: 32-bit signed int
    - name: FixedPoint64ToInt
      address:
        EU: 0x2001CB0
        NA: 0x2001CB0
        JP: 0x2001CB0
      description: |-
        Converts a 64-bit fixed-point number (16 fraction bits) to a signed integer.
        
        r0: 64-bit fixed-point number
        return: 32-bit signed
    - name: FixedPoint32To64
      address:
        EU: 0x2001CD4
        NA: 0x2001CD4
        JP: 0x2001CD4
      description: |-
        Converts a 32-bit fixed-point number (8 fraction bits) to a 64-bit fixed point number (16 fraction bits). Sign-extends as necessary.
        
        r0: [output] 64-bit fixed-point number
        r1: 32-bit signed fixed-point number
    - name: NegateFixedPoint64
      address:
        EU: 0x2001CF8
        NA: 0x2001CF8
        JP: 0x2001CF8
      description: |-
        Negates a 64-bit fixed-point number (16 fraction bits) in-place.
        
        r0: 64-bit fixed-point number to negate
    - name: FixedPoint64IsZero
      address:
        EU: 0x2001D28
        NA: 0x2001D28
        JP: 0x2001D28
      description: |-
        Checks whether a 64-bit fixed-point number (16 fraction bits) is zero.
        
        r0: 64-bit fixed-point number
        return: bool
    - name: FixedPoint64IsNegative
      address:
        EU: 0x2001D50
        NA: 0x2001D50
        JP: 0x2001D50
      description: |-
        Checks whether a 64-bit fixed-point number (16 fraction bits) is negative.
        
        r0: 64-bit fixed-point number
        return: bool
    - name: FixedPoint64CmpLt
      address:
        EU: 0x2001D68
        NA: 0x2001D68
        JP: 0x2001D68
      description: |-
        Compares two signed 64-bit fixed-point numbers (16 fraction bits) x and y.
        
        r0: x
        r1: y
        return: x < y
    - name: MultiplyFixedPoint64
      address:
        EU: 0x2001DF4
        NA: 0x2001DF4
        JP: 0x2001DF4
      description: |-
        Multiplies two signed 64-bit fixed-point numbers (16 fraction bits) x and y.
        
        r0: [output] product (x * y)
        r1: x
        r2: y
    - name: DivideFixedPoint64
      address:
        EU: 0x2001EC8
        NA: 0x2001EC8
        JP: 0x2001EC8
      description: |-
        Divides two signed 64-bit fixed-point numbers (16 fraction bits).
        
        Returns the maximum positive value ((INT64_MAX >> 16) + (UINT16_MAX * 2^-16)) if the divisor is zero.
        
        r0: [output] quotient (dividend / divisor)
        r1: dividend
        r2: divisor
    - name: UMultiplyFixedPoint64
      address:
        EU: 0x2001FA0
        NA: 0x2001FA0
        JP: 0x2001FA0
      description: |-
        Multiplies two unsigned 64-bit fixed-point numbers (16 fraction bits) x and y.
        
        r0: [output] product (x * y)
        r1: x
        r2: y
    - name: UDivideFixedPoint64
      address:
        EU: 0x2002084
        NA: 0x2002084
        JP: 0x2002084
      description: |-
        Divides two unsigned 64-bit fixed-point numbers (16 fraction bits).
        
        Returns the maximum positive value for a signed fixed-point number ((INT64_MAX >> 16) + (UINT16_MAX * 2^-16)) if the divisor is zero.
        
        r0: [output] quotient (dividend / divisor)
        r1: dividend
        r2: divisor
    - name: AddFixedPoint64
      address:
        EU: 0x20021C8
        NA: 0x20021C8
        JP: 0x20021C8
      description: |-
        Adds two 64-bit fixed-point numbers (16 fraction bits) x and y.
        
        r0: [output] sum (x + y)
        r1: x
        r2: y
    - name: ClampedLn
      address:
        EU: 0x20021F4
        NA: 0x20021F4
        JP: 0x20021F4
      description: |-
        The natural log function over the domain of [1, 2047]. The input is clamped to this domain.
        
        r0: [output] ln(x)
        r1: x
    - name: GetRngSeed
      address:
        EU: 0x200222C
        NA: 0x200222C
        JP: 0x200222C
      description: Get the current value of PRNG_SEQUENCE_NUM.
    - name: SetRngSeed
      address:
        EU: 0x200223C
        NA: 0x200223C
        JP: 0x200223C
      description: |-
        Seed PRNG_SEQUENCE_NUM to a given value.
        
        r0: seed
    - name: Rand16Bit
      address:
        EU: 0x200224C
        NA: 0x200224C
        JP: 0x200224C
      description: |-
        Computes a pseudorandom 16-bit integer using the general-purpose PRNG.
        
        Note that much of dungeon mode uses its own (slightly higher-quality) PRNG within overlay 29. See overlay29.yml for more information.
        
        Random numbers are generated with a linear congruential generator (LCG), using a modulus of 2^16, a multiplier of 109, and an increment of 1021. I.e., the recurrence relation is `x = (109*x_prev + 1021) % 2^16`.
        
        The LCG has a hard-coded seed of 13452 (0x348C), but can be seeded with a call to SetRngSeed.
        
        return: pseudorandom int on the interval [0, 65535]
    - name: RandInt
      address:
        EU: 0x2002274
        NA: 0x2002274
        JP: 0x2002274
      description: |-
        Compute a pseudorandom integer under a given maximum value using the general-purpose PRNG.
        
        This function relies on a single call to Rand16Bit. Even though it takes a 32-bit integer as input, the number of unique outcomes is capped at 2^16.
        
        r0: high
        return: pseudorandom integer on the interval [0, high - 1]
    - name: RandRange
      address:
        EU: 0x200228C
        NA: 0x200228C
        JP: 0x200228C
      description: |-
        Compute a pseudorandom value between two integers using the general-purpose PRNG.
        
        This function relies on a single call to Rand16Bit. Even though it takes 32-bit integers as input, the number of unique outcomes is capped at 2^16.
        
        r0: x
        r1: y
        return: pseudorandom integer on the interval [x, y - 1]
    - name: Rand32Bit
      address:
        EU: 0x20022AC
        NA: 0x20022AC
        JP: 0x20022AC
      description: |-
        Computes a random 32-bit integer using the general-purpose PRNG. The upper and lower 16 bits are each generated with a separate call to Rand16Bit (so this function advances the PRNG twice).
        
        return: pseudorandom int on the interval [0, 4294967295]
    - name: RandIntSafe
      address:
        EU: 0x20022F8
        NA: 0x20022F8
        JP: 0x20022F8
      description: |-
        Same as RandInt, except explicitly masking out the upper 16 bits of the output from Rand16Bit (which should be zero anyway).
        
        r0: high
        return: pseudorandom integer on the interval [0, high - 1]
    - name: RandRangeSafe
      address:
        EU: 0x2002318
        NA: 0x2002318
        JP: 0x2002318
      description: |-
        Like RandRange, except reordering the inputs as needed, and explicitly masking out the upper 16 bits of the output from Rand16Bit (which should be zero anyway).
        
        r0: x
        r1: y
        return: pseudorandom integer on the interval [min(x, y), max(x, y) - 1]
    - name: WaitForever
      address:
        EU: 0x2002438
        NA: 0x2002438
        JP: 0x2002438
      description: |-
        Sets some program state and calls WaitForInterrupt in an infinite loop.
        
        This is called on fatal errors to hang the program indefinitely.
        
        No params.
    - name: InterruptMasterDisable
      address:
        EU: 0x20030CC
        NA: 0x20030CC
        JP: 0x20030CC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: previous state
    - name: InterruptMasterEnable
      address:
        EU: 0x20030E4
        NA: 0x20030E4
        JP: 0x20030E4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: previous state
    - name: InitMemAllocTableVeneer
      address:
        EU: 0x200321C
        NA: 0x200321C
        JP: 0x200321C
      description: |-
        Likely a linker-generated veneer for InitMemAllocTable.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        No params.
    - name: ZInit8
      address:
        EU: 0x2003228
        NA: 0x2003228
        JP: 0x2003228
      description: |-
        Zeroes an 8-byte buffer.
        
        r0: ptr
    - name: PointsToZero
      address:
        EU: 0x2003238
        NA: 0x2003238
        JP: 0x2003238
      description: |-
        Checks whether a pointer points to zero.
        
        r0: ptr
        return: bool
    - name: MemZero
      address:
        EU: 0x2003250
        NA: 0x2003250
        JP: 0x2003250
      description: |-
        Zeroes a buffer.
        
        r0: ptr
        r1: len
    - name: MemZero16
      address:
        EU: 0x200326C
        NA: 0x200326C
        JP: 0x200326C
      description: |-
        Zeros a buffer of 16-bit values.
        
        r0: ptr
        r1: len (# bytes)
    - name: MemZero32
      address:
        EU: 0x2003288
        NA: 0x2003288
        JP: 0x2003288
      description: |-
        Zeros a buffer of 32-bit values.
        
        r0: ptr
        r1: len (# bytes)
    - name: MemsetSimple
      address:
        EU: 0x20032A4
        NA: 0x20032A4
        JP: 0x20032A4
      description: |-
        A simple implementation of the memset(3) C library function.
        
        This function was probably manually implemented by the developers. See memset for what's probably the real libc function.
        
        r0: ptr
        r1: value
        r2: len (# bytes)
    - name: Memset32
      address:
        EU: 0x20032BC
        NA: 0x20032BC
        JP: 0x20032BC
      description: |-
        Fills a buffer of 32-bit values with a given value.
        
        r0: ptr
        r1: value
        r2: len (# bytes)
    - name: MemcpySimple
      address:
        EU: 0x20032D4
        NA: 0x20032D4
        JP: 0x20032D4
      description: |-
        A simple implementation of the memcpy(3) C library function.
        
        This function was probably manually implemented by the developers. See memcpy for what's probably the real libc function.
        
        This function copies from src to dst in backwards byte order, so this is safe to call for overlapping src and dst if src <= dst.
        
        r0: dest
        r1: src
        r2: n
    - name: Memcpy16
      address:
        EU: 0x20032F0
        NA: 0x20032F0
        JP: 0x20032F0
      description: |-
        Copies 16-bit values from one buffer to another.
        
        r0: dest
        r1: src
        r2: n (# bytes)
    - name: Memcpy32
      address:
        EU: 0x200330C
        NA: 0x200330C
        JP: 0x200330C
      description: |-
        Copies 32-bit values from one buffer to another.
        
        r0: dest
        r1: src
        r2: n (# bytes)
    - name: TaskProcBoot
      address:
        EU: 0x2003328
        NA: 0x2003328
        JP: 0x2003328
      description: |-
        Probably related to booting the game?
        
        This function prints the debug message "task proc boot".
        
        No params.
    - name: EnableAllInterrupts
      address:
        EU: 0x2003608
        NA: 0x2003608
        JP: 0x2003608
      description: |-
        Sets the Interrupt Master Enable (IME) register to 1, which enables all CPU interrupts (if enabled in the Interrupt Enable (IE) register).
        
        See https://problemkaputt.de/gbatek.htm#dsiomaps.
        
        return: old value in the IME register
    - name: GetTime
      address:
        EU: 0x20037B4
        NA: 0x20037B4
        JP: 0x20037B4
      description: |-
        Seems to get the current (system?) time as an IEEE 754 floating-point number.
        
        return: current time (maybe in seconds?)
    - name: DisableAllInterrupts
      address:
        EU: 0x2003824
        NA: 0x2003824
        JP: 0x2003824
      description: |-
        Sets the Interrupt Master Enable (IME) register to 0, which disables all CPU interrupts (even if enabled in the Interrupt Enable (IE) register).
        
        See https://problemkaputt.de/gbatek.htm#dsiomaps.
        
        return: old value in the IME register
    - name: SoundResume
      address:
        EU: 0x2003CC4
        NA: 0x2003CC4
        JP: 0x2003CC4
      description: |-
        Probably resumes the sound player if paused?
        
        This function prints the debug string "sound resume".
    - name: CardPullOutWithStatus
      address:
        EU: 0x2003D2C
        NA: 0x2003D2C
        JP: 0x2003D2C
      description: |-
        Probably aborts the program with some status code? It seems to serve a similar purpose to the exit(3) function.
        
        This function prints the debug string "card pull out %d" with the status code.
        
        r0: status code
    - name: CardPullOut
      address:
        EU: 0x2003D70
        NA: 0x2003D70
        JP: 0x2003D70
      description: |-
        Sets some global flag that probably triggers system exit?
        
        This function prints the debug string "card pull out".
        
        No params.
    - name: CardBackupError
      address:
        EU: 0x2003D94
        NA: 0x2003D94
        JP: 0x2003D94
      description: |-
        Sets some global flag that maybe indicates a save error?
        
        This function prints the debug string "card backup error".
        
        No params.
    - name: HaltProcessDisp
      address:
        EU: 0x2003DB8
        NA: 0x2003DB8
        JP: 0x2003DB8
      description: |-
        Maybe halts the process display?
        
        This function prints the debug string "halt process disp %d" with the status code.
        
        r0: status code
    - name: OverlayIsLoaded
      address:
        EU: 0x2003ED0
        NA: 0x2003ED0
        JP: 0x2003ED0
      description: |-
        Checks if an overlay with a certain group ID is currently loaded.
        
        See the LOADED_OVERLAY_GROUP_* data symbols or enum overlay_group_id in the C headers for a mapping between group ID and overlay number.
        
        r0: group ID of the overlay to check. A group ID of 0 denotes no overlay, and the return value will always be true in this case.
        return: bool
    - name: LoadOverlay
      address:
        EU: 0x20040AC
        NA: 0x20040AC
        JP: 0x20040AC
      description: |-
        Loads an overlay from ROM by its group ID.
        
        See the LOADED_OVERLAY_GROUP_* data symbols or enum overlay_group_id in the C headers for a mapping between group ID and overlay number.
        
        r0: group ID of the overlay to load
    - name: UnloadOverlay
      address:
        EU: 0x2004868
        NA: 0x2004868
        JP: 0x2004868
      description: |-
        Unloads an overlay from ROM by its group ID.
        
        See the LOADED_OVERLAY_GROUP_* data symbols or enum overlay_group_id in the C headers for a mapping between group ID and overlay number.
        
        r0: group ID of the overlay to unload
        others: ?
    - name: Rgb8ToRgb5
      address:
        EU: 0x2004FCC
        NA: 0x2004FCC
        JP: 0x2004FCC
      description: |-
        Transform the input rgb8 color to a rgb5 color
        
        r0: pointer to target rgb5 (2 bytes, aligned to LSB)
        r1: pointer to source rgb8
    - name: EuclideanNorm
      address:
        EU:
          - 0x2005050
          - 0x20050B0
        NA:
          - 0x2005050
          - 0x20050B0
        JP:
          - 0x2005050
          - 0x20050B0
      description: |-
        Computes the Euclidean norm of a two-component integer array, sort of like hypotf(3).
        
        r0: integer array [x, y]
        return: sqrt(x*x + y*y)
    - name: ClampComponentAbs
      address:
        EU: 0x2005110
        NA: 0x2005110
        JP: 0x2005110
      description: |-
        Clamps the absolute values in a two-component integer array.
        
        Given an integer array [x, y] and a maximum absolute value M, clamps each element of the array to M such that the output array is [min(max(x, -M), M), min(max(y, -M), M)].
        
        r0: 2-element integer array, will be mutated
        r1: max absolute value
    - name: GetHeldButtons
      address:
        EU: 0x20061EC
        NA: 0x20061EC
        JP: 0x20061EC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: controller
        r1: btn_ptr
        return: any_activated
    - name: GetPressedButtons
      address:
        EU: 0x200625C
        NA: 0x200625C
        JP: 0x200625C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: controller
        r1: btn_ptr
        return: any_activated
    - name: GetReleasedStylus
      address:
        EU: 0x2006C1C
        NA: 0x2006C1C
        JP: 0x2006C1C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: stylus_ptr
        return: any_activated
    - name: KeyWaitInit
      address:
        EU: 0x2006DA4
        NA: 0x2006DA4
        JP: 0x2006DA4
      description: |-
        Implements (most of?) SPECIAL_PROC_KEY_WAIT_INIT (see ScriptSpecialProcessCall).
        
        No params.
    - name: DataTransferInit
      aliases:
        - FileRom_InitDataTransfer
      address:
        EU: 0x2008168
        NA: 0x2008168
        JP: 0x2008168
      description: |-
        Initializes data transfer mode to get data from the ROM cartridge.
        
        No params.
    - name: DataTransferStop
      aliases:
        - FileRom_StopDataTransfer
      address:
        EU: 0x2008194
        NA: 0x2008194
        JP: 0x2008194
      description: |-
        Finalizes data transfer from the ROM cartridge.
        
        This function must always be called if DataTransferInit was called, or the game will crash.
        
        No params.
    - name: FileInitVeneer
      aliases:
        - FileRom_Veneer_FileInit
      address:
        EU: 0x2008204
        NA: 0x2008204
        JP: 0x2008204
      description: |-
        Likely a linker-generated veneer for FileInit.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: file_stream pointer
    - name: FileOpen
      aliases:
        - FileRom_HandleOpen
      address:
        EU: 0x2008210
        NA: 0x2008210
        JP: 0x2008210
      description: |-
        Opens a file from the ROM file system at the given path, sort of like C's fopen(3) library function.
        
        r0: file_stream pointer
        r1: file path string
    - name: FileGetSize
      address:
        EU: 0x2008244
        NA: 0x2008244
        JP: 0x2008244
      description: |-
        Gets the size of an open file.
        
        r0: file_stream pointer
        return: file size
    - name: FileRead
      aliases:
        - FileRom_HandleRead
      address:
        EU: 0x2008254
        NA: 0x2008254
        JP: 0x2008254
      description: |-
        Reads the contents of a file into the given buffer, and moves the file cursor accordingly.
        
        Data transfer mode must have been initialized (with DataTransferInit) prior to calling this function. This function looks like it's doing something akin to calling read(2) or fread(3) in a loop until all the bytes have been successfully read.
        
        Note: If code is running from IRQ mode, it appears that FileRead hangs the game. When the processor mode is forced into SYSTEM mode FileRead once again works, so it appears that ROM access only works in certain processor modes. Note that forcing the processor into a different mode is generally a bad idea and should be avoided as it will easily corrupt that processor mode's states.
        
        r0: file_stream pointer
        r1: [output] buffer
        r2: number of bytes to read
        return: number of bytes read
    - name: FileSeek
      aliases:
        - FileRom_HandleSeek
      address:
        EU: 0x20082A8
        NA: 0x20082A8
        JP: 0x20082A8
      description: |-
        Sets a file stream's position indicator.
        
        This function has the a similar API to the fseek(3) library function from C, including using the same codes for the `whence` parameter:
        - SEEK_SET=0
        - SEEK_CUR=1
        - SEEK_END=2
        
        r0: file_stream pointer
        r1: offset
        r2: whence
    - name: FileClose
      address:
        EU: 0x20082C4
        NA: 0x20082C4
        JP: 0x20082C4
      description: |-
        Closes a file.
        
        Data transfer mode must have been initialized (with DataTransferInit) prior to calling this function.
        
        Note: It is possible to keep a file stream open even if data transfer mode has been stopped, in which case the file stream can be used again if data transfer mode is reinitialized.
        
        r0: file_stream pointer
    - name: UnloadFile
      address:
        EU: 0x2008BD4
        NA: 0x2008BD4
        JP: 0x2008BD4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: addr_ptr
    - name: LoadFileFromRom
      address:
        EU: 0x2008C3C
        NA: 0x2008C3C
        JP: 0x2008C3C
      description: |-
        Loads a file from ROM by filepath into a heap-allocated buffer.
        
        r0: [output] pointer to an IO struct {ptr, len}
        r1: file path string pointer
        r2: flags
    - name: UpdateFadeStatus
      address:
        EU: 0x200BA18
        NA: 0x200B990
        JP: 0x200B990
      description: |-
        Updates the given screen_fade struct to initiate a fade for example.
        
        In addition to initiating a fade this is called when a fade out is complete to set a flag for that in the struct.
        
        r0: screen_fade
        r1: probably the type of the fade
        r2: duration
    - name: HandleFades
      address:
        EU: 0x200BA90
        NA: 0x200BA08
        JP: 0x200BA08
      description: |-
        Handles updating the screen_fade struct in all modes except dungeon mode.
        
        Gets called every frame for both screens, analyzes the fade_struct and does appropriate actions. If there's a fade in progress, it calculates the brightness on the next frame and updates the structure accordingly.
        
        r0: screen_fade
        return: bool
    - name: GetFadeStatus
      address:
        EU: 0x200BDB4
        NA: 0x200BD2C
        JP: 0x200BD2C
      description: |-
        Returns 1 if fading to black, 2 if fading to white, 0 otherwise.
        
        r0: screen_fade
        return: int
    - name: InitDebug
      aliases:
        - Debug_Init
      address:
        EU: 0x200C15C
        NA: 0x200C0D4
        JP: 0x200C0D4
      description: |-
        Would have initialized debugging-related things, if they were not removed.
        As for the release version, does nothing but set DEBUG_IS_INITIALIZED to true.
    - name: InitDebugFlag
      aliases:
        - Debug_InitDebugFlag
      address:
        EU: 0x200C194
        NA: 0x200C10C
        JP: 0x200C10C
      description: |-
        Would have initialized the debug flags.
        Does nothing in release binary.
    - name: GetDebugFlag
      aliases:
        - Debug_GetDebugFlag
      address:
        EU: 0x200C198
        NA: 0x200C110
        JP: 0x200C110
      description: |-
        Should return the value of the specified debug flag. Just returns 0 in the final binary.
        
        r0: flag ID
        return: flag value
    - name: SetDebugFlag
      aliases:
        - Debug_SetDebugFlag
      address:
        EU: 0x200C1A0
        NA: 0x200C118
        JP: 0x200C118
      description: |-
        Should set the value of a debug flag. A no-op in the final binary.
        
        r0: flag ID
        r1: flag value
    - name: InitDebugStripped6
      aliases:
        - Debug_Stripped6
      address:
        EU: 0x200C1A4
        NA: 0x200C11C
        JP: 0x200C11C
      description: "Does nothing, only called in the debug initialization function."
    - name: AppendProgPos
      address:
        EU: 0x200C1A8
        NA: 0x200C120
        JP: 0x200C120
      description: |-
        Write a base message into a string and append the file name and line number to the end in the format "file = '%s'  line = %5d\n".
        
        If no program position info is given, "ProgPos info NULL\n" is appended instead.
        
        r0: [output] str
        r1: program position info
        r2: base message
        return: number of characters printed, excluding the null-terminator
    - name: InitDebugStripped5
      aliases:
        - Debug_Stripped5
      address:
        EU: 0x200C1F0
        NA: 0x200C168
        JP: 0x200C168
      description: "Does nothing, only called in the debug initialization function."
    - name: DebugPrintTrace
      aliases:
        - Debug_PrintTrace
      address:
        EU: 0x200C1F4
        NA: 0x200C16C
        JP: 0x200C16C
      description: |-
        Would log a printf format string tagged with the file name and line number in the debug binary.
        
        This still constructs the string, but doesn't actually do anything with it in the final binary.
        
        If message is a null pointer, the string "  Print  " is used instead.
        
        r0: message
        r1: program position info (can be null)
    - name: DebugDisplay
      address:
        EU: 0x200C250
        NA: 0x200C1C8
        JP: 0x200C1C8
      description: |-
        Would display a printf format string on the top screen in the debug binary.
        
        This still constructs the string with vsprintf, but doesn't actually do anything with it in the final binary.
        
        Identical to DebugPrint0 in release builds.
        
        r0: format
        ...: variadic
    - name: DebugPrint0
      aliases:
        - Debug_Print0
      address:
        EU: 0x200C284
        NA: 0x200C1FC
        JP: 0x200C1FC
      description: |-
        Would log a printf format string in the debug binary.
        
        This still constructs the string with vsprintf, but doesn't actually do anything with it in the final binary.
        
        Identical to DebugDisplay in release builds.
        
        r0: format
        ...: variadic
    - name: InitDebugLogFlag
      aliases:
        - Debug_InitLogFlag
      address:
        EU: 0x200C2B8
        NA: 0x200C230
        JP: 0x200C230
      description: |-
        Would have initialized the debug log flags.
        Does nothing in release binary.
    - name: GetDebugLogFlag
      aliases:
        - Debug_GetLogFlag
      address:
        EU: 0x200C2BC
        NA: 0x200C234
        JP: 0x200C234
      description: |-
        Should return the value of the specified debug log flag. Just returns 0 in the final binary.
        
        r0: flag ID
        return: flag value
    - name: SetDebugLogFlag
      aliases:
        - Debug_SetLogFlag
      address:
        EU: 0x200C2C4
        NA: 0x200C23C
        JP: 0x200C23C
      description: |-
        Should set the value of a debug log flag. A no-op in the final binary.
        
        r0: flag ID
        r1: flag value
    - name: DebugPrint
      aliases:
        - Debug_Print
      address:
        EU: 0x200C2C8
        NA: 0x200C240
        JP: 0x200C240
      description: |-
        Would log a printf format string in the debug binary. A no-op in the final binary.
        
        r0: log level
        r1: format
        ...: variadic
    - name: InitDebugStripped4
      aliases:
        - Debug_Stripped4
      address:
        EU: 0x200C2D4
        NA: 0x200C24C
        JP: 0x200C24C
      description: "Does nothing, only called in the debug initialization function."
    - name: InitDebugStripped3
      aliases:
        - Debug_Stripped3
      address:
        EU: 0x200C2D8
        NA: 0x200C250
        JP: 0x200C250
      description: "Does nothing, only called in the debug initialization function."
    - name: InitDebugStripped2
      aliases:
        - Debug_Stripped2
      address:
        EU: 0x200C2DC
        NA: 0x200C254
        JP: 0x200C254
      description: "Does nothing, only called in the debug initialization function."
    - name: InitDebugStripped1
      aliases:
        - Debug_Stripped1
      address:
        EU: 0x200C2E0
        NA: 0x200C258
        JP: 0x200C258
      description: "Does nothing, only called in the debug initialization function."
    - name: FatalError
      aliases:
        - Debug_FatalError
      address:
        EU: 0x200C2E4
        NA: 0x200C25C
        JP: 0x200C25C
      description: |-
        Logs some debug messages, then hangs the process.
        
        This function is called in lots of places to bail on a fatal error. Looking at the static data callers use to fill in the program position info is informative, as it tells you the original file name (probably from the standard __FILE__ macro) and line number (probably from the standard __LINE__ macro) in the source code.
        
        r0: program position info
        r1: format
        ...: variadic
    - name: OpenAllPackFiles
      aliases:
        - DirectoryFileMngr_ExtractAllDirectoryFiles
      address:
        EU: 0x200C364
        NA: 0x200C2DC
        JP: 0x200C2DC
      description: |-
        Open the 6 files at PACK_FILE_PATHS_TABLE into PACK_FILES_OPENED. Called during game initialization.
        
        No params.
    - name: GetFileLengthInPackWithPackNb
      aliases:
        - DirectoryFileMngr_GetDirectoryFileSize
      address:
        EU: 0x200C3C4
        NA: 0x200C33C
        JP: 0x200C33C
      description: |-
        Call GetFileLengthInPack after looking up the global Pack archive by its number
        
        r0: pack file number
        r1: file number
        return: size of the file in bytes from the Pack Table of Content
    - name: LoadFileInPackWithPackId
      aliases:
        - DirectoryFileMngr_LoadDirectoryFile
      address:
        EU: 0x200C3E4
        NA: 0x200C35C
        JP: 0x200C35C
      description: |-
        Call LoadFileInPack after looking up the global Pack archive by its identifier
        
        r0: pack file identifier
        r1: file index
        r2: [output] target buffer
        return: number of read bytes (identical to the length of the pack from the Table of Content)
    - name: AllocAndLoadFileInPack
      aliases:
        - DirectoryFileMngr_OpenDirectoryFile
      address:
        EU: 0x200C410
        NA: 0x200C388
        JP: 0x200C388
      description: |-
        Allocate a file and load a file from the pack archive inside.
        The data pointed by the pointer in the output need to be freed once is not needed anymore.
        
        r0: pack file identifier
        r1: file index
        r2: [output] result struct (will contain length and pointer)
        r3: allocation flags
    - name: OpenPackFile
      aliases:
        - DirectoryFile_ExtractDirectoryFile
      address:
        EU: 0x200C468
        NA: 0x200C3E0
        JP: 0x200C3E0
      description: |-
        Open a Pack file, to be read later. Initialize the output structure.
        
        r0: [output] pack file struct
        r1: file name
    - name: GetFileLengthInPack
      aliases:
        - DirectoryFile_GetDirectoryFileSize
      address:
        EU: 0x200C4FC
        NA: 0x200C474
        JP: 0x200C474
      description: |-
        Get the length of a file entry from a Pack archive
        
        r0: pack file struct
        r1: file index
        return: size of the file in bytes from the Pack Table of Content
    - name: LoadFileInPack
      aliases:
        - DirectoryFile_LoadDirectoryFile
      address:
        EU: 0x200C50C
        NA: 0x200C484
        JP: 0x200C484
      description: |-
        Load the indexed file from the Pack archive, itself loaded from the ROM.
        
        r0: pack file struct
        r1: [output] target buffer
        r2: file index
        return: number of read bytes (identical to the length of the pack from the Table of Content)
    - name: GetDungeonResultMsg
      address:
        EU: 0x200C584
        NA: 0x200C4FC
        JP: 0x200C4FC
      description: |-
        Gets the message that is shown on the dungeon results ("The Last Outing") screen, right after the leader's name.
        
        r0: Damage source value to use when displaying the cause of fainting or the result of the expedition
        r1: [output] Buffer where the resulting message will be stored
        r2: Buffer size
        r3: (?) Seems to point to a buffer
    - name: GetDamageSource
      address:
        EU: 0x200CADC
        NA: 0x200CA54
        JP: 0x200CA54
      description: |-
        Gets the damage source for a given move-item combination.
        
        If there's no item, the source is the move ID. If the item is an orb, return DAMAGE_SOURCE_ORB_ITEM. Otherwise, return DAMAGE_SOURCE_NON_ORB_ITEM.
        
        r0: move ID
        r1: item ID
        return: damage source
    - name: GetItemCategoryVeneer
      address:
        EU: 0x200CB78
        NA: 0x200CAF0
        JP: 0x200CAF0
      description: |-
        Likely a linker-generated veneer for GetItemCategory.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: Item ID
        return: Category ID
    - name: GetItemMoveId16
      address:
        EU: 0x200CB84
        NA: 0x200CAFC
        JP: 0x200CAFC
      description: |-
        Wraps GetItemMoveId, ensuring that the return value is 16-bit.
        
        r0: item ID
        return: move ID
    - name: IsThrownItem
      address:
        EU: 0x200CB98
        NA: 0x200CB10
        JP: 0x200CB10
      description: |-
        Checks if a given item ID is a thrown item (CATEGORY_THROWN_LINE or CATEGORY_THROWN_ARC).
        
        r0: item ID
        return: bool
    - name: IsNotMoney
      address:
        EU: 0x200CBB4
        NA: 0x200CB2C
        JP: 0x200CB2C
      description: |-
        Checks if an item ID is not ITEM_POKE.
        
        r0: item ID
        return: bool
    - name: IsEdible
      address:
        EU: 0x200CBD4
        NA: 0x200CB4C
        JP: 0x200CB4C
      description: |-
        Checks if an item has an item category of CATEGORY_BERRIES_SEEDS_VITAMINS or CATEGORY_FOOD_GUMMIES.
        
        r0: item ID
        return: bool
    - name: IsHM
      address:
        EU: 0x200CBF8
        NA: 0x200CB70
        JP: 0x200CB70
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: bool
    - name: IsGummi
      address:
        EU: 0x200CC7C
        NA: 0x200CBF4
        JP: 0x200CBF4
      description: |-
        Checks if an item is a Gummi.
        
        r0: item ID
        return: bool
    - name: IsAuraBow
      address:
        EU: 0x200CC9C
        NA: 0x200CC14
        JP: 0x200CC14
      description: |-
        Checks if an item is one of the aura bows received at the start of the game.
        
        r0: item ID
        return: bool
    - name: IsLosableItem
      address:
        EU: 0x200CCC0
        NA: 0x200CC38
        JP: 0x200CC38
      description: |-
        Checks if an item can be lost after fainting in a dungeon. Specifically calls IsAuraBow and checks item::f_in_shop
        so that the player can't keep an aura bow they haven't paid for yet.
        
        r0: item pointer
        return: bool
    - name: IsTreasureBox
      address:
        EU: 0x200CD0C
        NA: 0x200CC84
        JP: 0x200CC84
      description: |-
        Checks if the given item ID is a treasure box
        
        In particular, it checks if the category of the item is CATEGORY_TREASURE_BOXES_1, CATEGORY_TREASURE_BOXES_2 or CATEGORY_TREASURE_BOXES_3.
        
        r0: item ID
        return: True if the item is a treasure box, false otherwise
    - name: IsStorableItem
      address:
        EU: 0x200CD30
        NA: 0x200CCA8
        JP: 0x200CCA8
      description: |-
        Checks if an item can be put into storage. Specifically checks for the Wonder Egg, Poke, and Used TMs. Used TMs
        likely can't be stored because the move the TM teaches would be lost when sent to storage.
        
        r0: item_id
        return: bool
    - name: IsShoppableItem
      address:
        EU: 0x200CD68
        NA: 0x200CCE0
        JP: 0x200CCE0
      description: |-
        Checks if an item can be bought and sold from a Kecleon shop. Includes items like the Gold Thorn, Poke, Golden
        Mask, Amber Tear, etc. Also has a special check to make sure an item's buy and sell price is more than 0.
        
        r0: item_id
        return: bool
    - name: IsValidTargetItem
      address:
        EU: 0x200CE34
        NA: 0x200CDAC
        JP: 0x200CDAC
      description: |-
        Checks if an item is a valid target item for missions. Returns true for any item less than ITEM_UNNAMED_0x16B.
        Appears to check a list for valid items above ITEM_UNNAMED_0x16B, but the list is empty?
        
        r0: item_id
        return: bool
    - name: IsItemUsableNow
      address:
        EU: 0x200CE80
        NA: 0x200CDF8
        JP: 0x200CDF8
      description: |-
        Checks if an item can be used right now. Returns true for all items that are not in a shop. If the item is in a
        shop, specifically checks for TMs/HMs and items that provide permanent buffs (Gummis, Sitrus Berry, Ginseng, etc).
        
        r0: item pointer
        return: bool
    - name: IsTicketItem
      address:
        EU: 0x200CEFC
        NA: 0x200CE74
        JP: 0x200CE74
      description: |-
        Checks if an item is a ticket that can be used in the recycle shop (ITEM_PRIZE_TICKET, ITEM_SILVER_TICKET,
        ITEM_GOLD_TICKET, and ITEM_PRISM_TICKET).
        
        r0: item_id
        return: bool
    - name: InitItem
      address:
        EU: 0x200CF24
        NA: 0x200CE9C
        JP: 0x200CE9C
      description: |-
        Initialize an item struct with the given information.
        
        This will resolve the quantity based on the item type. For Poké, the quantity code will always be set to 1. For thrown items, the quantity code will be randomly generated on the range of valid quantities for that item type. For non-stackable items, the quantity code will always be set to 0. Otherwise, the quantity will be assigned from the quantity argument.
        
        r0: pointer to item to initialize
        r1: item ID
        r2: quantity
        r3: sticky flag
    - name: InitStandardItem
      address:
        EU: 0x200CFE0
        NA: 0x200CF58
        JP: 0x200CF58
      description: |-
        Wrapper around InitItem with quantity set to 0.
        
        r0: pointer to item to initialize
        r1: item ID
        r2: sticky flag
    - name: InitBulkItem
      address:
        EU: 0x200D000
        NA: 0x200CF78
        JP: 0x200CF78
      description: |-
        Initialize a struct bulk_item with the given information.
        
        This will resolve the quantity based on the item type. For Poké, the quantity code will always be set to 1. For thrown items, the quantity code will be randomly generated on the range of valid quantities for that item type. For non-stackable items, the quantity code will always be set to 0.
        
        r0: pointer to bulk item to initialize
        r1: item ID
    - name: BulkItemToItem
      address:
        EU: 0x200D078
        NA: 0x200CFF0
        JP: 0x200CFF0
      description: |-
        Convert a bulk_item into an equivalent item.
        
        r0: pointer to item to initialize
        r1: pointer to bulk_item
    - name: ItemToBulkItem
      address:
        EU: 0x200D128
        NA: 0x200D0A0
        JP: 0x200D0A0
      description: |-
        Convert an item into an equivalent bulk_item.
        
        r0: pointer to bulk_item to initialize
        r1: pointer to item
    - name: GetDisplayedBuyPrice
      address:
        EU: 0x200D158
        NA: 0x200D0D0
        JP: 0x200D0D0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        return: buy price
    - name: GetDisplayedSellPrice
      address:
        EU: 0x200D1A0
        NA: 0x200D118
        JP: 0x200D118
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        return: sell price
    - name: GetActualBuyPrice
      address:
        EU: 0x200D1E8
        NA: 0x200D160
        JP: 0x200D160
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        return: buy price
    - name: GetActualSellPrice
      address:
        EU: 0x200D230
        NA: 0x200D1A8
        JP: 0x200D1A8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        return: sell price
    - name: FindItemInInventory
      address:
        EU: 0x200D300
        NA: 0x200D278
        JP: 0x200D278
      description: |-
        Returns x if item_id is at position x in the bag
        Returns 0x8000+x if item_id is at position x in storage
        Returns -1 if item is not found
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_id
        return: inventory index
    - name: SprintfStatic
      address:
        EU:
          - 0x200D6BC
          - 0x200E808
          - 0x2013800
          - 0x20177C4
          - 0x2017ADC
          - 0x202378C
          - 0x20239B0
          - 0x203822C
          - 0x2039734
          - 0x203AC6C
          - 0x203D2A0
          - 0x2041A48
          - 0x2042DA0
          - 0x2052750
          - 0x2054DDC
          - 0x2060D64
        NA:
          - 0x200D634
          - 0x200E990
          - 0x2013758
          - 0x20176E4
          - 0x2017A40
          - 0x2023590
          - 0x202378C
          - 0x2037F30
          - 0x2039438
          - 0x203A970
          - 0x203CFA4
          - 0x204174C
          - 0x2042A84
          - 0x2052418
          - 0x2054A60
          - 0x20609E8
        JP:
          - 0x200D634
          - 0x200E9C0
          - 0x2013728
          - 0x2017740
          - 0x2017A98
          - 0x20235E0
          - 0x20237DC
          - 0x20381FC
          - 0x2039840
          - 0x203AD6C
          - 0x203D38C
          - 0x2041AB4
          - 0x2042DF4
          - 0x2052768
          - 0x2054D98
          - 0x2060CD8
      description: |-
        Functionally the same as sprintf, just defined statically in many different places.
        
        Since this is essentially just a wrapper around vsprintf(3), this function was probably statically defined in a header somewhere and included in a bunch of different places. See the actual sprintf for the one in libc.
        
        r0: str
        r1: format
        ...: variadic
        return: number of characters printed, excluding the null-terminator
    - name: ItemZInit
      address:
        EU: 0x200D8A4
        NA: 0x200D81C
        JP: 0x200D84C
      description: |-
        Zero-initializes an item struct.
        
        r0: item
    - name: AreItemsEquivalent
      address:
        EU: 0x200D8BC
        NA: 0x200D834
        JP: 0x200D864
      description: |-
        Checks whether two items are equivalent and only checks the bitflags specified by the bitmask.
        
        r0: item
        r1: item
        r2: bitmask
        return: bool
    - name: WriteItemsToSave
      address:
        EU: 0x200D9E4
        NA: 0x200D95C
        JP: 0x200D98C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
        return: ?
    - name: ReadItemsFromSave
      address:
        EU: 0x200DCCC
        NA: 0x200DC44
        JP: 0x200DC74
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
        return: ?
    - name: IsItemAvailableInDungeonGroup
      address:
        EU: 0x200E094
        NA: 0x200E00C
        JP: 0x200E03C
      description: |-
        Checks one specific bit from AVAILABLE_ITEMS_IN_GROUP_TABLE?
        
        r0: dungeon ID
        r1: item ID
        return: bool
    - name: GetItemIdFromList
      address:
        EU: 0x200E0DC
        NA: 0x200E054
        JP: 0x200E084
      description: |-
        category_num and item_num are numbers in range 0-10000
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: list_id
        r1: category_num
        r2: item_num
        return: item ID
    - name: NormalizeTreasureBox
      address:
        EU: 0x200E280
        NA: 0x200E1F8
        JP: 0x200E228
      description: |-
        If the item is a treasure box return the first version of the treasure box in the item list.
        Otherwise, return the same item ID.
        
        r0: item ID
        return: normalized item ID
    - name: SortItemList
      address:
        EU: 0x200E428
        NA: 0x200E3A0
        JP: 0x200E3D0
      description: |-
        Attempts to combine stacks of throwable items, sort the list, and then remove empty items.
        Appears to use selection sort to sort the list in place.
        
        r0: item array
        r1: number of items in array
    - name: RemoveEmptyItems
      address:
        EU: 0x200E698
        NA: 0x200E610
        JP: 0x200E640
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: list_pointer
        r1: size
    - name: LoadItemPspi2n
      address:
        EU: 0x200E760
        NA: 0x200E6D8
        JP: 0x200E708
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GetExclusiveItemType
      address:
        EU: 0x200E830
        NA: 0x200E760
        JP: 0x200E790
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: ?
    - name: GetExclusiveItemOffsetEnsureValid
      address:
        EU: 0x200E84C
        NA: 0x200E77C
        JP: 0x200E7AC
      description: |-
        Gets the exclusive item offset, which is the item ID relative to that of the first exclusive item, the Prism Ruff.
        
        If the given item ID is not a valid item ID, ITEM_PLAIN_SEED (0x55) is returned. This is a bug, since 0x55 is the valid exclusive item offset for the Icy Globe.
        
        r0: item ID
        return: offset
    - name: IsItemValid
      address:
        EU: 0x200E890
        NA: 0x200E7C0
        JP: 0x200E7F0
      description: |-
        Checks if an item is valid given its ID.
        
        In particular, checks if the "is valid" flag is set on its item_p.bin entry.
        
        r0: item ID
        return: bool
    - name: GetExclusiveItemParameter
      address:
        EU: 0x200E8B8
        NA: 0x200E7E8
        JP: 0x200E818
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: ?
    - name: GetItemCategory
      address:
        EU: 0x200E8D8
        NA: 0x200E808
        JP: 0x200E838
      description: |-
        Returns the category of the specified item
        
        r0: Item ID
        return: Item category
    - name: EnsureValidItem
      address:
        EU: 0x200E8F8
        NA: 0x200E828
        JP: 0x200E858
      description: |-
        Checks if the given item ID is valid (using IsItemValid). If so, return the given item ID. Otherwise, return ITEM_PLAIN_SEED.
        
        r0: item ID
        return: valid item ID
    - name: GetItemName
      address:
        EU: 0x200E934
        NA: 0x200E864
        JP: 0x200E894
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: item name
    - name: GetItemNameFormatted
      address:
        EU: 0x200E954
        NA: 0x200E884
        JP: 0x200E8B4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] name
        r1: item_id
        r2: flag
        r3: flag2
    - name: GetItemBuyPrice
      address:
        EU: 0x200EA60
        NA: 0x200E9B8
        JP: 0x200E9E8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: buy price
    - name: GetItemSellPrice
      address:
        EU: 0x200EA80
        NA: 0x200E9D8
        JP: 0x200EA08
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: sell price
    - name: GetItemSpriteId
      address:
        EU: 0x200EAA0
        NA: 0x200E9F8
        JP: 0x200EA28
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: sprite ID
    - name: GetItemPaletteId
      address:
        EU: 0x200EAC0
        NA: 0x200EA18
        JP: 0x200EA48
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: palette ID
    - name: GetItemActionName
      address:
        EU: 0x200EAE0
        NA: 0x200EA38
        JP: 0x200EA68
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: action name ID
    - name: GetThrownItemQuantityLimit
      address:
        EU: 0x200EB00
        NA: 0x200EA58
        JP: 0x200EA88
      description: |-
        Get the minimum or maximum quantity for a given thrown item ID.
        
        r0: item ID
        r1: 0 for minimum, 1 for maximum
        return: minimum/maximum quantity for the given item ID
    - name: GetItemMoveId
      address:
        EU: 0x200EB28
        NA: 0x200EA80
        JP: 0x200EAB0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: move ID
    - name: TestItemAiFlag
      address:
        EU: 0x200EB48
        NA: 0x200EAA0
        JP: 0x200EAD0
      description: |-
        Returns a boolean indicating whether the item is consumable, throwable at an ally, or throwable at an enemy, depending on item_flag.
        The table used for this is inaccessible in the code, as it is loaded from a file in the ROM at runtime.
        Bit 7 in the table corresponds to ITEM_FLAG_CONSUMABLE, bit 6 to ITEM_FLAG_THROWABLE_AT_ALLY, and bit 5 to ITEM_FLAG_THROWABLE_AT_ENEMY.
        
        r0: item_id enum
        r1: item_flag enum. Function will test a different allowed AI action depending on the value.
        return: bool
    - name: IsItemInTimeDarkness
      address:
        EU: 0x200EBD8
        NA: 0x200EB30
        JP: 0x200EB60
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: bool
    - name: IsItemValidVeneer
      address:
        EU: 0x200EC00
        NA: 0x200EB58
        JP: 0x200EB88
      description: |-
        Likely a linker-generated veneer for IsItemValid.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: item ID
        return: bool
    - name: SetActiveInventoryToMain
      address:
        EU: 0x200EC74
        NA: 0x200EBCC
        JP: 0x200EBFC
      description: |-
        Changes the currently active inventory to TEAM_MAIN.
        
        No params.
    - name: AllInventoriesZInit
      address:
        EU: 0x200EC84
        NA: 0x200EBDC
        JP: 0x200EC0C
      description: |-
        Initializes all inventories (TEAM_MAIN, TEAM_SPECIAL_EPISODE, TEAM_RESCUE) to empty and sets the active inventory
        to TEAM_MAIN.
        
        No params.
    - name: SpecialEpisodeInventoryZInit
      address:
        EU: 0x200ECF0
        NA: 0x200EC48
        JP: 0x200EC78
      description: |-
        Initializes the TEAM_SPECIAL_EPISODE inventory to be empty.
        
        No params.
    - name: RescueInventoryZInit
      address:
        EU: 0x200ED38
        NA: 0x200EC90
        JP: 0x200ECC0
      description: |-
        Initializes the TEAM_RESCUE inventory to be empty.
        
        No params.
    - name: SetActiveInventory
      address:
        EU: 0x200ED80
        NA: 0x200ECD8
        JP: 0x200ED08
      description: |-
        Changes the currently active inventory. Has one for the main team, rescue team, and the special
        episode team.
        
        r0: team ID
    - name: GetMoneyCarried
      address:
        EU: 0x200EDA4
        NA: 0x200ECFC
        JP: 0x200ED2C
      description: |-
        Gets the amount of money the player is carrying.
        
        return: value
    - name: SetMoneyCarried
      address:
        EU: 0x200EDC4
        NA: 0x200ED1C
        JP: 0x200ED4C
      description: |-
        Sets the amount of money the player is carrying, clamping the value to the range [0, MAX_MONEY_CARRIED].
        
        r0: new value
    - name: AddMoneyCarried
      address:
        EU: 0x200EE00
        NA: 0x200ED58
        JP: 0x200ED88
      description: |-
        Adds the amount of money to the player's current amount of money. Just calls
        SetMoneyCarried with the current money + money gained.
        
        r0: money gained (can be negative)
    - name: GetCurrentBagCapacity
      address:
        EU: 0x200EE2C
        NA: 0x200ED84
        JP: 0x200EDB4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: bag capacity
    - name: IsBagFull
      address:
        EU: 0x200EE68
        NA: 0x200EDC0
        JP: 0x200EDF0
      description: |-
        Implements SPECIAL_PROC_IS_BAG_FULL (see ScriptSpecialProcessCall).
        
        return: bool
    - name: GetNbItemsInBag
      address:
        EU: 0x200EEA4
        NA: 0x200EDFC
        JP: 0x200EE2C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: # items
    - name: CountNbItemsOfTypeInBag
      address:
        EU: 0x200EEF4
        NA: 0x200EE4C
        JP: 0x200EE7C
      description: |-
        Returns the number of items of the given kind in the bag
        
        r0: item ID
        return: count
    - name: CountItemTypeInBag
      address:
        EU: 0x200EF30
        NA: 0x200EE88
        JP: 0x200EEB8
      description: |-
        Implements SPECIAL_PROC_COUNT_ITEM_TYPE_IN_BAG (see ScriptSpecialProcessCall).
        
        Irdkwia's notes: Count also stackable
        
        r0: item ID
        return: number of items of the specified ID in the bag
    - name: IsItemInBag
      address:
        EU: 0x200EF88
        NA: 0x200EEE0
        JP: 0x200EF10
      description: |-
        Checks if an item is in the player's bag.
        
        r0: item ID
        return: bool
    - name: IsItemWithFlagsInBag
      address:
        EU: 0x200EFC8
        NA: 0x200EF20
        JP: 0x200EF50
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        r1: flags
        return: bool
    - name: IsItemInTreasureBoxes
      address:
        EU: 0x200F014
        NA: 0x200EF6C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: bool
    - name: IsHeldItemInBag
      address:
        EU: 0x200F074
        NA: 0x200EFCC
        JP: 0x200EF9C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        return: bool
    - name: IsItemForSpecialSpawnInBag
      address:
        EU: 0x200F0F8
        NA: 0x200F050
        JP: 0x200F020
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: bool
    - name: HasStorableItems
      address:
        EU: 0x200F18C
        NA: 0x200F0E4
        JP: 0x200F0B4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: bool
    - name: GetItemIndex
      address:
        EU: 0x200F1F4
        NA: 0x200F14C
        JP: 0x200F11C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: index
    - name: GetEquivItemIndex
      address:
        EU: 0x200F234
        NA: 0x200F18C
        JP: 0x200F15C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: index
    - name: GetEquippedThrowableItem
      address:
        EU: 0x200F2B0
        NA: 0x200F208
        JP: 0x200F1D8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: index
    - name: GetFirstUnequippedItemOfType
      address:
        EU: 0x200F314
        NA: 0x200F26C
        JP: 0x200F23C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: index
    - name: CopyItemAtIdx
      address:
        EU: 0x200F388
        NA: 0x200F2E0
        JP: 0x200F2B0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
        r1: [output] item_ptr
        return: exists
    - name: GetItemAtIdx
      address:
        EU: 0x200F3F0
        NA: 0x200F348
        JP: 0x200F318
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
        return: item pointer
    - name: RemoveEmptyItemsInBag
      address:
        EU: 0x200F418
        NA: 0x200F370
        JP: 0x200F340
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: RemoveItemNoHole
      address:
        EU: 0x200F438
        NA: 0x200F390
        JP: 0x200F360
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
        return: ?
    - name: RemoveItem
      address:
        EU: 0x200F4AC
        NA: 0x200F404
        JP: 0x200F3D4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
    - name: RemoveHeldItemNoHole
      address:
        EU: 0x200F4FC
        NA: 0x200F454
        JP: 0x200F424
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: held_index
    - name: RemoveItemByIdAndStackNoHole
      address:
        EU: 0x200F57C
        NA: 0x200F4D4
        JP: 0x200F4A4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: ?
    - name: RemoveEquivItem
      address:
        EU: 0x200F600
        NA: 0x200F558
        JP: 0x200F528
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: ?
    - name: RemoveEquivItemNoHole
      address:
        EU: 0x200F6A8
        NA: 0x200F600
        JP: 0x200F5D0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: ?
    - name: DecrementStackItem
      address:
        EU: 0x200F73C
        NA: 0x200F694
        JP: 0x200F664
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item_ptr
        return: ?
    - name: RemoveItemNoHoleCheck
      address:
        EU: 0x200F7C0
        NA: 0x200F718
        JP: 0x200F6E8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
        return: ?
    - name: RemoveFirstUnequippedItemOfType
      address:
        EU: 0x200F840
        NA: 0x200F798
        JP: 0x200F768
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        return: ?
    - name: RemoveAllItems
      address:
        EU: 0x200F850
        NA: 0x200F7A8
        JP: 0x200F778
      description: |-
        WARNING! Does not remove from party items
        
        Note: unverified, ported from Irdkwia's notes
    - name: RemoveAllItemsStartingAt
      address:
        EU: 0x200F884
        NA: 0x200F7DC
        JP: 0x200F7AC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: index
    - name: SpecialProcAddItemToBag
      address:
        EU: 0x200F8F4
        NA: 0x200F84C
        JP: 0x200F81C
      description: |-
        Implements SPECIAL_PROC_ADD_ITEM_TO_BAG (see ScriptSpecialProcessCall).
        
        r0: pointer to an owned_item
        return: bool
    - name: AddItemToBagNoHeld
      address:
        EU: 0x200F91C
        NA: 0x200F874
        JP: 0x200F844
      description: |-
        A wrapper around AddItemToBag with held_by being 0 (no holder).
        
        r0: item_str
        return: bool item was successfully added to the bag
    - name: AddItemToBag
      address:
        EU: 0x200F92C
        NA: 0x200F884
        JP: 0x200F854
      description: |-
        Attempts to add an item to the bag.
        
        r0: item_str
        r1: held_by
        return: bool item was successfully added to the bag
    - name: CleanStickyItemsInBag
      address:
        EU: 0x200F9B8
        NA: 0x200F910
        JP: 0x200F8E0
      description: |-
        Removes the sticky flag from all the items currently in the bag.
        
        No params.
    - name: CountStickyItemsInBag
      address:
        EU: 0x200F9E8
        NA: 0x200F940
        JP: 0x200F910
      description: |-
        Counts the number of sticky items currently in the bag.
        
        return: number of sticky items
    - name: TransmuteHeldItemInBag
      address:
        EU: 0x200FB10
        NA: 0x200FA68
        JP: 0x200FA38
      description: |-
        Looks for an item in the bag that has the same holder (held_by) as the transmute item and convert
        their equivalent item in the treasure bag into the transmute item. The monster's held item on
        their struct should be updated accordingly directly before or after calling this function.
        
        r0: transmute_item
        return: bool whether or not the item could be transmuted
    - name: SetFlagsForHeldItemInBag
      address:
        EU: 0x200FB94
        NA: 0x200FAEC
        JP: 0x200FABC
      description: |-
        Looks for an item in the bag that has the holder (held_by) as the item and make their equivalent
        item in the treasure bag sticky. The monster's held item on their struct should be updated
        accordingly directly before or after calling this function. Mostly used for making existing items
        sticky.
        
        r0: held_by
        r1: item bitflags
    - name: RemoveHolderForItemInBag
      address:
        EU: 0x200FBFC
        NA: 0x200FB54
        JP: 0x200FB24
      description: |-
        Looks for an item in the bag that is equivalent and make the holder none. The monster's held item
        on their struct should be updated accordingly directly before or after calling this function.
        
        r0: pointer to an item
    - name: SetHolderForItemInBag
      address:
        EU: 0x200FC88
        NA: 0x200FBE0
        JP: 0x200FBB0
      description: |-
        Modifies the item at the index to be held by the monster specified and updates the item with the
        holder as well. This only modifies the flags and held_by of the item.
        
        r0: item index
        r1: pointer to an item
        r2: held_by
    - name: SortItemsInBag
      address:
        EU: 0x200FCCC
        NA: 0x200FC24
        JP: 0x200FBF4
      description: |-
        Sorts the current items in the item bag but first checks if any Poke is in the bag to remove. If
        Poke is found, add it to money carried.
        
        No params.
    - name: RemovePokeItemsInBag
      address:
        EU: 0x200FD54
        NA: 0x200FCAC
        JP: 0x200FC7C
      description: |-
        Checks the bag for any Poke and removes it after adding it to money carried.
        
        No params.
    - name: IsStorageFull
      address:
        EU: 0x200FDFC
        NA: 0x200FD54
        JP: 0x200FD24
      description: |-
        Checks if the storage is full accounting for the current rank of the team.
        Implements SPECIAL_PROC_0x39 (see ScriptSpecialProcessCall).
        
        return: bool
    - name: CountNbOfItemsInStorage
      address:
        EU: 0x200FE20
        NA: 0x200FD78
        JP: 0x200FD48
      description: |-
        Counts the number of items currently in storage (including invalid items).
        
        return: number of items in storage
    - name: CountNbOfValidItemsInStorage
      address:
        EU: 0x200FE58
        NA: 0x200FDB0
        JP: 0x200FD80
      description: |-
        Counts the number of items currently in storage that are valid.
        
        return: number of valid items in storage
    - name: CountNbOfValidItemsInTimeDarknessInStorage
      address:
        EU: 0x200FEA8
        NA: 0x200FE00
        JP: 0x200FDD0
      description: |-
        Counts the number of items currently in storage that are valid and in time and darkness.
        
        return: number of valid items in storage
    - name: CountNbItemsOfTypeInStorage
      address:
        EU: 0x200FF50
        NA: 0x200FEA8
        JP: 0x200FE78
      description: |-
        Counts the number of instances of an item in storage not accounting for the number of items
        in a stack.
        
        r0: item ID
        return: count
    - name: CountItemTypeInStorage
      address:
        EU: 0x200FF8C
        NA: 0x200FEE4
        JP: 0x200FEB4
      description: |-
        Counts the number of a certain item in storage accounting for stackable items.
        Implements SPECIAL_PROC_COUNT_ITEM_TYPE_IN_STORAGE (see ScriptSpecialProcessCall).
        
        r0: pointer to an bulk_item
        return: number of items of the specified ID in storage
    - name: GetEquivBulkItemIdxInStorage
      address:
        EU: 0x200FFF8
        NA: 0x200FF50
        JP: 0x200FF20
      description: |-
        Checks for a storage item equivalent to the bulk_item and returns the index of the item in storage.
        Returns -1 if unable to find an equivalent item.
        
        r0: pointer to a bulk_item
        return: index in storage
    - name: ConvertStorageItemAtIdxToBulkItem
      address:
        EU: 0x2010054
        NA: 0x200FFAC
        JP: 0x200FF7C
      description: |-
        Get an item in storage and converts it into an equivalent bulk_item. This does not remove the
        item from storage.
        
        r0: item index
        r1: [output] pointer to a bulk_item
        return: bool whether or not the item id is not 0
    - name: ConvertStorageItemAtIdxToItem
      address:
        EU: 0x201009C
        NA: 0x200FFF4
        JP: 0x200FFC4
      description: |-
        Get an item in storage and converts it into an equivalent item. The item does NOT have the exists
        flag set to true. This does not remove the item from storage.
        
        r0: item index
        r1: [output] pointer to an item
        return: bool whether or not the item id is not 0
    - name: RemoveItemAtIdxInStorage
      address:
        EU: 0x2010248
        NA: 0x20101A0
        JP: 0x2010170
      description: |-
        Remove an item at the specified index from storage.
        
        r0: storage item idx
        return: bool whether or not the item was removed (fails if there is no storage item at the index)
    - name: RemoveBulkItemInStorage
      address:
        EU: 0x201028C
        NA: 0x20101E4
        JP: 0x20101B4
      description: |-
        Removes a storage item equivalent to the bulk_item passed from storage.
        Probably? Implements SPECIAL_PROC_REMOVE_ITEM_TYPE_IN_STORAGE (see ScriptSpecialProcessCall).
        
        r0: pointer to a bulk_item
        return: bool whether an item was removed
    - name: RemoveItemInStorage
      address:
        EU: 0x2010308
        NA: 0x2010260
        JP: 0x2010230
      description: |-
        Removes a storage item equivalent to the item passed from storage.
        
        r0: pointer to an item
        return: bool whether an item was removed
    - name: StorageZInit
      address:
        EU: 0x2010384
        NA: 0x20102DC
        JP: 0x20102AC
      description: |-
        Initializes the storage to be empty.
        
        No params.
    - name: AddBulkItemToStorage
      address:
        EU: 0x20103C4
        NA: 0x201031C
        JP: 0x20102EC
      description: |-
        Attempts to add the bulk_item to storage.
        Implements SPECIAL_PROC_ADD_ITEM_TO_STORAGE (see ScriptSpecialProcessCall).
        
        r0: pointer to a bulk_item
        return: bool whether an item was added
    - name: AddItemToStorage
      address:
        EU: 0x2010454
        NA: 0x20103AC
        JP: 0x201037C
      description: |-
        Attempts to add the item to storage.
        
        r0: pointer to an item
        return: bool whether an item was added
    - name: SortItemsInStorage
      address:
        EU: 0x20104CC
        NA: 0x2010424
        JP: 0x20103F4
      description: |-
        Sorts the item in storage by making converting them into normal items in a temporary list and
        using SortItemList on them. After, it puts the list of items back into storage. This may also have
        another use or do something broader than just sorting because it outputs a bool array.
        
        r0: [output] bool array?
        r1: number of items to sort (usually just the current size of storage)
    - name: AllKecleonShopsZInit
      address:
        EU: 0x201063C
        NA: 0x2010594
        JP: 0x2010564
      description: |-
        Empties the Kecleon shop for both TEAM_MAIN and TEAM_SPECIAL_EPISODE. TEAM_RESCUE does not appear to have its own
        Kecleon shop.
        
        No params.
    - name: SpecialEpisodeKecleonShopZInit
      address:
        EU: 0x20106FC
        NA: 0x2010654
        JP: 0x2010624
      description: |-
        Empties the special episode Kecleon shop.
        
        No params.
    - name: SetActiveKecleonShop
      address:
        EU: 0x201076C
        NA: 0x20106C4
        JP: 0x2010694
      description: |-
        Changes the currently active Kecleon shop. Has one for TEAM_MAIN and TEAM_SPECIAL_EPISODE. TEAM_RESCUE does not
        appear to have its own copy of the Kecleon shop it seems to use TEAM_MAIN intead of TEAM_RESCUE.
        
        r0: team ID
    - name: GetMoneyStored
      address:
        EU: 0x20107B4
        NA: 0x201070C
        JP: 0x20106DC
      description: |-
        Gets the amount of money the player has stored in the Duskull Bank.
        
        return: amount of money stored
    - name: SetMoneyStored
      address:
        EU: 0x20107CC
        NA: 0x2010724
        JP: 0x20106F4
      description: |-
        Sets the amount of money the player has stored in the Duskull Bank, clamping the value to the range [0, MAX_MONEY_STORED].
        
        r0: new value
    - name: AddMoneyStored
      address:
        EU: 0x2010800
        NA: 0x2010758
        JP: 0x2010728
      description: |-
        Adds money to the amount of money the player has stored in the Duskull Bank. Just calls SetMoneyStored with the current money + money gained.
        
        r0: money gained (can be negative)
    - name: SortKecleonItems1
      address:
        EU: 0x20109FC
        NA: 0x2010954
        JP: 0x2010924
      description: |-
        Sorts the items for the normal Kecleon Shop items in Treasure Town.
        
        No params.
    - name: GenerateKecleonItems1
      address:
        EU: 0x2010AF4
        NA: 0x2010A4C
        JP: 0x2010A1C
      description: |-
        Generates the Kecleon Shop items for both shopkeepers in Treasure Town. This function also calls
        GenerateKecleonItems2 despite GenerateKecleonItems2 being called directly after. This means that
        any items generated for the Orb/TM shop will be overwritten by the subsequent call to
        GenerateKecleonItems2.
        
        r0: kecleon_shop_version to use
    - name: SortKecleonItems2
      address:
        EU: 0x2010D08
        NA: 0x2010C60
        JP: 0x2010C30
      description: |-
        Sorts the items for the Orb/TM Kecleon Shop items in Treasure Town.
        
        No params.
    - name: GenerateKecleonItems2
      address:
        EU: 0x2010E00
        NA: 0x2010D58
        JP: 0x2010D28
      description: |-
        Generates the Kecleon Shop items for the TMs/Orbs shop in Treasure Town.
        
        r0: kecleon_shop_version to use
    - name: GetExclusiveItemOffset
      address:
        EU: 0x2010EE8
        NA: 0x2010E40
        JP: 0x2010E10
      description: |-
        Gets the exclusive item offset, which is the item ID relative to that of the first exclusive item, the Prism Ruff.
        
        r0: item ID
        return: offset
    - name: ApplyExclusiveItemStatBoosts
      address:
        EU: 0x2010F0C
        NA: 0x2010E64
        JP: 0x2010E34
      description: |-
        Applies stat boosts from an exclusive item.
        
        r0: item ID
        r1: pointer to attack stat to modify
        r2: pointer to special attack stat to modify
        r3: pointer to defense stat to modify
        stack[0]: pointer to special defense stat to modify
    - name: SetExclusiveItemEffect
      address:
        EU: 0x2011028
        NA: 0x2010F80
        JP: 0x2010F50
      description: |-
        Sets the bit for an exclusive item effect.
        
        r0: pointer to the effects bitvector to modify
        r1: exclusive item effect ID
    - name: ExclusiveItemEffectFlagTest
      address:
        EU: 0x201104C
        NA: 0x2010FA4
        JP: 0x2010F74
      description: |-
        Tests the exclusive item bitvector for a specific exclusive item effect.
        
        r0: the effects bitvector to test
        r1: exclusive item effect ID
        return: bool
    - name: IsExclusiveItemIdForMonster
      address:
        EU: 0x201106C
        NA: 0x2010FC4
        JP: 0x2010F94
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item ID
        r1: monster ID
        r2: type ID 1
        r3: type ID 2
        return: bool
    - name: IsExclusiveItemForMonster
      address:
        EU: 0x201113C
        NA: 0x2011094
        JP: 0x2011064
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: item
        r1: monster ID
        r2: type ID 1
        r3: type ID 2
        return: bool
    - name: BagHasExclusiveItemTypeForMonster
      address:
        EU: 0x2011180
        NA: 0x20110D8
        JP: 0x20110A8
      description: |-
        Checks the bag for any exclusive item that applies to the monster or type(s) and gets the item ID.
        
        r0: excl_type
        r1: monster ID
        r2: type ID 1
        r3: type ID 2
        return: exclusive item ID
    - name: GetExclusiveItemForMonsterFromBag
      address:
        EU: 0x2011214
        NA: 0x201116C
        JP: 0x201113C
      description: |-
        Checks the bag for any exclusive item that applies to the monster or type(s) and copies that item
        into the passed item struct.
        
        r0: [output] item_struct
        r1: excl_type
        r2: monster ID
        r3: type ID 1
        stack[0]: type ID 2
        return: bool whether an exclusive item was found
    - name: GetHpBoostFromExclusiveItems
      address:
        EU: 0x201143C
        NA: 0x2011394
        JP: 0x2011364
      description: |-
        Calculates the current HP boost from exclusive items. If none are active, return 0.
        
        r0: some struct that has species ID in it?
        return: max HP boost from exclusive items
    - name: ApplyGummiBoostsToGroundMonster
      address:
        EU: 0x20115D0
        NA: 0x2011528
        JP: 0x20114F8
      description: |-
        Applies the IQ boosts from eating a Gummi to the target monster. Basically a wrapper around
        ApplyGummiBoostsGroundMode for struct ground_monster.
        
        r0: ground monster pointer
        r1: Item ID
        r2: bool to NOT increase stats
        r3: [output] pointer to a struct gummi_result to fill out
    - name: ApplyGummiBoostsToTeamMember
      address:
        EU: 0x20115FC
        NA: 0x2011554
        JP: 0x2011524
      description: |-
        Applies the IQ boosts from eating a Gummi to the target monster. Basically a wrapper around
        ApplyGummiBoostsGroundMode for struct team_member.
        
        r0: team member pointer
        r1: Item ID
        r2: bool to NOT increase stats
        r3: [output] pointer to a struct gummi_result to fill out
    - name: ApplySitrusBerryBoostToGroundMonster
      address:
        EU: 0x2011628
        NA: 0x2011580
        JP: 0x2011550
      description: |-
        Applies the hp boost from the Sitrus Berry to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted hp boost, if not NULL
        return: actual hp boost
    - name: ApplyLifeSeedBoostToGroundMonster
      address:
        EU: 0x2011664
        NA: 0x20115BC
        JP: 0x201158C
      description: |-
        Applies the hp boost from the Life Seed to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted hp boost, if not NULL
        return: actual hp boost
    - name: ApplyGinsengToGroundMonster
      address:
        EU: 0x20116A0
        NA: 0x20115F8
        JP: 0x20115C8
      description: |-
        Attempts to apply a ginseng boost to the highest valid move that the ground monster knows.
        
        r0: ground monster pointer
        r1: [output] move ID
        r2: [output] move boost
        return: actual move boost
    - name: ApplyProteinBoostToGroundMonster
      address:
        EU: 0x20117B4
        NA: 0x201170C
        JP: 0x20116DC
      description: |-
        Applies the attack boost from Protein to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted attack boost, if not NULL
        return: actual attack boost
    - name: ApplyCalciumBoostToGroundMonster
      address:
        EU: 0x20117F0
        NA: 0x2011748
        JP: 0x2011718
      description: |-
        Applies the special attack boost from Calcium to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted special attack boost, if not NULL
        return: actual special attack boost
    - name: ApplyIronBoostToGroundMonster
      address:
        EU: 0x201182C
        NA: 0x2011784
        JP: 0x2011754
      description: |-
        Applies the defense boost from Iron to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted defense boost, if not NULL
        return: actual defense boost
    - name: ApplyZincBoostToGroundMonster
      address:
        EU: 0x2011868
        NA: 0x20117C0
        JP: 0x2011790
      description: |-
        Applies the special defense boost from Zinc to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted special defense boost, if not NULL
        return: actual special defense boost
    - name: ApplyNectarBoostToGroundMonster
      address:
        EU: 0x20118A4
        NA: 0x20117FC
        JP: 0x20117CC
      description: |-
        Applies the iq boost from Nectar to the target monster.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted iq boost, if not NULL
        return: actual iq boost
    - name: IsMonsterAffectedByGravelyrockGroundMode
      address:
        EU: 0x20118D8
        NA: 0x2011830
        JP: 0x2011800
      description: |-
        Checks if the monster is Bonsly or Sudowoodo.
        
        r0: ground monster pointer
        return: bool
    - name: ApplyGravelyrockBoostToGroundMonster
      address:
        EU: 0x20118F8
        NA: 0x2011850
        JP: 0x2011820
      description: |-
        Applies the iq boost from Gravelyrock to the target monster. Only Bonsly and Sudowoodo gain IQ from the Gravelyrock.
        
        r0: ground monster pointer
        r1: [output] pointer to attempted iq boost, if not NULL
        return: actual iq boost
    - name: ApplyGummiBoostsGroundMode
      address:
        EU: 0x2011944
        NA: 0x201189C
        JP: 0x201186C
      description: |-
        Applies the IQ boosts from eating a Gummi to the monster's data. Generally called with not increasing stats true outside of the cafe.
        
        r0: Pointer to monster id
        r1: Pointer to monster iq
        r2: Pointer to monster offensive stats
        r3: Pointer to monster defensive stats
        stack[0]: Item ID
        stack[1]: bool to NOT increase stats
        stack[2]: [output] pointer to a struct gummi_result
    - name: LoadSynthBin
      address:
        EU: 0x2012B88
        NA: 0x2012AE0
        JP: 0x2012AB0
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: CloseSynthBin
      address:
        EU: 0x2012BDC
        NA: 0x2012B34
        JP: 0x2012B04
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: GetSynthItem
      address:
        EU: 0x20132F8
        NA: 0x2013250
        JP: 0x2013220
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: LoadWazaP
      address:
        EU: 0x201346C
        NA: 0x20133C4
        JP: 0x2013394
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: LoadWazaP2
      address:
        EU: 0x2013494
        NA: 0x20133EC
        JP: 0x20133BC
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: UnloadCurrentWazaP
      address:
        EU: 0x20134BC
        NA: 0x2013414
        JP: 0x20133E4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: GetMoveName
      address:
        EU: 0x20134FC
        NA: 0x2013454
        JP: 0x2013424
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: move name
    - name: FormatMoveString
      address:
        EU: 0x2013520
        NA: 0x2013478
        JP: 0x2013448
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: string_buffer
        r1: move
        r2: type_print
    - name: FormatMoveStringMore
      address:
        EU: 0x2013828
        NA: 0x2013780
        JP: 0x2013750
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: ???
        r1: ???
        r2: move
        r3: type_print
    - name: InitMove
      address:
        EU: 0x2013860
        NA: 0x20137B8
        JP: 0x2013788
      description: |-
        Initializes a move info struct.
        
        This sets f_exists and f_enabled_for_ai on the flags, the ID to the given ID, the PP to the max PP for the move ID, and the ginseng boost to 0.
        
        r0: pointer to move to initialize
        r1: move ID
    - name: InitMoveCheckId
      address:
        EU: 0x2013890
        NA: 0x20137E8
        JP: 0x20137B8
      description: |-
        Same as InitMove, but the function ensures that the specified ID is not 0. If it is, the move is initialized as invalid and nothing else happens.
        
        r0: move
        r1: move ID
    - name: GetInfoMoveGround
      address:
        EU: 0x20138D0
        NA: 0x2013828
        JP: 0x20137F8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: ground move
        r1: move ID
    - name: GetMoveTargetAndRange
      address:
        EU: 0x20138E8
        NA: 0x2013840
        JP: 0x2013810
      description: |-
        Gets the move target-and-range field. See struct move_target_and_range in the C headers.
        
        r0: move pointer
        r1: AI flag (every move has two target-and-range fields, one for players and one for AI)
        return: move target and range
    - name: GetMoveType
      address:
        EU: 0x201390C
        NA: 0x2013864
        JP: 0x2013834
      description: |-
        Gets the type of a move
        
        r0: Pointer to move data
        return: Type of the move
    - name: GetMovesetLevelUpPtr
      address:
        EU: 0x201392C
        NA: 0x2013884
        JP: 0x2013854
      description: |-
        Given the ID of a monster in the current dungeon, returns a pointer to the list of moves it learns by leveling up and the level in which each move is learnt.
        
        The list contains pairs of <encoded move ID, level>. The move ID is encoded and can be 1 or 2 bytes long. GetEncodedHalfword must be used to decode it. The end of the list is marked by a null byte.
        
        r0: monster ID
        return: Pointer to encoded level-up move list
    - name: IsInvalidMoveset
      address:
        EU: 0x2013974
        NA: 0x20138CC
        JP: 0x201389C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_id
        return: bool
    - name: GetMovesetHmTmPtr
      address:
        EU: 0x201399C
        NA: 0x20138F4
        JP: 0x20138C4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
        return: ?
    - name: GetMovesetEggPtr
      address:
        EU: 0x20139E8
        NA: 0x2013940
        JP: 0x2013910
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
        return: ?
    - name: GetMoveAiWeight
      address:
        EU: 0x2013A34
        NA: 0x201398C
        JP: 0x201395C
      description: |-
        Gets the AI weight of a move
        
        r0: Pointer to move data
        return: AI weight of the move
    - name: GetMoveNbStrikes
      address:
        EU: 0x2013A54
        NA: 0x20139AC
        JP: 0x201397C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: # strikes
    - name: GetMoveBasePower
      address:
        EU: 0x2013A74
        NA: 0x20139CC
        JP: 0x201399C
      description: |-
        Gets the base power of a move from the move data table.
        
        r0: move pointer
        return: base power
    - name: GetMoveBasePowerGround
      address:
        EU: 0x2013A94
        NA: 0x20139EC
        JP: 0x20139BC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: ground_move
        return: base power
    - name: GetMoveAccuracyOrAiChance
      address:
        EU: 0x2013AB4
        NA: 0x2013A0C
        JP: 0x20139DC
      description: |-
        Gets one of the two accuracy values of a move or its ai_condition_random_chance field.
        
        r0: Move pointer
        r1: 0 to get the move's first accuracy1 field, 1 to get its accuracy2, 2 to get its ai_condition_random_chance.
        return: Move's accuracy1, accuracy2 or ai_condition_random_chance
    - name: GetMoveBasePp
      address:
        EU: 0x2013AD8
        NA: 0x2013A30
        JP: 0x2013A00
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: base PP
    - name: GetMaxPp
      address:
        EU: 0x2013AF8
        NA: 0x2013A50
        JP: 0x2013A20
      description: |-
        Gets the maximum PP for a given move.
        
        Irkdwia's notes: GetMovePPWithBonus
        
        r0: move pointer
        return: max PP for the given move, capped at 99
    - name: GetMoveMaxGinsengBoost
      address:
        EU: 0x2013B78
        NA: 0x2013AD0
        JP: 0x2013AA0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: max ginseng boost
    - name: GetMoveMaxGinsengBoostGround
      address:
        EU: 0x2013B98
        NA: 0x2013AF0
        JP: 0x2013AC0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: ground_move
        return: max ginseng boost
    - name: GetMoveCritChance
      address:
        EU: 0x2013BB8
        NA: 0x2013B10
        JP: 0x2013AE0
      description: |-
        Gets the critical hit chance of a move.
        
        r0: move pointer
        return: critical hit chance
    - name: IsThawingMove
      address:
        EU: 0x2013BD8
        NA: 0x2013B30
        JP: 0x2013B00
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: bool
    - name: IsAffectedByTaunt
      address:
        EU: 0x2013BF8
        NA: 0x2013B50
        JP: 0x2013B20
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        Based on struct move_data, maybe this should be IsUsableWhileTaunted?
        
        r0: move
        return: bool
    - name: GetMoveRangeId
      address:
        EU: 0x2013C18
        NA: 0x2013B70
        JP: 0x2013B40
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: range ID
    - name: GetMoveActualAccuracy
      address:
        EU: 0x2013C38
        NA: 0x2013B90
        JP: 0x2013B60
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: accuracy
    - name: GetMoveBasePowerFromId
      address:
        EU: 0x2013C90
        NA: 0x2013BE8
        JP: 0x2013BB8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: base power
    - name: IsMoveRangeString19
      address:
        EU: 0x2013CAC
        NA: 0x2013C04
        JP: 0x2013BD4
      description: |-
        Returns whether a move's range string is 19 ("User").
        
        r0: Move pointer
        return: True if the move's range string field has a value of 19.
    - name: GetMoveMessageFromId
      address:
        EU: 0x2013CD8
        NA: 0x2013C30
        JP: 0x2013C00
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID?
        return: string
    - name: GetNbMoves
      address:
        EU: 0x2013D0C
        NA: 0x2013C64
        JP: 0x2013C34
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        return: # moves
    - name: GetMovesetIdx
      address:
        EU:
          - 0x2013D54
          - 0x20148AC
        NA:
          - 0x2013CAC
          - 0x2014804
        JP:
          - 0x2013C7C
          - 0x20147D4
      description: |-
        Returns the move position in the moveset if it is found, -1 otherwise
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        r1: move ID
        return: ?
    - name: IsReflectedByMagicCoat
      address:
        EU: 0x2013DB0
        NA: 0x2013D08
        JP: 0x2013CD8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: CanBeSnatched
      address:
        EU: 0x2013DCC
        NA: 0x2013D24
        JP: 0x2013CF4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: FailsWhileMuzzled
      address:
        EU: 0x2013DE8
        NA: 0x2013D40
        JP: 0x2013D10
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        Called IsMouthMove in Irdkwia's notes, which presumably is relevant to the Muzzled status.
        
        r0: move ID
        return: bool
    - name: IsSoundMove
      address:
        EU: 0x2013E04
        NA: 0x2013D5C
        JP: 0x2013D2C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move
        return: bool
    - name: IsRecoilMove
      address:
        EU: 0x2013EBC
        NA: 0x2013E14
        JP: 0x2013DE4
      description: |-
        Checks if the given move is a recoil move (affected by Reckless).
        
        r0: move ID
        return: bool
    - name: AllManip1
      address:
        EU: 0x2014288
        NA: 0x20141E0
        JP: 0x20141B0
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: AllManip2
      address:
        EU: 0x20142B0
        NA: 0x2014208
        JP: 0x20141D8
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ManipMoves1v1
      address:
        EU: 0x2014344
        NA: 0x201429C
        JP: 0x201426C
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ManipMoves1v2
      address:
        EU: 0x20143E4
        NA: 0x201433C
        JP: 0x201430C
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ManipMoves2v1
      address:
        EU: 0x201454C
        NA: 0x20144A4
        JP: 0x2014474
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ManipMoves2v2
      address:
        EU: 0x20145EC
        NA: 0x2014544
        JP: 0x2014514
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: DungeonMoveToGroundMove
      address:
        EU: 0x2014754
        NA: 0x20146AC
        JP: 0x201467C
      description: |-
        Converts a struct move to a struct ground_move.
        
        r0: [output] ground_move
        r1: move
    - name: GroundToDungeonMoveset
      address:
        EU: 0x201478C
        NA: 0x20146E4
        JP: 0x20146B4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] moveset_dun_str
        r1: moveset_str
    - name: DungeonToGroundMoveset
      address:
        EU: 0x2014820
        NA: 0x2014778
        JP: 0x2014748
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] moveset_str
        r1: moveset_dun_str
    - name: GetInfoGroundMoveset
      address:
        EU: 0x2014860
        NA: 0x20147B8
        JP: 0x2014788
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        r1: moves_id
    - name: FindFirstFreeMovesetIdx
      address:
        EU: 0x2014908
        NA: 0x2014860
        JP: 0x2014830
      description: |-
        Returns the first position of an empty move in the moveset if it is found, -1 otherwise
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        return: index
    - name: LearnMoves
      address:
        EU: 0x2014954
        NA: 0x20148AC
        JP: 0x201487C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        r1: moves_id
    - name: CopyMoveTo
      address:
        EU: 0x2014AF4
        NA: 0x2014A4C
        JP: 0x2014A1C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
        r1: buffer_write
    - name: CopyMoveFrom
      address:
        EU: 0x2014B2C
        NA: 0x2014A84
        JP: 0x2014A54
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
        r1: buffer_read
    - name: CopyMovesetTo
      address:
        EU: 0x2014B64
        NA: 0x2014ABC
        JP: 0x2014A8C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
        r1: buffer_write
    - name: CopyMovesetFrom
      address:
        EU: 0x2014B94
        NA: 0x2014AEC
        JP: 0x2014ABC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
        r1: buffer_read
    - name: Is2TurnsMove
      address:
        EU: 0x2014D0C
        NA: 0x2014C64
        JP: 0x2014C34
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsRegularAttackOrProjectile
      address:
        EU: 0x2014D94
        NA: 0x2014CEC
        JP: 0x2014CBC
      description: |-
        Checks if a move ID is MOVE_REGULAR_ATTACK or MOVE_PROJECTILE.
        
        r0: move ID
        return: bool
    - name: IsPunchMove
      address:
        EU: 0x2014DC0
        NA: 0x2014D18
        JP: 0x2014CE8
      description: |-
        Checks if the given move is a punch move (affected by Iron Fist).
        
        r0: move ID
        return: bool
    - name: IsHealingWishOrLunarDance
      address:
        EU: 0x2014E00
        NA: 0x2014D58
        JP: 0x2014D28
      description: |-
        Checks if a move ID is MOVE_HEALING_WISH or MOVE_LUNAR_DANCE.
        
        r0: move ID
        return: bool
    - name: IsCopyingMove
      address:
        EU: 0x2014E2C
        NA: 0x2014D84
        JP: 0x2014D54
      description: |-
        Checks if a move ID is MOVE_MIMIC, MOVE_SKETCH, or MOVE_COPYCAT.
        
        r0: move ID
        return: bool
    - name: IsTrappingMove
      address:
        EU: 0x2014E64
        NA: 0x2014DBC
        JP: 0x2014D8C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsOneHitKoMove
      address:
        EU: 0x2014EA8
        NA: 0x2014E00
        JP: 0x2014DD0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsNot2TurnsMoveOrSketch
      address:
        EU: 0x2014EE0
        NA: 0x2014E38
        JP: 0x2014E08
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsRealMove
      address:
        EU: 0x2014F0C
        NA: 0x2014E64
        JP: 0x2014E34
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsMovesetValid
      address:
        EU: 0x2014FA0
        NA: 0x2014EF8
        JP: 0x2014EC8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        return: bool
    - name: IsRealMoveInTimeDarkness
      address:
        EU: 0x201500C
        NA: 0x2014F64
        JP: 0x2014F34
      description: |-
        Seed Flare isn't a real move in Time/Darkness
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: move ID
        return: bool
    - name: IsMovesetValidInTimeDarkness
      address:
        EU: 0x20150AC
        NA: 0x2015004
        JP: 0x2014FD4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        return: bool
    - name: GetFirstNotRealMoveInTimeDarkness
      address:
        EU: 0x20150CC
        NA: 0x2015024
        JP: 0x2014FF4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_str
        return: index
    - name: IsSameMove
      address:
        EU: 0x20151F4
        NA: 0x201514C
        JP: 0x201511C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: moveset_dun_str
        r1: move_data_dun_str
        return: bool
    - name: GetMoveCategory
      address:
        EU: 0x2015270
        NA: 0x20151C8
        JP: 0x2015198
      description: |-
        Gets a move's category (physical, special, status).
        
        r0: move ID
        return: move category enum
    - name: GetPpIncrease
      address:
        EU: 0x201528C
        NA: 0x20151E4
        JP: 0x20151B4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
        r1: IQ skills bitvector
        return: PP increase
    - name: OpenWaza
      address:
        EU: 0x201533C
        NA: 0x2015294
        JP: 0x2015264
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: waza_id
    - name: SelectWaza
      address:
        EU: 0x20153A4
        NA: 0x20152FC
        JP: 0x20152CC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: waza_id
    - name: PlayBgmByIdVeneer
      address:
        EU: 0x2017BF4
        NA: 0x2017B58
        JP: 0x2017BB0
      description: |-
        Likely a linker-generated veneer for PlayBgmById.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: Music ID
    - name: PlayBgmByIdVolumeVeneer
      address:
        EU: 0x2017C00
        NA: 0x2017B64
        JP: 0x2017BBC
      description: |-
        Likely a linker-generated veneer for PlayBgmByIdVolume.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: Music ID
        r1: (?) Stored on byte 8 on the struct passed to SendAudioCommand
        r2: Volume (0-255)
    - name: PlaySeVolumeWrapper
      address:
        EU: 0x2017D68
        NA: 0x2017CCC
        JP: 0x2017D24
      description: |-
        Wrapper for PlaySeVolume. Takes an index and uses it to determine the ID of the sound to play.
        
        r0: Index
    - name: PlayBgmById
      address:
        EU: 0x2017E90
        NA: 0x2017DF4
        JP: 0x2017E4C
      description: |-
        Initializes some values and then calls SendAudioCommand to play a BGM track.
        
        Checks for DEBUG_FLAG_BGM_OFF. The volume is set to either 0 or 255 depending on the flag before calling SendAudioCommand.
        
        r0: Music ID
    - name: PlayBgmByIdVolume
      address:
        EU: 0x2017F0C
        NA: 0x2017E70
        JP: 0x2017EC8
      description: |-
        Initializes some values and then calls SendAudioCommand to play a BGM track.
        
        Checks for DEBUG_FLAG_BGM_OFF. If 1, sets the volume to 0 before calling SendAudioCommand.
        
        r0: Music ID
        r1: (?) Stored on byte 8 on the struct passed to SendAudioCommand
        r2: Volume (0-255)
    - name: StopBgmCommand
      address:
        EU: 0x2017F84
        NA: 0x2017EE8
        JP: 0x2017F40
      description: |-
        Stops the BGM that is being currently played by calling SendAudioCommand.
        
        No params.
    - name: PlaySeByIdVolume
      address:
        EU: 0x2018354
        NA: 0x20182B8
        JP: 0x2018310
      description: |-
        Plays the specified sound effect with the specified volume.
        
        Checks for DEBUG_FLAG_SE_OFF and sets the volume to 0 if the flag is set. Calls SendAudioCommand2.
        
        r0: Sound effect ID
        r1: Volume (0-255)
    - name: SendAudioCommand2
      address:
        EU: 0x2018B80
        NA: 0x2018AE4
        JP: 0x2018B3C
      description: |-
        Very similar to SendAudioCommand. Contains an additional function call.
        
        r0: Command to send
    - name: AllocAudioCommand
      address:
        EU: 0x2018C08
        NA: 0x2018B6C
        JP: 0x2018BC4
      description: |-
        Searches for an entry in AUDIO_COMMANDS_BUFFER that's not currently in use (audio_command::status == 0). Returns the first entry not in use, or null if none was found.
        
        Also sets the status of the found entry to the value specified in r0.
        
        The game doesn't bother checking if the result of the function is null, so the buffer is not supposed to ever get filled.
        
        r0: Status to set the found entry to
        return: The first unused entry, or null if none was found
    - name: SendAudioCommand
      address:
        EU: 0x2018C44
        NA: 0x2018BA8
        JP: 0x2018C00
      description: |-
        Used to send commands to the audio engine (seems to be used mainly to play and stop music)
        
        This function calls a stubbed-out one with the string "audio command list"
        
        r0: Command to send
    - name: InitSoundSystem
      address:
        EU: 0x2018CC4
        NA: 0x2018C28
        JP: 0x2018C80
      description: |-
        Initialize the DSE sound engine?
        
        This function is called somewhere in the hierarchy under TaskProcBoot and appears to allocate a bunch of memory (including a dedicated memory arena, see SOUND_MEMORY_ARENA) for sound data, and reads a bunch of core sound files.
        
        File paths referenced:
        - SOUND/SYSTEM/se_sys.swd
        - SOUND/SYSTEM/se_sys.sed
        - SOUND/SE/motion.swd
        - SOUND/SE/motion.sed
        - SOUND/BGM/bgm.swd (this is the main sample bank, see https://projectpokemon.org/home/docs/mystery-dungeon-nds/pok%C3%A9mon-mystery-dungeon-explorers-r78/)
        
        Debug strings:
        - entry system se swd %04x\n
        - entry system se sed %04x\n
        - entry motion se swd %04x\n
        - entry motion se sed %04x\n
    - name: ManipBgmPlayback
      address:
        EU: 0x2018F40
        NA: 0x2018EA4
        JP: 0x2018EFC
      description: |-
        Uncertain. More like bgm1&2 end
        
        Note: unverified, ported from Irdkwia's notes
    - name: SoundDriverReset
      address:
        EU: 0x2019164
        NA: 0x20190C8
        JP: 0x2019120
      description: |-
        Uncertain.
        
        Note: unverified, ported from Irdkwia's notes
    - name: LoadDseFile
      address:
        EU: 0x2019428
        NA: 0x201938C
        JP: 0x20193E4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] iovec
        r1: filename
        return: bytes read
    - name: PlaySeLoad
      address:
        EU: 0x2019610
        NA: 0x2019574
        JP: 0x20195CC
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: IsSongOver
      address:
        EU: 0x20198EC
        NA: 0x2019850
        JP: 0x20198A8
      description: |-
        True if the song that is currently being played has finished playing.
        
        return: True if the current song is over
    - name: PlayBgm
      address:
        EU: 0x2019954
        NA: 0x20198B8
        JP: 0x2019910
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: StopBgm
      address:
        EU: 0x2019BC4
        NA: 0x2019B28
        JP: 0x2019B80
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ChangeBgm
      address:
        EU: 0x2019CEC
        NA: 0x2019C50
        JP: 0x2019CA8
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: PlayBgm2
      address:
        EU: 0x2019E20
        NA: 0x2019D84
        JP: 0x2019DDC
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: StopBgm2
      address:
        EU: 0x201A084
        NA: 0x2019FE8
        JP: 0x201A040
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ChangeBgm2
      address:
        EU: 0x201A184
        NA: 0x201A0E8
        JP: 0x201A140
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: PlayME
      address:
        EU: 0x201A264
        NA: 0x201A1C8
        JP: 0x201A220
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: StopME
      address:
        EU: 0x201A4A8
        NA: 0x201A40C
        JP: 0x201A464
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: fade_out
    - name: PlaySe
      address:
        EU: 0x201A598
        NA: 0x201A4FC
        JP: 0x201A554
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: PlaySeFullSpec
      address:
        EU: 0x201A708
        NA: 0x201A66C
        JP: 0x201A6C4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: SeChangeVolume
      address:
        EU: 0x201A8C4
        NA: 0x201A828
        JP: 0x201A880
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: SeChangePan
      address:
        EU: 0x201A99C
        NA: 0x201A900
        JP: 0x201A958
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: StopSe
      address:
        EU: 0x201AA80
        NA: 0x201A9E4
        JP: 0x201AA3C
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: InitAnimationControl
      address:
        EU: 0x201C0EC
        NA: 0x201C050
        JP: 0x201C0A8
      description: |-
        Initialize the animation_control structure
        
        r0: animation_control
    - name: InitAnimationControlWithSet
      address:
        EU:
          - 0x201C14C
          - 0x201C168
        NA:
          - 0x201C0B0
          - 0x201C0CC
        JP:
          - 0x201C108
          - 0x201C124
      description: |-
        Initialize the animation_control structure, and set a certain value in a bitflag to 1
        
        r0: animation_control
    - name: SetSpriteIdForAnimationControl
      address:
        EU: 0x201C184
        NA: 0x201C0E8
        JP: 0x201C140
      description: |-
        Set the sprite id (from WAN_TABLE) in the given animation control
        Also set field 0x72 to the sprite id if they differ
        If they differ, it’ll also set field 0x43 to 0xFF
        
        r0: animation control
        r1: sprite id in WAN_TABLE
    - name: SetAnimationForAnimationControlInternal
      address:
        EU: 0x201C218
        NA: 0x201C17C
        JP: 0x201C1D4
      description: |-
        Set the wan animation (and other related settings) of an animation_control
        Used by SetAnimationForAnimationControl
        
        r0: animation_control
        r1: wan_header
        r2: animation group id
        r3: animation id
        stack[0]: ?
        stack[1] (0x4): palette pos low (see the field on animation_control)
        stack[2] (0x8): ?
        stack[3] (0xC): ?
        stack[4] (0x10): palette_bank (directly set to the animation_control field with said name)
    - name: SetAnimationForAnimationControl
      address:
        EU: 0x201C368
        NA: 0x201C2CC
        JP: 0x201C324
      description: |-
        Set the animation to play with this animation control, but do not start it.
        
        (args same as SetAndPlayAnimationForAnimationControl)
        r0: animation_control
        r1: animation key (either an animation or animation group depending on the type of sprite and if it does have animation group with this animation key as index)
        r2: direction_id (unsure) (the key to the wan_animation in itself, only used when animation key represent a wan_animation_group)
        r3: ?
        stack[0]: low_palette_pos
        stack[1] (0x4): ?
        stack[2] (0x8): ?
        stack[3] (0xC): ?
    - name: GetWanForAnimationControl
      address:
        EU: 0x201C484
        NA: 0x201C3E8
        JP: 0x201C440
      description: |-
        Return the WAN to use for the given animation control
        Return the override if it exists, otherwise look up the sprite id in WAN_TABLE
        
        r0: animation_control
        return: wan_header
    - name: SetAndPlayAnimationForAnimationControl
      address:
        EU: 0x201C4B4
        NA: 0x201C418
        JP: 0x201C470
      description: |-
        Set the animation to play with the animation control, and start it.
        
        r0: animation_control
        r1: animation key (either an animation or animation group depending on the type of sprite and if it does have animation group with this animation key as index)
        r2: direction_id (unsure) (the key to the wan_animation in itself, only used when animation key represent a wan_animation_group)
        r3: ?
        stack[0]: low_palette_pos
        stack[1] (0x4): ?
        stack[2] (0x8): ?
        stack[3] (0xC): ?
    - name: SwitchAnimationControlToNextFrame
      address:
        EU: 0x201C4F4
        NA: 0x201C458
        JP: 0x201C4B0
      description: |-
        Handle switching to the next frame of an animation control, including looping.
        
        r0: animation_control
    - name: LoadAnimationFrameAndIncrementInAnimationControl
      address:
        EU: 0x201C5FC
        NA: 0x201C560
        JP: 0x201C5B8
      description: |-
        Read some value of the input animation frame, and update animation control with it.
        Also switch next_animation_frame of animation_control to the next animation frame
        Seems to only be called on said next_animation_frame
        Also set bit of some_bitfield at 0x0800 to 1
        
        r0: animation_control
        r1: animation_frame
    - name: AnimationControlGetAllocForMaxFrame
      address:
        EU: 0x201D20C
        NA: 0x201D170
        JP: 0x201D1C8
      description: |-
        Return the maximum allocation for a frame of this sprite, as stored in the WAN file
        Return 0 if missing and takes sprite override into account
        
        r0: animation_control
        return: allocation for max frame
    - name: DeleteWanTableEntry
      address:
        EU: 0x201D278
        NA: 0x201D1DC
        JP: 0x201D234
      description: |-
        Always delete an entry if the file is allocated externally (file_externally_allocated is set), otherwise, decrease the reference counter. If it reach 0, delete the sprite.
        
        r0: wan_table_ptr
        r1: wan_id
    - name: AllocateWanTableEntry
      address:
        EU: 0x201D2E0
        NA: 0x201D244
        JP: 0x201D29C
      description: |-
        Return the identifier to a free wan table entry (-1 if none are avalaible). The entry is zeroed.
        
        r0: wan_table_ptr
        return: the entry id in wan_table
    - name: FindWanTableEntry
      address:
        EU: 0x201D370
        NA: 0x201D2D4
        JP: 0x201D32C
      description: |-
        Search in the given table (in practice always seems to be WAN_TABLE) for an entry with the given file name.
        
        r0: table pointer
        r1: file name
        return: index of the found file, if found, or -1 if not found
    - name: GetLoadedWanTableEntry
      address:
        EU: 0x201D3D0
        NA: 0x201D334
        JP: 0x201D38C
      description: |-
        Look up a sprite with the provided pack_id and file_index in the wan table.
        
        r0: wan_table_ptr
        r1: pack_id
        r2: file_index
        return: sprite id in the wan table, -1 if not found
    - name: InitWanTable
      address:
        EU: 0x201D458
        NA: 0x201D3BC
        JP: 0x201D414
      description: |-
        Initialize the input WAN table with 0x60 free entries (it needs a length of 0x1510 bytes)
        
        r0: wan_table_ptr
    - name: LoadWanTableEntry
      address:
        EU: 0x201D478
        NA: 0x201D3DC
        JP: 0x201D434
      description: |-
        Appears to load data from the given file (in practice always seems to be animation data), using previously loaded data in the given table (see FindWanTableEntry) if possible.
        
        r0: table pointer
        r1: file name
        r2: flags
        return: table index of the loaded data
    - name: LoadWanTableEntryFromPack
      address:
        EU: 0x201D520
        NA: 0x201D484
        JP: 0x201D4DC
      description: |-
        Return an already allocated entry for this sprite if it exists, otherwise allocate a new one and load the optionally compressed sprite.
        
        r0: wan_table_ptr
        r1: pack_id
        r2: file_index
        r3: allocation flags
        stack[0]: compressed
        return: the entry id in wan_table
    - name: LoadWanTableEntryFromPackUseProvidedMemory
      address:
        EU: 0x201D62C
        NA: 0x201D590
        JP: 0x201D5E8
      description: |-
        Return an already allocated entry for this sprite if it exists, otherwise allocate a new one and load the optionally compressed sprite into the provided memory area. Mark the sprite as externally allocated.
        
        r0: wan_table_ptr
        r1: pack_id
        r2: file_index
        r3: sprite_storage_ptr
        stack[0]: compressed
        return: the entry id in wan_table
    - name: ReplaceWanFromBinFile
      address:
        EU: 0x201D720
        NA: 0x201D684
        JP: 0x201D6DC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: wan_table_ptr
        r1: wan_id
        r2: bin_file_id
        r3: file_id
        stack[0]: compressed
    - name: DeleteWanTableEntryVeneer
      address:
        EU: 0x201D7C8
        NA: 0x201D72C
        JP: 0x201D784
      description: |-
        Likely a linker-generated veneer for DeleteWanTableEntry.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: wan_table_ptr
        r1: wan_id
    - name: WanHasAnimationGroup
      address:
        EU: 0x201DAE0
        NA: 0x201DA44
        JP: 0x201DA9C
      description: |-
        Check if the input WAN file loaded in memory has an animation group with this ID
        Valid means that the animation group is in the range of existing animation, and that it has at least one animation.
        
        r0: pointer to the header of the WAN
        r1: id of the animation group
        return: whether the WAN file has the given animation group
    - name: WanTableSpriteHasAnimationGroup
      address:
        EU: 0x201DB1C
        NA: 0x201DA80
        JP: 0x201DAD8
      description: |-
        Check if the sprite in the global WAN table has the given animation group
        see WanHasAnimationGroup for more detail
        
        r0: sprite id in the WAN table
        r1: animation group id
        return: whether the associated sprite has the given animation group
    - name: SpriteTypeInWanTable
      address:
        EU: 0x201DD0C
        NA: 0x201DC70
        JP: 0x201DCC8
      description: |-
        Look up the sprite in the WAN table, and return its type
        
        r0: sprite id in the WAN table
        return: sprite type
    - name: LoadWteFromRom
      address:
        EU: 0x201DEE8
        NA: 0x201DE4C
        JP: 0x201DEA4
      description: |-
        Loads a SIR0-wrapped WTE file from ROM, and returns a handle to it
        
        r0: [output] pointer to wte handle
        r1: file path string
        r2: load file flags
    - name: LoadWteFromFileDirectory
      address:
        EU: 0x201DF60
        NA: 0x201DEC4
        JP: 0x201DF1C
      description: |-
        Loads a SIR0-wrapped WTE file from a file directory, and returns a handle to it
        
        r0: [output] pointer to wte handle
        r1: file directory id
        r2: file index
        r3: malloc flags
    - name: UnloadWte
      address:
        EU: 0x201DFB4
        NA: 0x201DF18
        JP: 0x201DF70
      description: |-
        Frees the buffer used to store the WTE data in the handle, and sets both pointers to null
        
        r0: pointer to wte handle
    - name: LoadWtuFromBin
      address:
        EU: 0x201E050
        NA: 0x201DFB4
        JP: 0x201E00C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: bin_file_id
        r1: file_id
        r2: load_type
        return: ?
    - name: ProcessWte
      address:
        EU: 0x201E14C
        NA: 0x201E0B0
        JP: 0x201E108
      description: |-
        Prepare a WTE data to be loaded into VRAM. Seems to need to be called with another undocumented function (at 0x0201e1d8 (EU))
        It skips the texture and/or the palette if missing from the file. The texture VRAM has 128KiB of space, and palette has 16KiB.
        The true palette VRAM offset will be upper_part*0x100+lower_part
        
        This may or may not be the function that adds to the queue so it can be added during VBlank.
        
        r0: pointer to the WTE file header loaded in memory
        r1: where the WTE texture will be loaded in the VRAM (from 0 to 0x1FFFF)
        r2: upper part of the palette VRAM
        r3: lower part of the palette VRAM
    - name: GeomSetTexImageParam
      address:
        EU: 0x201E530
        NA: 0x201E494
        JP: 0x201E4EC
      description: |-
        Send the TEXIMAGE_PARAM geometry engine command, that defines some parameters for the texture
        See http://problemkaputt.de/gbatek.htm#ds3dtextureattributes for more information on the parameters
        
        r0: texture format
        r1: texture coordinates transformation modes
        r2: texture S-Size
        r3: texture T-Size
        stack[0] (0x0): repeat in S (bit 0) and/or T (bit 1) direction
        stack[1] (0x4): flip in S (bit 0) and/or T (bit 1) direction
        stack[2] (0x8): What to make of color 0 (bit 29)
        stack[3] (0xC): Texture VRAM offset divided by 8
    - name: GeomSetVertexCoord16
      address:
        EU: 0x201E570
        NA: 0x201E4D4
        JP: 0x201E52C
      description: |-
        Send the "VTX_16" geometry engine command, that defines the coordinate of a point of a polygon, using 16 bits.
        Inputs are clamped over their 16 lower bits
        
        r0: x coordinate
        r1: y coordinate
        r2: z coordinate
    - name: InitRender3dData
      address:
        EU: 0x201E5A0
        NA: 0x201E504
        JP: 0x201E55C
      description: |-
        Initialize the global "RENDER_3D" structure.
        
        No params.
    - name: GeomSwapBuffers
      address:
        EU: 0x201E7B8
        NA: 0x201E71C
        JP: 0x201E774
      description: |-
        Call the "SWAP_BUFFERS" command. This will swap the geometry buffer. The parameter of 1 is provided, which enables manual Y-sorting of translucent polygons.
        
        No params.
    - name: InitRender3dElement64
      address:
        EU: 0x201E7CC
        NA: 0x201E730
        JP: 0x201E788
      description: |-
        Initialize the render_3d_element_64 structure (without performing any drawing or external data access)
        
        r0: render_3d_element_64
    - name: Render3d64Texture0x7
      address:
        EU: 0x201E8E0
        NA: 0x201E844
        JP: 0x201E89C
      description: |-
        RENDER_3D_FUNCTIONS_64[7]. Renders a render_3d_element_64 with type RENDER64_TEXTURE_0x7.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_TEXTURE.
        
        r0: render_3d_element_64
    - name: Render3d64WindowFrame
      address:
        EU: 0x201EA88
        NA: 0x201E9EC
        JP: 0x201EA44
      description: |-
        Draw the frame for a window, using the 3D engine.
        
        The render_3d_element_64 contains certain value that needs to be set to a correct value for it to work.
        The element is not immediately sent to the geometry engine, but is converted to a render_3d_element and queued up in RENDER_3D.
        
        RENDER_3D_FUNCTIONS_64[6], corresponding to a type of RENDER64_WINDOW_FRAME.
        
        r0: render_3d_element_64
    - name: EnqueueRender3d64Tiling
      address:
        EU: 0x201ED38
        NA: 0x201EC9C
        JP: 0x201ECF4
      description: |-
        Converts a render_3d_element_64 with type RENDER64_TILING to a render_3d_element on the render queue of RENDER_3D, with type RENDER_TILING.
        
        r0: render_3d_element_64
    - name: Render3d64Tiling
      address:
        EU: 0x201EE24
        NA: 0x201ED88
        JP: 0x201EDE0
      description: |-
        RENDER_3D_FUNCTIONS_64[5]. Renders a render_3d_element_64 with type RENDER64_TILING.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_TILING.
        
        r0: render_3d_element_64
    - name: Render3d64Quadrilateral
      address:
        EU: 0x201EEEC
        NA: 0x201EE50
        JP: 0x201EEA8
      description: |-
        RENDER_3D_FUNCTIONS_64[4]. Renders a render_3d_element_64 with type RENDER64_QUADRILATERAL.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_QUADRILATERAL.
        
        r0: render_3d_element_64
    - name: Render3d64RectangleMulticolor
      address:
        EU: 0x201EF8C
        NA: 0x201EEF0
        JP: 0x201EF48
      description: |-
        RENDER_3D_FUNCTIONS_64[3]. Renders a render_3d_element_64 with type RENDER64_RECTANGLE_MULTICOLOR.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_RECTANGLE.
        
        r0: render_3d_element_64
    - name: Render3d64Rectangle
      address:
        EU: 0x201F0F8
        NA: 0x201F05C
        JP: 0x201F0B4
      description: |-
        RENDER_3D_FUNCTIONS_64[2]. Renders a render_3d_element_64 with type RENDER64_RECTANGLE.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_RECTANGLE.
        
        r0: render_3d_element_64
    - name: Render3d64Nothing
      address:
        EU: 0x201F1A4
        NA: 0x201F108
        JP: 0x201F160
      description: |-
        RENDER_3D_FUNCTIONS_64[1]. Renders a render_3d_element_64 with type RENDER64_NOTHING. This function is entirely empty.
        
        r0: render_3d_element_64
    - name: Render3d64Texture
      address:
        EU: 0x201F1A8
        NA: 0x201F10C
        JP: 0x201F164
      description: |-
        RENDER_3D_FUNCTIONS_64[0]. Renders a render_3d_element_64 with type RENDER64_TEXTURE.
        
        Converts the render_3d_element_64 to a render_3d_element on the render queue of RENDER_3D, with type RENDER_TEXTURE.
        
        r0: render_3d_element_64
    - name: Render3dElement64
      address:
        EU: 0x201F270
        NA: 0x201F1D4
        JP: 0x201F22C
      description: |-
        Dispatches a render_3d_element_64 to the render function corresponding to its type.
        
        r0: render_3d_element_64
    - name: HandleSir0Translation
      address:
        EU: 0x201F550
        NA: 0x201F4B4
        JP: 0x201F50C
      description: |-
        Translates the offsets in a SIR0 file into NDS memory addresses, changes the magic number to SirO (opened), and returns a pointer to the first pointer specified in the SIR0 header (beginning of the data).
        
        Irkdiwa's notes:
          ret_code = 0 if it wasn't a SIR0 file
          ret_code = 1 if it has been transformed in SIRO file
          ret_code = 2 if it was already a SIRO file
          [output] contains a pointer to the header of the SIRO file if ret_code = 1 or 2
          [output] contains a pointer which is exactly the same as the sir0_ptr if ret_code = 0
        
        r0: [output] double pointer to beginning of data
        r1: pointer to source file buffer
        return: return code
    - name: ConvertPointersSir0
      address:
        EU: 0x201F5D0
        NA: 0x201F534
        JP: 0x201F58C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: sir0_ptr
    - name: HandleSir0TranslationVeneer
      address:
        EU: 0x201F628
        NA: 0x201F58C
        JP: 0x201F5E4
      description: |-
        Likely a linker-generated veneer for HandleSir0Translation.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: [output] double pointer to beginning of data
        r1: pointer to source file buffer
        return: return code
    - name: DecompressAtNormalVeneer
      address:
        EU: 0x201F65C
        NA: 0x201F5C0
        JP: 0x201F618
      description: |-
        Likely a linker-generated veneer for DecompressAtNormal.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: addr_decomp
        r1: expected_size
        r2: AT pointer
        return: ?
    - name: DecompressAtNormal
      address:
        EU: 0x201F668
        NA: 0x201F5CC
        JP: 0x201F624
      description: |-
        Overwrites r3 probably passed to match DecompressAtHalf's definition.
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: addr_decomp
        r1: expected_size
        r2: AT pointer
        return: ?
    - name: DecompressAtHalf
      address:
        EU: 0x201FAAC
        NA: 0x201FA10
        JP: 0x201FA68
      description: |-
        Same as DecompressAtNormal, except it stores each nibble as a byte
        and adds the high nibble (r3).
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: addr_decomp
        r1: expected_size
        r2: AT pointer
        r3: high_nibble
        return: ?
    - name: DecompressAtFromMemoryPointerVeneer
      address:
        EU: 0x201FFE8
        NA: 0x201FF4C
        JP: 0x201FFA4
      description: |-
        Likely a linker-generated veneer for DecompressAtFromMemoryPointer.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: addr_decomp
        r1: expected_size
        r2: AT pointer
        return: ?
    - name: DecompressAtFromMemoryPointer
      address:
        EU: 0x201FFF4
        NA: 0x201FF58
        JP: 0x201FFB0
      description: |-
        Overwrites r3 probably passed to match DecompressAtHalf's definition.
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: addr_decomp
        r1: expected_size
        r2: AT pointer
        return: ?
    - name: WriteByteFromMemoryPointer
      address:
        EU: 0x202050C
        NA: 0x2020470
        JP: 0x20204C8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: byte
    - name: GetAtSize
      address:
        EU: 0x2020588
        NA: 0x20204EC
        JP: 0x2020544
      description: |-
        Doesn't work for AT3PX and AT4PN
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: AT pointer
        r1: ?
        return: ?
    - name: GetLanguageType
      address:
        EU: 0x2020688
        NA: 0x20205A0
        JP: 0x20205F8
      description: |-
        Gets the language type.
        
        This is the value backing the special LANGUAGE_TYPE script variable.
        
        return: language type
    - name: GetLanguage
      address:
        EU: 0x20206B0
        NA: 0x20205B0
        JP: 0x2020608
      description: |-
        Gets the single-byte language ID of the current program.
        
        The language ID appears to be used to index some global tables.
        
        return: language ID
    - name: StrcmpTag
      address:
        EU: 0x2020A20
        NA: 0x20208C8
        JP: 0x2020918
      description: |-
        Checks if a null-terminated string s1 either exactly equals a null-terminated string s2, or starts with s2 followed by a ':' or a ']'.
        
        r0: s1
        r1: s2
        return: bool
    - name: AtoiTag
      address:
        EU: 0x2020A64
        NA: 0x202090C
        JP: 0x202095C
      description: |-
        Parses a null-terminated string to a base-10 integer, reading digit characters between '0' and '9' until ':', ']', or the end of the string is encountered.
        
        Any characters that are not digits, ':', or ']' are ignored, and the string is converted as if those characters were removed from the string.
        
        r0: string to convert
        return: int
    - name: AnalyzeText
      address:
        EU: 0x2020F20
        NA: 0x2020DC8
        JP: 0x2020E18
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
        return: ?
    - name: PreprocessString
      address:
        EU: 0x20225EC
        NA: 0x20223F0
        JP: 0x2022440
      description: |-
        An enhanced sprintf, which recognizes certain tags and replaces them with appropiate game values.
        This function can also be used to simply insert values passed within the preprocessor args
        
        The tags utilized for this function are lowercase, it might produce uppercase tags
        that only are used when the text is being typewrited into a message box
        
        Irdkwia's notes: MenuCreateOptionString
        
        r0: [output] formatted string
        r1: maximum capacity of the output buffer
        r2: input format string
        r3: preprocessor flags
        stack[0]: pointer to preprocessor args
    - name: PreprocessStringFromId
      address:
        EU: 0x20237B4
        NA: 0x20235B8
        JP: 0x2023608
      description: |-
        Calls PreprocessString after resolving the given string ID to a string.
        
        r0: [output] formatted string
        r1: maximum capacity of the output buffer
        r2: string ID
        r3: preprocessor flags
        stack[0]: pointer to preprocessor args
    - name: StrcmpTagVeneer
      address:
        EU: 0x20237F4
        NA: 0x20235F8
        JP: 0x2023648
      description: |-
        Likely a linker-generated veneer for StrcmpTag.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: s1
        r1: s2
        return: bool
    - name: AtoiTagVeneer
      address:
        EU: 0x2023800
        NA: 0x2023604
        JP: 0x2023654
      description: |-
        Likely a linker-generated veneer for AtoiTag.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: s
        return: int
    - name: InitPreprocessorArgs
      address:
        EU: 0x20238B4
        NA: 0x2023690
        JP: 0x20236E0
      description: |-
        Initializes a struct preprocess_args.
        
        r0: preprocessor args pointer
    - name: SetStringAccuracy
      address:
        EU: 0x20245C0
        NA: 0x2024360
        JP: 0x20243B0
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: SetStringPower
      address:
        EU: 0x2024688
        NA: 0x2024428
        JP: 0x2024478
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: GetCurrentTeamNameString
      address:
        EU: 0x2024F00
        NA: 0x2024C6C
        JP: 0x2024CBC
      description: |-
        Returns the current team name with a check for special episodes and story progression. If the story
        has not progressed enough or the special episode is not for Team Charm, "???" will be displayed.
        During the Team Charm special episode, it will return "Team Charm".
        
        r0: [output] Pointer to the buffer where the string will be written
        r1: 0, 1 or 2???
        return: Pointer to the buffer where the string was written (in other words, the same value passed in r0)
    - name: GetBagNameString
      address:
        EU: 0x20250C8
        NA: 0x2024DFC
        JP: 0x2024E4C
      description: |-
        Returns "One-Item Inventory" or "Treasure Bag" depending on the size of the bag.
        
        r0: [output] Pointer to the buffer where the string will be written
        return: Pointer to the buffer where the string was written (in other words, the same value passed in r0)
    - name: GetDungeonResultString
      address:
        EU: 0x20252A4
        NA: 0x2024FD8
        JP: 0x2025028
      description: |-
        Returns a string containing some information to be used when displaying the dungeon results screen.
        
        The exact string returned depends on the value of r0:
        0: Name of the move that fainted the leader. Empty string if the leader didn't faint.
        1-3: Seems to always result in an empty string.
        4: Name of the pokémon that fainted the leader, or name of the leader if the leader didn't faint.
        5: Name of the fainted leader. Empty string if the leader didn't faint.
        
        r0: String to return
        return: Pointer to resulting string
    - name: SetQuestionMarks
      address:
        EU: 0x20253B0
        NA: 0x20250E4
        JP: 0x2025134
      description: |-
        Fills the buffer with the string '???'
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
    - name: StrcpySimple
      address:
        EU: 0x20253CC
        NA: 0x2025100
        JP: 0x2025150
      description: |-
        A simple implementation of the strcpy(3) C library function.
        
        This function was probably manually implemented by the developers. See strcpy for what's probably the real libc function.
        
        r0: dest
        r1: src
    - name: StrncpySimple
      address:
        EU: 0x20253E8
        NA: 0x202511C
        JP: 0x202516C
      description: |-
        A simple implementation of the strncpy(3) C library function.
        
        This function was probably manually implemented by the developers. See strncpy for what's probably the real libc function.
        
        r0: dest
        r1: src
        r2: n
    - name: StrncpySimpleNoPad
      address:
        EU: 0x202543C
        NA: 0x2025170
        JP: 0x20251C0
      description: |-
        Similar to StrncpySimple, but does not zero-pad the end of dest beyond the null-terminator.
        
        r0: dest
        r1: src
        r2: n
    - name: StrncmpSimple
      address:
        EU: 0x2025478
        NA: 0x20251AC
        JP: 0x20251FC
      description: |-
        A simple implementation of the strncmp(3) C library function.
        
        This function was probably manually implemented by the developers. See strncmp for what's probably the real libc function.
        
        r0: s1
        r1: s2
        r2: n
        return: comparison value
    - name: StrncpySimpleNoPadSafe
      address:
        EU: 0x20254C0
        NA: 0x20251F4
        JP: 0x2025268
      description: |-
        Like StrncpySimpleNoPad, except there's a useless check on that each character is less than 0x100 (which is impossible for the result of a ldrb instruction).
        
        r0: dest
        r1: src
        r2: n
    - name: StrcpyName
      address:
        EU: 0x20254FC
        NA: 0x2025230
        JP: 0x20252B8
      description: |-
        A special version of strcpy for handling names. Appears to use character 0x7E as some kind of
        formatting character in NA?
        
        r0: dst
        r1: src
    - name: StrncpyName
      address:
        EU: 0x20255E0
        NA: 0x2025314
        JP: 0x202536C
      description: |-
        A special version of strncpy for handling names. Appears to use character 0x7E as some kind of
        formatting character in NA? Copies at most n characters.
        
        r0: dst
        r1: src
        r2: n
    - name: GetStringFromFile
      address:
        EU: 0x2025A54
        NA: 0x2025788
        JP: 0x2025768
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: Buffer
        r1: String ID
    - name: LoadStringFile
      address:
        EU: 0x2025AE4
        NA: 0x2025818
        JP: 0x20257F8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GetStringFromFileVeneer
      address:
        EU: 0x2025B84
        NA: 0x20258B8
        JP: 0x2025898
      description: |-
        Likely a linker-generated veneer for GetStringFromFile.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: Buffer
        r1: String ID
    - name: StringFromId
      address:
        EU: 0x2025B90
        NA: 0x20258C4
        JP: 0x20258A4
      description: |-
        Gets the string corresponding to a given string ID.
        
        r0: string ID
        return: string from the string files with the given string ID
    - name: CopyStringFromId
      address:
        EU: 0x2025BB0
        NA: 0x20258E4
        JP: 0x20258C4
      description: |-
        Gets the string corresponding to a given string ID and copies it to the buffer specified in r0.
        
        r0: buffer
        r1: string ID
    - name: CopyNStringFromId
      address:
        EU: 0x2025BD8
        NA: 0x202590C
        JP: 0x20258EC
      description: |-
        Gets the string corresponding to a given string ID and copies it to the buffer specified in r0.
        
        This function won't write more than <buffer length> bytes.
        
        r0: buffer
        r1: string ID
        r2: buffer length
    - name: LoadTblTalk
      address:
        EU: 0x2025C08
        NA: 0x202593C
        JP: 0x202591C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GetTalkLine
      address:
        EU: 0x2025C58
        NA: 0x202598C
        JP: 0x202596C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: personality_index
        r1: group_id
        r2: restrictions
        return: ?
    - name: IsAOrBPressed
      address:
        EU: 0x20261CC
        NA: 0x2025EE8
        JP: 0x2025FC0
      description: |-
        Checks if A or B is currently being held.
        
        return: bool
    - name: DrawTextInWindow
      address:
        EU: 0x20264F8
        NA: 0x2026214
        JP: 0x20262EC
      description: |-
        Seems to be responsible for drawing the text in a window.
        
        Needs a call to UpdateWindow after to actually display the contents.
        Unclear if this is generic for windows or just text boxes.
        
        r0: window_id
        r1: x offset within window
        r2: y offset within window
        r3: text to draw
    - name: GetWindow
      address:
        EU: 0x20278EC
        NA: 0x20275F8
        JP: 0x2027940
      description: |-
        Get the window with a given ID from WINDOW_LIST.
        
        r0: window_id
        return: window
    - name: NewWindowScreenCheck
      address:
        EU: 0x202793C
        NA: 0x2027648
        JP: 0x20279A8
      description: |-
        Calls NewWindow, with a pre-check for any valid existing windows in WINDOW_LIST on each screen.
        
        r0: window_params (see NewWindow)
        r1: ?
        return: window_id
    - name: NewWindow
      address:
        EU: 0x20279B4
        NA: 0x20276C0
        JP: 0x2027A20
      description: |-
        Seems to return the ID of a newly initialized window in the next available slot in WINDOW_LIST, given some starting information.
        
        If WINDOW_LIST is full, it will be overflowed, with the slot with an ID of 20 being initialized and returned.
        
        r0: window_params pointer to be copied by value into window::hdr in the new window
        r1: ?
        return: window_id
    - name: SetScreenWindowsColor
      address:
        EU: 0x2027D5C
        NA: 0x2027A68
        JP: 0x2027DC8
      description: |-
        Sets the palette of the frames of windows in the specified screen
        
        r0: palette index
        r1: is upper screen
    - name: SetBothScreensWindowsColor
      address:
        EU: 0x2027D74
        NA: 0x2027A80
        JP: 0x2027DE0
      description: |-
        Sets the palette of the frames of windows in both screens
        
        r0: palette index
    - name: UpdateWindow
      address:
        EU: 0x2027DE4
        NA: 0x2027AF0
        JP: 0x2027E50
      description: |-
        Seems to cause updated window contents to be displayed.
           
        Gets called for example at the end of a text box window update and seems to "commit" the update, but in general also gets called with all kinds of window updates. 
        
        r0: window_id
    - name: ClearWindow
      address:
        EU: 0x2027E4C
        NA: 0x2027B58
        JP: 0x2027EB8
      description: |-
        Clears the window, at least in the case of a text box.
        
        The low number of XREFs makes it seem like there might be more such functions.
        
        r0: window_id
    - name: DeleteWindow
      address:
        EU: 0x2028488
        NA: 0x2028194
        JP: 0x20284F4
      description: |-
        Seems to uninitialize an active window in WINDOW_LIST with a given ID, freeing the slot for reuse by another window.
        
        r0: window_id
    - name: GetWindowRectangle
      address:
        EU: 0x2028578
        NA: 0x2028284
        JP: 0x20285E4
      description: |-
        Get the rectangle defined by a window.
        
        r0: window_id
        r1: [output] rectangle
    - name: GetWindowContents
      address:
        EU: 0x2028630
        NA: 0x202833C
        JP: 0x202869C
      description: |-
        Gets the contents structure from the window with the given ID.
        
        r0: window_id
        return: contents
    - name: LoadCursors
      address:
        EU: 0x2029800
        NA: 0x202950C
        JP: 0x2029864
      description: |-
        Load and initialize the cursor and cursor16 sprites, storing the result in CURSOR_ANIMATION_CONTROL and CURSOR_16_ANIMATION_CONTROL
        
        No params.
    - name: InitWindowTrailer
      address:
        EU: 0x2029964
        NA: 0x2029670
        JP: 0x20299C8
      description: |-
        Seems to initialize a window_trailer within a new window.
        
        r0: window_trailer pointer
    - name: Arm9LoadUnkFieldNa0x2029EC8
      address:
        EU: 0x202A1BC
        NA: 0x2029EC8
        JP: 0x202A220
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
    - name: Arm9StoreUnkFieldNa0x2029ED8
      address:
        EU: 0x202A1CC
        NA: 0x2029ED8
        JP: 0x202A230
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: value
    - name: LoadAlert
      address:
        EU: 0x202A1DC
        NA: 0x2029EE8
        JP: 0x202A240
      description: |-
        Load and initialize the alert sprite, storing the result in ALERT_ANIMATION_CONTROL
        
        No params.
    - name: PrintClearMark
      address:
        EU: 0x202A6D8
        NA: 0x202A3E4
        JP: 0x202A73C
      description: |-
        Prints the specified clear mark on the screen.
        
        Clear marks are shown on the save file load screen. They are used to show which plot milestones have already been completed.
        
        r0: Clear mark ID
        r1: X pos (unknown units, usually ranges between 3 and 27)
        r2: Y pos (unknown units, normally 14)
        r3: ?
    - name: CreateParentMenuFromStringIds
      address:
        EU: 0x202A8C0
        NA: 0x202A5CC
        JP: 0x202A924
      description: |-
        A wrapper around CreateParentMenuInternal, where the menu items can be defined by string ID instead of as strings.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: simple_menu_id_item struct array, terminated with an item with string_id 0
        return: window_id
    - name: IsEmptyString
      address:
        EU: 0x202A960
        NA: 0x202A66C
        JP: 0x202A9C4
      description: |-
        Checks if a null-terminated string is empty. A NULL pointer counts as empty.
        
        r0: string
        return: whether the string is NULL or empty
    - name: CreateParentMenu
      address:
        EU: 0x202A984
        NA: 0x202A690
        JP: 0x202A9E8
      description: |-
        A wrapper around CreateParentMenuInternal where ownership of the items array parameter won't be transferred to the menu.
        
        The menu item array will be copied onto a new array on the heap. This means the argument doesn't need to remain valid after the function returns (e.g., it can be stack-allocated).
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: simple_menu_ptr_item struct array, terminated with an item with an NULL string pointer
        return: window_id
    - name: CreateParentMenuWrapper
      address:
        EU: 0x202AA24
        NA: 0x202A730
        JP: 0x202AA88
      description: |-
        A wrapper around CreateParentMenu that sets field_0x1b0 to 1 if the returned window_id is not -2.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: simple_menu_ptr_item struct array, terminated with an item with an NULL string pointer
        return: window_id
    - name: CreateParentMenuInternal
      address:
        EU: 0x202AA50
        NA: 0x202A75C
        JP: 0x202AAB4
      description: |-
        Creates a window containing a simple textual menu with a list of options that might open submenus when selected. Also see struct simple_menu.
        
        Multiple levels of nesting is possible, i.e., a submenu could itself be a parent menu.
        
        This is used in various menus that lead to submenus. For example, the top-level ground and dungeon mode menus.
        
        If window_params is NULL, PARENT_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: heap-allocated simple_menu_items array, the menu takes ownership
        return: window_id
    - name: ResumeParentMenu
      address:
        EU: 0x202AC48
        NA: 0x202A954
        JP: 0x202ACAC
      description: |-
        Resumes input for a window created with CreateParentMenuInternal. Used for menus that do not close even after selecting an option.
        
        r0: window_id
    - name: SetParentMenuState7
      address:
        EU: 0x202AD9C
        NA: 0x202AAA8
        JP: 0x202AE00
      description: |-
        Sets the state of a parent menu to 7.
        
        r0: window_id
    - name: CloseParentMenu
      address:
        EU: 0x202ADB0
        NA: 0x202AABC
        JP: 0x202AE14
      description: |-
        Closes a window created with CreateParentMenu or CreateParentMenuFromStringIds.
        
        r0: window_id
    - name: IsParentMenuActive
      address:
        EU: 0x202AE34
        NA: 0x202AB40
        JP: 0x202AE98
      description: |-
        This is a guess.
        
        Checks if the state of a parent menu is something other than 8 or 9.
        
        r0: window_id
        return: bool
    - name: CheckParentMenuField0x1A0
      address:
        EU: 0x202AE54
        NA: 0x202AB60
        JP: 0x202AEB8
      description: |-
        Checks if a parent menu's field_0x1a0 is 0.
        
        r0: window_id
        return: bool
    - name: UpdateParentMenu
      address:
        EU: 0x202AEF0
        NA: 0x202ABFC
        JP: 0x202AF54
      description: |-
        Window update function for parent menus.
        
        r0: window pointer
    - name: CreateSimpleMenuFromStringIds
      address:
        EU: 0x202B3E0
        NA: 0x202B0EC
        JP: 0x202B444
      description: |-
        A wrapper around CreateSimpleMenuInternal, where the menu items can be defined by string ID instead of as strings.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: simple_menu_id_item struct array, terminated with an item with string_id 0
        stack[0]: number of items
        return: window_id
    - name: CreateSimpleMenu
      address:
        EU: 0x202B4A0
        NA: 0x202B1AC
        JP: 0x202B504
      description: |-
        A wrapper around CreateSimpleMenuInternal where ownership of the simple_menu_items array parameter won't be transferred to the menu.
        
        The menu item array will be copied onto a new array on the heap. This means the argument doesn't need to remain valid after the function returns (e.g., it can be stack-allocated).
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: simple_menu_items array
        stack[0]: number of items
        return: window_id
    - name: CreateSimpleMenuInternal
      address:
        EU: 0x202B578
        NA: 0x202B284
        JP: 0x202B5DC
      description: |-
        Creates a window containing a simple textual menu with a list of options. Also see struct simple_menu.
        
        This is used in lots of places. For example, some simple Yes/No prompts.
        
        If window_params is NULL, SIMPLE_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: heap-allocated simple_menu_items array, the menu takes ownership
        stack[0]: number of items
        return: window_id
    - name: ResumeSimpleMenu
      address:
        EU: 0x202B784
        NA: 0x202B490
        JP: 0x202B7E8
      description: |-
        Resumes input for a window created with CreateSimpleMenuInternal. Used for menus that do not close even after selecting an option.
        
        r0: window_id
    - name: CloseSimpleMenu
      address:
        EU: 0x202B7B8
        NA: 0x202B4C4
        JP: 0x202B81C
      description: |-
        Closes a window created with CreateSimpleMenu or CreateSimpleMenuFromStringIds.
        
        r0: window_id
    - name: IsSimpleMenuActive
      address:
        EU: 0x202B7E4
        NA: 0x202B4F0
        JP: 0x202B848
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        Checks if the menu state is anything other than 7 or 8.
        
        r0: window_id
        return: bool
    - name: CheckSimpleMenuField0x1A0
      address:
        EU: 0x202B804
        NA: 0x202B510
        JP: 0x202B868
      description: |-
        Checks if simple_menu::field_0x1a0 is 0.
        
        r0: window_id
        return: bool
    - name: GetSimpleMenuField0x1A4
      address:
        EU: 0x202B84C
        NA: 0x202B558
        JP: 0x202B8B0
      description: |-
        Gets the value of simple_menu::field_0x1a4.
        
        r0: window_id
        return: field_0x1a4
    - name: GetSimpleMenuResult
      address:
        EU: 0x202B870
        NA: 0x202B57C
        JP: 0x202B8D4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: window_id
        return: ?
    - name: UpdateSimpleMenu
      address:
        EU: 0x202B8BC
        NA: 0x202B5C8
        JP: 0x202B920
      description: |-
        Window update function for simple menus.
        
        r0: window pointer
    - name: SetSimpleMenuField0x1AC
      address:
        EU: 0x202BD00
        NA: 0x202BA0C
        JP: 0x202BD64
      description: |-
        Sets simple_menu::field_0x1ac to the given value.
        
        r0: window_id
        r1: value
    - name: CreateAdvancedMenu
      address:
        EU: 0x202BD14
        NA: 0x202BA20
        JP: 0x202BD78
      description: |-
        Creates a window containing a textual menu with complex layout and functionality (e.g., paging through multiple pages). Also see struct advanced_menu.
        
        This is used for menus like the IQ skills menu, and the dungeon selection menu from the overworld crossroads. Curiously, it's also used in some non-interactive contexts like the Adventure Log.
        
        If window_params is NULL, ADVANCED_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        The entry function is used to get the strings for all currently available options, so when the page is flipped the entry function is used to get the strings for the entries on the other page?
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: entry_function
        stack[0]: total number of options
        stack[1]: number of options per page
        return: window_id
    - name: ResumeAdvancedMenu
      address:
        EU: 0x202BEE4
        NA: 0x202BBF0
        JP: 0x202BF48
      description: |-
        Resumes input for a window created with CreateAdvancedMenu. Used for menus that do not close even after selecting an option.
        
        r0: window_id
    - name: CloseAdvancedMenu
      address:
        EU: 0x202BF38
        NA: 0x202BC44
        JP: 0x202BF9C
      description: |-
        Closes a window created with CreateAdvancedMenu.
        
        r0: window_id
    - name: IsAdvancedMenuActive2
      address:
        EU: 0x202BFB0
        NA: 0x202BCBC
        JP: 0x202C014
      description: |-
        This is a guess, by analogy to IsSimpleMenuActive, which does the same thing. Most of window types also have an analogous function that checks the state value. It's unclear how this relates to the other IsAdvancedMenuActive, or if this guess is completely wrong.
        
        Checks if the state of an advanced menu is something other than 7 or 8.
        
        r0: window_id
        return: bool
    - name: IsAdvancedMenuActive
      address:
        EU: 0x202BFD0
        NA: 0x202BCDC
        JP: 0x202C034
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        Checks if advanced_menu::field_0x1a0 is 0.
        
        This seems to resemble the Check*Field* functions of some of the other menu types. It's unclear whether these are the real "IsActive" functions, or whether the ones that check the state value are. It may be noteworthy that all menu types seem to have a variant of the "state checking" function, but only some menu types seem to have a variant of the "check field" function.
        
        r0: window_id
        return: bool
    - name: GetAdvancedMenuCurrentOption
      address:
        EU: 0x202BFF0
        NA: 0x202BCFC
        JP: 0x202C054
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: window_id
        return: ?
    - name: GetAdvancedMenuResult
      address:
        EU: 0x202C004
        NA: 0x202BD10
        JP: 0x202C068
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: window_id
        return: ?
    - name: UpdateAdvancedMenu
      address:
        EU: 0x202C058
        NA: 0x202BD64
        JP: 0x202C0BC
      description: |-
        Window update function for advanced menus.
        
        r0: window pointer
    - name: CreateCollectionMenu
      address:
        EU: 0x202C69C
        NA: 0x202C3A8
        JP: 0x202C700
      description: |-
        Creates a window containing a menu for manipulating a collection of objects, with complex layout and functionality (e.g., paging). Also see struct collection_menu.
        
        Collection menus seem similar to advanced menus, but are used for certain menus involving item management (Kangaskhan Storage, Kecleon shop, Croagunk Swap Shop), missions (job selection, bulletin board), and possibly other things.
        
        If window_params is NULL, COLLECTION_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: some function pointer?
        stack[0]: ?
        stack[1]: total number of options
        stack[2]: number of options per page
        return: window_id
    - name: SetCollectionMenuField0x1BC
      address:
        EU: 0x202C8D4
        NA: 0x202C5E0
        JP: 0x202C938
      description: |-
        Sets collection_menu::field_0x1bc to the given value.
        
        r0: window_id
        r1: value
    - name: SetCollectionMenuWidth
      address:
        EU: 0x202C8E8
        NA: 0x202C5F4
        JP: 0x202C94C
      description: |-
        Sets collection_menu::width to a new value, clamped to be no greater than (window_params::width * 8 - 1) for the window.
        
        r0: window_id
        r1: width
    - name: CloseCollectionMenu
      address:
        EU: 0x202CA00
        NA: 0x202C70C
        JP: 0x202CA64
      description: |-
        Closes a window created with CreateCollectionMenu.
        
        r0: window_id
    - name: IsCollectionMenuActive
      address:
        EU: 0x202CA1C
        NA: 0x202C728
        JP: 0x202CA80
      description: |-
        This is a guess.
        
        Checks if the state of a collection menu is something other than 6 or 7.
        
        r0: window_id
        return: bool
    - name: SetCollectionMenuField0x1C8
      address:
        EU: 0x202CA88
        NA: 0x202C794
        JP: 0x202CAEC
      description: |-
        Sets collection_menu::field_0x1c8 to the given value.
        
        r0: window_id
        r1: value
    - name: SetCollectionMenuField0x1A0
      address:
        EU: 0x202CA9C
        NA: 0x202C7A8
        JP: 0x202CB00
      description: |-
        Sets collection_menu::field_0x1a0 to the given value.
        
        r0: window_id
        r1: value
    - name: SetCollectionMenuField0x1A4
      address:
        EU: 0x202CAB0
        NA: 0x202C7BC
        JP: 0x202CB14
      description: |-
        Sets collection_menu::field_0x1a4 to the given value.
        
        r0: window_id
        r1: value
    - name: SetCollectionMenuVoidFn
      address:
        EU: 0x202CAC4
        NA: 0x202C7D0
        JP: 0x202CB28
      description: |-
        Sets collection_menu::field_0x1a8 to the given function pointer.
        
        r0: window_id
        r1: some function pointer?
    - name: UpdateCollectionMenu
      address:
        EU: 0x202CAFC
        NA: 0x202C808
        JP: 0x202CB60
      description: |-
        Window update function for collection menus.
        
        r0: window pointer
    - name: SetCollectionMenuField0x1B2
      address:
        EU: 0x202D3CC
        NA: 0x202D0D8
        JP: 0x202D430
      description: |-
        Sets collection_menu::field_0x1b2 to the given value.
        
        r0: window_id
        r1: value
    - name: IsCollectionMenuState3
      address:
        EU: 0x202D408
        NA: 0x202D114
        JP: 0x202D46C
      description: |-
        Checks if a collection menu has a state value of 3.
        
        r0: window_id
        return: bool
    - name: CreateOptionsMenu
      address:
        EU: 0x202D4E4
        NA: 0x202D1F0
        JP: 0x202D548
      description: |-
        Creates a window containing a menu controlling game options. Also see struct options_menu.
        
        This is used for the options and window options menus, among other things.
        
        If window_params is NULL, OPTIONS_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: options_menu_id_item struct array, terminated with an item with msg_id 0
        stack[0]: number of items
        stack[1]: ?
        return: window_id
    - name: CloseOptionsMenu
      address:
        EU: 0x202D824
        NA: 0x202D530
        JP: 0x202D888
      description: |-
        Closes a window created with CreateOptionsMenu.
        
        r0: window_id
    - name: IsOptionsMenuActive
      address:
        EU: 0x202D850
        NA: 0x202D55C
        JP: 0x202D8B4
      description: |-
        This is a guess.
        
        Checks if the state of an options menu is something other than 6 or 7.
        
        r0: window_id
        return: bool
    - name: CheckOptionsMenuField0x1A4
      address:
        EU: 0x202D870
        NA: 0x202D57C
        JP: 0x202D8D4
      description: |-
        Checks if options_menu::field_0x1a4 is 0.
        
        r0: window_id
        return: bool
    - name: UpdateOptionsMenu
      address:
        EU: 0x202D90C
        NA: 0x202D618
        JP: 0x202D970
      description: |-
        Window update function for options menus.
        
        r0: window pointer
    - name: CreateDebugMenu
      address:
        EU: 0x202DF44
        NA: 0x202DC50
        JP: 0x202DFA8
      description: |-
        Creates a window containing the debug menu (probably). Also see struct debug_menu.
        
        This is an educated guess, since this function references string IDs of debug menu strings.
        
        See enum debug_flag and enum debug_log_flag.
        
        If window_params is NULL, DEBUG_MENU_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: array of menu item string IDs
        stack[0]: number of menu items
        stack[1]: ?
        return: window_id
    - name: CloseDebugMenu
      address:
        EU: 0x202E1EC
        NA: 0x202DEF8
        JP: 0x202E24C
      description: |-
        Closes a window created with CreateDebugMenu.
        
        r0: window_id
    - name: IsDebugMenuActive
      address:
        EU: 0x202E218
        NA: 0x202DF24
        JP: 0x202E278
      description: |-
        This is a guess.
        
        Checks if the state of a debug menu is something other than 6 or 7.
        
        r0: window_id
        return: bool
    - name: CheckDebugMenuField0x1A4
      address:
        EU: 0x202E238
        NA: 0x202DF44
        JP: 0x202E298
      description: |-
        Checks if debug_menu::field_0x1a4 is 0.
        
        r0: window_id
        return: bool
    - name: UpdateDebugMenu
      address:
        EU: 0x202E28C
        NA: 0x202DF98
        JP: 0x202E2EC
      description: |-
        Window update function for debug menus.
        
        r0: window pointer
    - name: CreateScrollBoxSingle
      address:
        EU: 0x202E6C0
        NA: 0x202E3CC
        JP: 0x202E720
      description: |-
        Creates window containing text that pages vertically on overflow, with a single pair of strings. Also see struct scroll_box.
        
        This includes things like descriptions for items and moves.
        
        If window_params is NULL, SCROLL_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: string ID 1
        stack[0]: preprocessor args 1
        stack[1]: string ID 2
        stack[2]: preprocessor args 2
        return: window_id
    - name: CreateScrollBoxMulti
      address:
        EU: 0x202E80C
        NA: 0x202E518
        JP: 0x202E86C
      description: |-
        Creates window containing text that pages vertically on overflow, with an array of string pairs. Also see struct scroll_box.
        
        This includes things like descriptions for items and moves.
        
        If window_params is NULL, SCROLL_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: number of string pairs
        stack[0]: string ID 1 array
        stack[1]: preprocessor args 1 array
        stack[2]: string ID 2 array
        stack[3]: preprocessor args 2 array
        return: window_id
    - name: SetScrollBoxState7
      address:
        EU: 0x202E9A4
        NA: 0x202E6B0
        JP: 0x202EA04
      description: |-
        Sets the state of a scroll box to 7.
        
        r0: window_id
    - name: CloseScrollBox
      address:
        EU: 0x202E9BC
        NA: 0x202E6C8
        JP: 0x202EA1C
      description: |-
        Closes a window created with CreateScrollBoxSingle or CreateScrollBoxMulti.
        
        r0: window_id
    - name: IsScrollBoxActive
      address:
        EU: 0x202E9D8
        NA: 0x202E6E4
        JP: 0x202EA38
      description: |-
        This is a guess.
        
        Checks if the state of a scroll box is not 8.
        
        r0: window_id
        return: bool
    - name: UpdateScrollBox
      address:
        EU: 0x202E9FC
        NA: 0x202E708
        JP: 0x202EA5C
      description: |-
        Window update function for scroll boxes.
        
        r0: window pointer
    - name: CreateDialogueBox
      address:
        EU: 0x202F3A4
        NA: 0x202F0B0
        JP: 0x202F3F4
      description: |-
        Creates a window containing text that is gradually revealed via scrolling, and pages on overflow. Also see struct dialogue_box.
        
        This is primarily used for character dialogue, hence the name. However, it can also be used for other types of messages. The defining feature of this window type is the scrolling/paging behavior.
        
        If window_params is NULL, DIALOGUE_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        r0: window_params
        return: window_id
    - name: CloseDialogueBox
      address:
        EU: 0x202F43C
        NA: 0x202F148
        JP: 0x202F48C
      description: |-
        Closes a window created with CreateDialogueBox.
        
        r0: window_id
    - name: IsDialogueBoxActive
      address:
        EU: 0x202F474
        NA: 0x202F180
        JP: 0x202F4C4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: window_id
        return: bool
    - name: ShowStringIdInDialogueBox
      address:
        EU: 0x202F4A8
        NA: 0x202F1B4
        JP: 0x202F4F8
      description: |-
        Preprocesses the corresponding string_id message in the text file and puts it into the dialogue box.
        
        r0: window_id
        r1: preprocessor flags (see PreprocessString)
        r2: string_id
        r3: pointer to preprocessor args (see PreprocessString)
    - name: ShowStringInDialogueBox
      address:
        EU: 0x202F530
        NA: 0x202F23C
        JP: 0x202F580
      description: |-
        Preprocesses the passed string and puts it into the dialogue box.
        
        r0: window_id
        r1: preprocessor flags (see PreprocessString)
        r2: string
        r3: pointer to preprocessor args (see PreprocessString)
    - name: ShowDialogueBox
      address:
        EU: 0x202F698
        NA: 0x202F3A4
        JP: 0x202F6E8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: window_id
    - name: ReadStringFromDialogueBox
      address:
        EU: 0x202F740
        NA: 0x202F44C
        JP: 0x202F790
      description: |-
        Copies data from the dialogue box's string buffer into an output buffer.
        
        r0: window_id
        r1: [output] string buffer
        r2: number of bytes to read
    - name: UpdateDialogueBox
      address:
        EU: 0x202F77C
        NA: 0x202F488
        JP: 0x202F7CC
      description: |-
        Window update function for dialogue boxes.
        
        r0: window pointer
    - name: CreatePortraitBox
      address:
        EU: 0x202F8A0
        NA: 0x202F5AC
        JP: 0x202F8F0
      description: |-
        Creates a window containing a character portrait. Also see struct portrait_box.
        
        This is commonly paired with a dialogue box, but can also be used standalone.
        
        If framed, the window box type will be 0xFC, otherwise it will be 0xF9.
        
        The new window will always default to PORTRAIT_BOX_DEFAULT_WINDOW_PARAMS.
        
        r0: screen index
        r1: palette_idx
        r2: framed
        return: window_id
    - name: ClosePortraitBox
      address:
        EU: 0x202F944
        NA: 0x202F650
        JP: 0x202F994
      description: |-
        Closes a window created with CreatePortraitBox.
        
        r0: window_id
    - name: PortraitBoxNeedsUpdate
      address:
        EU: 0x202F960
        NA: 0x202F66C
        JP: 0x202F9B0
      description: |-
        Checks if a portrait box has a state of PORTRAIT_BOX_TRY_UPDATE or PORTRAIT_BOX_UPDATE.
        
        r0: window_id
        return: bool
    - name: ShowPortraitInPortraitBox
      address:
        EU: 0x202F984
        NA: 0x202F690
        JP: 0x202F9D4
      description: |-
        Stages a portrait to be rendered in a portrait box at next update (sets portrait_box::buffer_state).
        
        If portrait is NULL, the default portrait will be shown (see InitPortraitParams).
        
        r0: window_id
        r1: portrait params pointer
    - name: HidePortraitBox
      address:
        EU: 0x202F9D0
        NA: 0x202F6DC
        JP: 0x202FA20
      description: |-
        Flags a portrait box to be hidden at next update (sets portrait_box::hide) if it's not already in the PORTRAIT_BOX_HIDDEN state, and resets its buffer state.
        
        r0: window_id
    - name: UpdatePortraitBox
      address:
        EU: 0x202FA00
        NA: 0x202F70C
        JP: 0x202FA50
      description: |-
        Window update function for portrait boxes.
        
        r0: window pointer
    - name: CreateTextBox
      address:
        EU: 0x202FBB8
        NA: 0x202F8C4
        JP: 0x202FC08
      description: |-
        Calls CreateTextBoxInternal, sets the callback without an argument, and returns the window_id.
        
        r0: window_params
        r1: text box callback function
        return: window_id
    - name: CreateTextBoxWithArg
      address:
        EU: 0x202FBD0
        NA: 0x202F8DC
        JP: 0x202FC20
      description: |-
        Calls CreateTextBoxInternal, sets the callback with an argument, and returns the window_id.
        
        r0: window_params
        r1: text box callback with arg function
        r2: callback argument
        return: window_id
    - name: CloseTextBox
      address:
        EU: 0x202FBF0
        NA: 0x202F8FC
        JP: 0x202FC40
      description: |-
        Closes a window created with CreateTextBox or CreateTextBoxWithArg.
        
        r0: window_id
    - name: CloseTextBox2
      address:
        EU: 0x202FC0C
        NA: 0x202F918
        JP: 0x202FC5C
      description: |-
        Seems to do some things with the text box, before doing the same things that CloseTextBox does.
        
        r0: window_id
    - name: CreateTextBoxInternal
      address:
        EU: 0x202FCD0
        NA: 0x202F9DC
        JP: 0x202FD20
      description: |-
        Creates a window containing simple text, without much advanced functionality. Also see struct text_box.
        
        If window_params is NULL, TEXT_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        r0: window_params
        return: text_box pointer
    - name: UpdateTextBox
      address:
        EU: 0x202FD50
        NA: 0x202FA5C
        JP: 0x202FDA0
      description: |-
        Window update function for text boxes.
        
        r0: window pointer
    - name: IsTextBoxActive
      address:
        EU: 0x202FE90
        NA: 0x202FB9C
        JP: 0x202FEE0
      description: |-
        This is a guess.
        
        Checks if the state of a text box is not 7.
        
        r0: window_id
        return: bool
    - name: CreateAreaNameBox
      address:
        EU: 0x202FEB0
        NA: 0x202FBBC
        JP: 0x202FF00
      description: |-
        Creates a window containing the area name, as resolved from the "[area:0]" tag.
        
        This only seems to be used for the "area name" text box in the top-level menu in ground mode (not dungeon mode), and the analogous text box on the world map transition screen before entering a dungeon.
        
        If window_params is NULL, AREA_NAME_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields. If window_params::width is 0, it will be computed based on the contained text. If window_params::height is 0, it will default to 2.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: ID (for preprocessor_args)
        return: window_id
    - name: SetAreaNameBoxState3
      address:
        EU: 0x2030030
        NA: 0x202FD3C
        JP: 0x2030080
      description: |-
        Sets the state of an area name box to 3.
        
        r0: window_id
    - name: CloseAreaNameBox
      address:
        EU: 0x2030044
        NA: 0x202FD50
        JP: 0x2030094
      description: |-
        Closes a window created with CreateAreaNameBox.
        
        r0: window_id
    - name: IsAreaNameBoxActive
      address:
        EU: 0x2030060
        NA: 0x202FD6C
        JP: 0x20300B0
      description: |-
        This is a guess.
        
        Checks if the state of an area name box is something other than 2 or 4.
        
        r0: window_id
        return: bool
    - name: UpdateAreaNameBox
      address:
        EU: 0x2030080
        NA: 0x202FD8C
        JP: 0x20300D0
      description: |-
        Window update function for area name boxes.
        
        r0: window pointer
    - name: CreateControlsChart
      address:
        EU: 0x2030120
        NA: 0x202FE2C
        JP: 0x2030170
      description: |-
        Creates a window containing a chart of player controls for some context. Also see struct controls_chart.
        
        This is usually used for static top-screen control reference charts.
        
        If window_params is NULL, CONTROLS_CHART_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: string ID
        return: window_id
    - name: CloseControlsChart
      address:
        EU: 0x20301C8
        NA: 0x202FED4
        JP: 0x2030218
      description: |-
        Closes a window created with CreateControlsChart.
        
        r0: window_id
    - name: IsControlsChartActive
      address:
        EU: 0x20301E4
        NA: 0x202FEF0
        JP: 0x2030234
      description: |-
        This is a guess.
        
        Checks if the state of a controls chart is something other than 2 or 4.
        
        r0: window_id
        return: bool
    - name: UpdateControlsChart
      address:
        EU: 0x2030204
        NA: 0x202FF10
        JP: 0x2030254
      description: |-
        Window update function for controls charts.
        
        r0: window pointer
    - name: CreateAlertBox
      address:
        EU: 0x20302A4
        NA: 0x202FFB0
        JP: 0x20302F4
      description: |-
        Creates a window containing text that will disappear after a certain amount of time. Also see struct alert_box.
        
        This is only used in dungeon mode, for the "popup alert" messages about things happening in the dungeon (which will also be accessible in the message logs).
        
        If window_params is NULL, ALERT_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        r0: window_params
        return: window_id
    - name: CloseAlertBox
      address:
        EU: 0x2030338
        NA: 0x2030044
        JP: 0x2030388
      description: |-
        Closes a window created with CreateAlertBox.
        
        r0: window_id
    - name: IsAlertBoxActive
      address:
        EU: 0x20304E8
        NA: 0x20301F4
        JP: 0x2030538
      description: |-
        This is a guess.
        
        Checks if the state of an alert box is 3.
        
        r0: window_id
        return: bool
    - name: UpdateAlertBox
      address:
        EU: 0x2030568
        NA: 0x2030274
        JP: 0x20305B8
      description: |-
        Window update function for alert boxes.
        
        r0: window pointer
    - name: CreateAdvancedTextBox
      address:
        EU: 0x20308A8
        NA: 0x20305B4
        JP: 0x20308F8
      description: |-
        Calls CreateAdvancedTextBoxInternal with all the selectable items on one page (n_items_per_page = n_items), sets the callback without an argument, and returns the window_id.
        
        If window_params is NULL, ADVANCED_TEXT_BOX_DEFAULT_WINDOW_PARAMS will be used. Otherwise, it will be copied onto the window, ignoring the update and contents fields.
        
        If window_extra_info is non-NULL, it will be copied onto the window. Note that window_extra_info can only be NULL if there are no window_flags set that require extra info.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: text box callback function
        stack[0]: number of selectable items
        return: window_id
    - name: CreateAdvancedTextBoxWithArg
      address:
        EU: 0x20308D8
        NA: 0x20305E4
        JP: 0x2030928
      description: |-
        Calls CreateAdvancedTextBoxInternal with all the selectable items on one page (n_items_per_page = n_items), sets the callback with an argument, and returns the window_id.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: text box callback with arg function
        stack[0]: callback argument
        stack[1]: number of selectable items
        return: window_id
    - name: CreateAdvancedTextBoxInternal
      address:
        EU: 0x2030910
        NA: 0x203061C
        JP: 0x2030960
      description: |-
        Creates a window containing text formatted in complex, potentially sectioned layouts. Also see struct advanced_text_box.
        
        This is usually used to display text with "pretty" formatting in certain contexts, such as the message log, the move selection menu, team member summaries, etc.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: total number of selectable items
        stack[0]: number of selectable items per page
        return: advanced_text_box pointer
    - name: SetAdvancedTextBoxPartialMenu
      address:
        EU: 0x2030A70
        NA: 0x203077C
        JP: 0x2030AC0
      description: |-
        Seems to set advanced_text_box::flags::partial_menu to the given value?
        
        r0: window_id
        r1: partial_menu flag value
    - name: SetAdvancedTextBoxField0x1C4
      address:
        EU: 0x2030A98
        NA: 0x20307A4
        JP: 0x2030AE8
      description: |-
        Sets the value of advanced_text_box::field_0x1c4 to the given value.
        
        r0: window_id
        r1: value
    - name: SetAdvancedTextBoxField0x1C2
      address:
        EU: 0x2030B30
        NA: 0x203083C
        JP: 0x2030B80
      description: |-
        Sets advanced_text_box::field_0x1c2 to 1.
        
        r0: window_id
    - name: CloseAdvancedTextBox2
      address:
        EU: 0x2030B44
        NA: 0x2030850
        JP: 0x2030B94
      description: |-
        Seems to do some things with the text box, before doing the same things that CloseAdvancedTextBox does.
        
        r0: window_id
    - name: SetAdvancedTextBoxState5
      address:
        EU: 0x2030B80
        NA: 0x203088C
        JP: 0x2030BD0
      description: |-
        Sets the state of an advanced text box to 5.
        
        r0: window_id
    - name: CloseAdvancedTextBox
      address:
        EU: 0x2030B94
        NA: 0x20308A0
        JP: 0x2030BE4
      description: |-
        Closes a window created with CreateAdvancedTextBox or CreateAdvancedTextBoxWithArg.
        
        r0: window_id
    - name: IsAdvancedTextBoxActive
      address:
        EU: 0x2030BB8
        NA: 0x20308C4
        JP: 0x2030C08
      description: |-
        This is a guess.
        
        Checks if the state of an advanced text box is something other than 6 or 7.
        
        r0: window_id
        return: bool
    - name: GetAdvancedTextBoxFlags2
      address:
        EU: 0x2030D34
        NA: 0x2030A40
        JP: 0x2030D60
      description: |-
        Gets the value of advanced_text_box::flags2.
        
        r0: window_id
        return: flags2
    - name: SetUnkAdvancedTextBoxFn
      address:
        EU: 0x2030DB4
        NA: 0x2030AC0
        JP: 0x2030DE0
      description: |-
        Sets the value of advanced_text_box::field_0x1b4 to the given function pointer.
        
        r0: window_id
        r1: some function pointer?
    - name: SetUnkAdvancedTextBoxWindowFn
      address:
        EU: 0x2030DC8
        NA: 0x2030AD4
        JP: 0x2030DF4
      description: |-
        Sets the value of advanced_text_box::field_0x1b8 to the given function pointer.
        
        r0: window_id
        r1: some function pointer?
    - name: UpdateAdvancedTextBox
      address:
        EU: 0x2030DDC
        NA: 0x2030AE8
        JP: 0x2030E08
      description: |-
        Window update function for advanced text boxes.
        
        r0: window pointer
    - name: PlayAdvancedTextBoxInputSound
      address:
        EU: 0x203121C
        NA: 0x2030F28
        JP: 0x2031248
      description: |-
        Calls PlayWindowInputSound for an advanced text box.
        
        r0: window_id
        r1: index for PlayWindowInputSound
    - name: CreateTeamSelectionMenu
      address:
        EU: 0x2031238
        NA: 0x2030F44
        JP: 0x2031264
      description: |-
        Creates a window containing a menu for selecting a single team member. Also see struct team_selection_menu.
        
        If window_params::width and/or window_params::height are 0, they will be computed based on the contained text.
        
        This appears to be used for various shop (and shop-like) interfaces when a single team member needs to be selected. For example, the Electivire Link Shop, the Chimecho Assembly, the Croagunk Swap Shop, and Luminous Spring. It's unknown if this is used for other contexts besides team member selection.
        
        r0: window_params
        r1: window_flags
        r2: window_extra_info pointer
        r3: function to get the menu item text for a given team member
        stack[0]: total number of options
        stack[1]: number of options per page
        return: window_id
    - name: CloseTeamSelectionMenu
      address:
        EU: 0x203148C
        NA: 0x2031198
        JP: 0x20314B8
      description: |-
        Closes a window created with CreateTeamSelectionMenu.
        
        r0: window_id
    - name: IsTeamSelectionMenuActive
      address:
        EU: 0x20314A8
        NA: 0x20311B4
        JP: 0x20314D4
      description: |-
        This is a guess.
        
        Checks if the state of a team selection menu is something other than 6 or 7.
        
        r0: window_id
        return: bool
    - name: UpdateTeamSelectionMenu
      address:
        EU: 0x2031530
        NA: 0x203123C
        JP: 0x203155C
      description: |-
        Window update function for team selection menus.
        
        r0: window pointer
    - name: IsTeamSelectionMenuState3
      address:
        EU: 0x2031BA4
        NA: 0x20318B0
        JP: 0x2031BD0
      description: |-
        Checks if the state of a team selection menu is 3.
        
        r0: window_id
    - name: CalcMenuHeightDiv8
      address:
        EU:
          - 0x2031D98
          - 0x2032CD8
        NA:
          - 0x2031AA4
          - 0x20329E4
        JP:
          - 0x2031DC4
          - 0x2032D04
      description: |-
        Calculates the window height (divided by 8, as in struct window_params) of a menu, given its items and input flags.
        
        For certain input flags, the number of options per page will be clamped to the total number of options if the per-page count exceeds the total.
        
        r0: window_flags
        r1: window_extra_info pointer
        r2: total number of options
        r3: number of options per page
        return: height / 8
    - name: InitWindowInput
      address:
        EU: 0x2031DEC
        NA: 0x2031AF8
        JP: 0x2031E18
      description: |-
        This seems to be called when creating most interactive windows that respond to user input, like menus (but also other interactive windows like scroll boxes and advanced text boxes). It presumably sets up the state necessary for detecting and responding to user input.
        
        r0: window_input_ctx pointer
        r1: window_flags
        r2: window_extra_info pointer
        r3: window rectangle
        stack[0]: total number of selectable items
        stack[1]: number of selectable items per page
    - name: IsMenuOptionActive
      address:
        EU: 0x2032768
        NA: 0x2032474
        JP: 0x2032794
      description: |-
        Called whenever a menu option is selected. Returns whether the option is active or not.
        
        r0: ?
        return: True if the menu option is enabled, false otherwise.
    - name: PlayWindowInputSound
      address:
        EU: 0x2032C54
        NA: 0x2032960
        JP: 0x2032C80
      description: |-
        Plays a "beep" sound when giving an input to an interactive window (typically, when choosing a menu option).
        
        r0: window_input_ctx pointer
        r1: Some kind of index used to determine the ID of the sound to play
    - name: InitInventoryMenuInput
      address:
        EU: 0x2032D2C
        NA: 0x2032A38
        JP: 0x2032D58
      description: |-
        Almost exactly the same as InitWindowInput, except two differences in field assignments on the window input context, one of which uses an extra parameter.
        
        r0: inventory_menu_input_ctx pointer
        r1: window_flags
        r2: window_extra_info pointer
        r3: window rectangle
        stack[0]: total number of selectable items
        stack[1]: number of selectable items per page
        stack[2]: ?
    - name: ShowKeyboard
      address:
        EU: 0x2036AE4
        NA: 0x20367F0
        JP: 0x2036B08
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: string ID
        r1: buffer1
        r2: ???
        r3: buffer2
        return: ?
    - name: GetKeyboardStatus
      address:
        EU: 0x2036FD0
        NA: 0x2036CD4
        JP: 0x2036FF0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: ?
    - name: GetKeyboardStringResult
      address:
        EU: 0x2037858
        NA: 0x203755C
        JP: 0x203789C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: ?
    - name: TeamSelectionMenuGetItem
      address:
        EU: 0x203AA58
        NA: 0x203A75C
        JP: 0x203AB68
      description: |-
        Gets the menu item text (member name) for a given team member for a team selection menu.
        
        r0: buffer
        r1: team member index
        return: menu item text (points into buffer)
    - name: PrintMoveOptionMenu
      address:
        EU: 0x20405BC
        NA: 0x20402C0
        JP: 0x204064C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: PrintIqSkillsMenu
      address:
        EU: 0x2041D3C
        NA: 0x2041A40
        JP: 0x2041DA8
      description: |-
        Draws the IQ skills menu for a certain monster.
        
        r0: Monster species
        r1: Pointer to bitarray where the enabled skills will be written when enabling or disabling them in the menu
        r2: Monster IQ
        r3: True if the monster is blinded
    - name: GetNotifyNote
      address:
        EU: 0x20487BC
        NA: 0x20484A0
        JP: 0x204880C
      description: |-
        Returns the current value of NOTIFY_NOTE.
        
        return: bool
    - name: SetNotifyNote
      address:
        EU: 0x20487CC
        NA: 0x20484B0
        JP: 0x204881C
      description: |-
        Sets NOTIFY_NOTE to the given value.
        
        r0: bool
    - name: InitSpecialEpisodeHero
      address:
        EU: 0x2048804
        NA: 0x20484E8
        JP: 0x2048854
      description: |-
        Removes/invalidates the special episode member slots, zero inits the special episode treasure bag, zero inits the
        special episode Kecleon shops, zero inits VAR_WORLD_MAP_MARK_LIST_SPECIAL, sets VAR_SPECIAL_EPISODE_OPEN_OLD for
        the corresponding special episode, and initializes the hero for the special episode.
        
        No params.
    - name: EventFlagBackupVeneer
      address:
        EU: 0x2048A74
        NA: 0x2048758
        JP: 0x2048AC4
      description: |-
        Likely a linker-generated veneer for EventFlagBackup.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        No params.
    - name: InitMainTeamAfterQuiz
      address:
        EU: 0x2048AE0
        NA: 0x20487C4
        JP: 0x2048B30
      description: |-
        Implements SPECIAL_PROC_INIT_MAIN_TEAM_AFTER_QUIZ (see ScriptSpecialProcessCall).
        
        No params.
    - name: InitSpecialEpisodePartners
      address:
        EU: 0x2048D28
        NA: 0x2048A0C
        JP: 0x2048D78
      description: |-
        Initializes the partners for the current special episode and sets the team to be the hero and partner only.
        Implements SPECIAL_PROC_0x3 (see ScriptSpecialProcessCall). 
        
        No params.
    - name: InitSpecialEpisodeExtraPartner
      address:
        EU: 0x2048DA0
        NA: 0x2048A84
        JP: 0x2048DF0
      description: |-
        Initializes any partners/special episode members that join the team later in a special episode. This is used to add
        Celebi in the In the Future of Darkness special episode.
        Implements SPECIAL_PROC_0x4 (see ScriptSpecialProcessCall).
        
        No params.
    - name: ReadStringSave
      address:
        EU: 0x2048ED0
        NA: 0x2048BB4
        JP: 0x2048F20
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
    - name: CheckStringSave
      address:
        EU: 0x2048EEC
        NA: 0x2048BD0
        JP: 0x2048F3C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
        return: bool
    - name: WriteSaveFile
      address:
        EU: 0x2049190
        NA: 0x2048E74
        JP: 0x20491E0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: save_info
        r1: buffer
        r2: size
        return: status code
    - name: ReadSaveFile
      address:
        EU: 0x20491EC
        NA: 0x2048ED0
        JP: 0x204923C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: save_info
        r1: buffer
        r2: size
        return: status code
    - name: CalcChecksum
      address:
        EU: 0x2049240
        NA: 0x2048F24
        JP: 0x2049290
      description: |-
        Calculates the checksum of the save file and stores it at the start of the data.
        
        r0: Pointer to a buffer containing the save data
        r1: Size in bytes
    - name: CheckChecksumInvalid
      address:
        EU: 0x2049268
        NA: 0x2048F4C
        JP: 0x20492B8
      description: |-
        Calculates the checksum of the save file and compares it with the one stored in it.
        
        r0: Pointer to a buffer containing the save data
        r1: Size in bytes
        return: True if the calculated and stored checksums don't match, false if they do.
    - name: NoteSaveBase
      address:
        EU: 0x20492A0
        NA: 0x2048F84
        JP: 0x20492F0
      description: |-
        Probably related to saving or quicksaving?
        
        This function prints the debug message "NoteSave Base %d %d" with some values. It's also the only place where GetRngSeed is called.
        
        r0: Irdkwia's notes: state ID
        others: ?
        return: status code
    - name: WriteQuickSaveInfo
      address:
        EU: 0x2049564
        NA: 0x2049248
        JP: 0x20495B4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
        r1: size
    - name: ReadSaveHeader
      address:
        EU: 0x2049588
        NA: 0x204926C
        JP: 0x20495D8
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: NoteLoadBase
      address:
        EU: 0x20496A8
        NA: 0x2049370
        JP: 0x20496DC
      description: |-
        Probably related to loading a save file or quicksave?
        
        This function prints the debug message "NoteLoad Base %d" with some value. It's also the only place where SetRngSeed is called.
        
        return: status code
    - name: ReadQuickSaveInfo
      address:
        EU: 0x2049960
        NA: 0x2049628
        JP: 0x2049994
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: buffer
        r1: size
        return: status code
    - name: GetGameMode
      address:
        EU: 0x204B2F8
        NA: 0x204AFC0
        JP: 0x204B328
      description: |-
        Gets the value of GAME_MODE.
        
        return: game mode
    - name: InitScriptVariableValues
      address:
        EU: 0x204B384
        NA: 0x204B04C
        JP: 0x204B3B4
      description: |-
        Initialize the script variable values table (SCRIPT_VARS_VALUES).
        
        The whole table is first zero-initialized. Then, all script variable values are first initialized to their defaults, after which some of them are overwritten with other hard-coded values.
        
        No params.
    - name: InitEventFlagScriptVars
      address:
        EU: 0x204B63C
        NA: 0x204B304
        JP: 0x204B668
      description: |-
        Initializes an assortment of event flag script variables (see the code for an exhaustive list).
        
        No params.
    - name: ZinitScriptVariable
      address:
        EU: 0x204B76C
        NA: 0x204B434
        JP: 0x204B794
      description: |-
        Zero-initialize the values of the given script variable.
        
        r0: pointer to the local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
    - name: LoadScriptVariableRaw
      address:
        EU: 0x204B7D4
        NA: 0x204B49C
        JP: 0x204B7FC
      description: |-
        Loads a script variable descriptor for a given ID.
        
        r0: [output] script variable descriptor pointer
        r1: pointer to the local variable table (doesn't need to be valid; just controls the output value pointer)
        r2: script variable ID
    - name: LoadScriptVariableValue
      address:
        EU: 0x204B824
        NA: 0x204B4EC
        JP: 0x204B84C
      description: |-
        Loads the value of a script variable.
        
        r0: pointer to the local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
        return: value
    - name: LoadScriptVariableValueAtIndex
      address:
        EU: 0x204B9B0
        NA: 0x204B678
        JP: 0x204B9D8
      description: |-
        Loads the value of a script variable at some index (for script variables that are arrays).
        
        r0: pointer to the local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
        r2: value index for the given script var
        return: value
    - name: SaveScriptVariableValue
      address:
        EU: 0x204BB58
        NA: 0x204B820
        JP: 0x204BB80
      description: |-
        Saves the given value to a script variable.
        
        r0: pointer to local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
        r2: value to save
    - name: SaveScriptVariableValueAtIndex
      address:
        EU: 0x204BCC0
        NA: 0x204B988
        JP: 0x204BCE8
      description: |-
        Saves the given value to a script variable at some index (for script variables that are arrays).
        
        r0: pointer to local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
        r2: value index for the given script var
        r3: value to save
    - name: LoadScriptVariableValueSum
      address:
        EU: 0x204BE38
        NA: 0x204BB00
        JP: 0x204BE60
      description: |-
        Loads the sum of all values of a given script variable (for script variables that are arrays).
        
        r0: pointer to the local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID
        return: sum of values
    - name: LoadScriptVariableValueBytes
      address:
        EU: 0x204BE9C
        NA: 0x204BB64
        JP: 0x204BEC4
      description: |-
        Loads some number of bytes from the value of a given script variable.
        
        r0: script variable ID
        r1: [output] script variable value bytes
        r2: number of bytes to load
    - name: SaveScriptVariableValueBytes
      address:
        EU: 0x204BF04
        NA: 0x204BBCC
        JP: 0x204BF2C
      description: |-
        Saves some number of bytes to the given script variable.
        
        r0: script variable ID
        r1: bytes to save
        r2: number of bytes
    - name: ScriptVariablesEqual
      address:
        EU: 0x204BF50
        NA: 0x204BC18
        JP: 0x204BF78
      description: |-
        Checks if two script variables have equal values. For arrays, compares elementwise for the length of the first variable.
        
        r0: pointer to the local variable table (only needed if id >= VAR_LOCAL0)
        r1: script variable ID 1
        r2: script variable ID 2
        return: true if values are equal, false otherwise
    - name: EventFlagResume
      address:
        EU: 0x204C2F8
        NA: 0x204BFC0
        JP: 0x204C320
      description: |-
        Restores BACKUP event flag script variables (see the code for an exhaustive list) to their
        respective script variables, but only in certain game modes.
        
        This function prints the debug string "EventFlag BackupGameMode %d" with the game mode.
        
        No params.
    - name: EventFlagBackup
      address:
        EU: 0x204C51C
        NA: 0x204C1E4
        JP: 0x204C544
      description: |-
        Saves event flag script variables (see the code for an exhaustive list) to their respective BACKUP script variables, but only in certain game modes.
        
        This function prints the debug string "EventFlag BackupGameMode %d" with the game mode.
        
        No params.
    - name: DumpScriptVariableValues
      address:
        EU: 0x204C740
        NA: 0x204C408
        JP: 0x204C768
      description: |-
        Runs EventFlagBackup, then copies the script variable values table (SCRIPT_VARS_VALUES) to the given pointer.
        
        r0: destination pointer for the data dump
        return: always 1
    - name: RestoreScriptVariableValues
      address:
        EU: 0x204C768
        NA: 0x204C430
        JP: 0x204C790
      description: |-
        Restores the script variable values table (SCRIPT_VARS_VALUES) with the given data. The source data is assumed to be exactly 1024 bytes in length.
        
        Irdkwia's notes: CheckCorrectVersion
        
        r0: raw data to copy to the values table
        return: whether the restored value for VAR_VERSION is equal to its default value
    - name: InitScenarioScriptVars
      address:
        EU: 0x204C7C0
        NA: 0x204C488
        JP: 0x204C7E8
      description: |-
        Initializes most of the SCENARIO_* script variables (except SCENARIO_TALK_BIT_FLAG for some reason). Also initializes the PLAY_OLD_GAME variable.
        
        No params.
    - name: SetScenarioScriptVar
      address:
        EU: 0x204C950
        NA: 0x204C618
        JP: 0x204C978
      description: |-
        Sets the given SCENARIO_* script variable with a given pair of values [val0, val1].
        
        In the special case when the ID is VAR_SCENARIO_MAIN, and the set value is different from the old one, the REQUEST_CLEAR_COUNT script variable will be set to 0.
        
        r0: script variable ID
        r1: val0
        r2: val1
    - name: GetSpecialEpisodeType
      address:
        EU: 0x204CC24
        NA: 0x204C8EC
        JP: 0x204CC4C
      description: |-
        Gets the special episode type from the SPECIAL_EPISODE_TYPE script variable.
        
        return: special episode type
    - name: SetSpecialEpisodeType
      address:
        EU: 0x204CC38
        NA: 0x204C900
        JP: 0x204CC60
      description: |-
        Sets the special episode type by changing the SPECIAL_EPISODE_TYPE script variable.
        
        r0: special episode type
    - name: GetExecuteSpecialEpisodeType
      address:
        EU: 0x204CC70
        NA: 0x204C938
        JP: 0x204CC98
      description: |-
        Gets the special episode type from the EXECUTE_SPECIAL_EPISODE_TYPE script variable.
        
        return: special episode type
    - name: IsSpecialEpisodeOpen
      address:
        EU: 0x204CC84
        NA: 0x204C94C
        JP: 0x204CCAC
      description: |-
        Checks if a special episode is unlocked from the SPECIAL_EPISODE_OPEN script variable.
        
        r0: special episode type
        return: bool
    - name: HasPlayedOldGame
      address:
        EU: 0x204CDA8
        NA: 0x204CA70
        JP: 0x204CDD0
      description: |-
        Returns the value of the VAR_PLAY_OLD_GAME script variable.
        
        return: bool
    - name: GetPerformanceFlagWithChecks
      address:
        EU: 0x204CDCC
        NA: 0x204CA94
        JP: 0x204CDF4
      description: |-
        Returns the value of one of the flags in VAR_PERFORMANCE_PROGRESS_LIST, with some edge cases.
        
        List of cases where the function behaves differently:
        - If the requested flag is 0, returns true if and only if SCENARIO_MAIN == 0x35
        - If the requested flag is 1 or 2 and GAME_MODE == GAME_MODE_SPECIAL_EPISODE, returns true
        - If the requested flag is between 3 and 7 (both included) and GAME_MODE == GAME_MODE_SPECIAL_EPISODE, returns false
        
        r0: ID of the flag to get
        return: Value of the flag
    - name: GetScenarioBalance
      address:
        EU: 0x204CECC
        NA: 0x204CB94
        JP: 0x204CEF4
      description: |-
        Returns the current SCENARIO_BALANCE value.
        
        The exact value returned depends on multiple factors:
        - If the first special episode is active, returns 1
        - If a different special episode is active, returns 3
        - If the SCENARIO_BALANCE_DEBUG variable is >= 0, returns its value
        - In all other cases, the value of the SCENARIO_BALANCE_FLAG variable is returned
        
        return: Current SCENARIO_BALANCE value.
    - name: ScenarioFlagBackup
      address:
        EU: 0x204CFF0
        NA: 0x204CCB8
        JP: 0x204D018
      description: |-
        Saves scenario flag script variables (SCENARIO_SELECT, SCENARIO_MAIN_BIT_FLAG) to their respective BACKUP script variables, but only in certain game modes.
        
        This function prints the debug string "ScenarioFlag BackupGameMode %d" with the game mode.
        
        No params.
    - name: InitWorldMapScriptVars
      address:
        EU: 0x204D0C0
        NA: 0x204CD88
        JP: 0x204D0E8
      description: |-
        Initializes the WORLD_MAP_* script variable values (IDs 0x55-0x57).
        
        No params.
    - name: InitDungeonListScriptVars
      address:
        EU: 0x204D1C8
        NA: 0x204CE90
        JP: 0x204D1F0
      description: |-
        Initializes the DUNGEON_*_LIST script variable values (IDs 0x4f-0x54).
        
        No params.
    - name: SetDungeonConquest
      address:
        EU: 0x204D270
        NA: 0x204CF38
        JP: 0x204D298
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        r1: bit_value
    - name: GetDungeonMode
      address:
        EU: 0x204D2D4
        NA: 0x204CF9C
        JP: 0x204D2FC
      description: |-
        Returns the mode of the specified dungeon
        
        r0: Dungeon ID
        return: Dungeon mode
    - name: GlobalProgressAlloc
      address:
        EU: 0x204D440
        NA: 0x204D108
        JP: 0x204D468
      description: |-
        Allocates a new global progress struct.
        
        This updates the global pointer and returns a copy of that pointer.
        
        return: pointer to a newly allocated global progress struct
    - name: ResetGlobalProgress
      address:
        EU: 0x204D468
        NA: 0x204D130
        JP: 0x204D490
      description: |-
        Zero-initializes the global progress struct.
        
        No params.
    - name: SetMonsterFlag1
      address:
        EU: 0x204D484
        NA: 0x204D14C
        JP: 0x204D4AC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
    - name: GetMonsterFlag1
      address:
        EU: 0x204D4C0
        NA: 0x204D188
        JP: 0x204D4E8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
        return: ?
    - name: SetMonsterFlag2
      address:
        EU: 0x204D4FC
        NA: 0x204D1C4
        JP: 0x204D524
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
    - name: HasMonsterBeenAttackedInDungeons
      address:
        EU: 0x204D540
        NA: 0x204D208
        JP: 0x204D568
      description: |-
        Checks whether the specified monster has been attacked by the player at some point in their adventure during an exploration.
        
        The check is performed using the result of passing the ID to FemaleToMaleForm.
        
        r0: Monster ID
        return: True if the specified mosnter (after converting its ID through FemaleToMaleForm) has been attacked by the player before, false otherwise.
    - name: SetDungeonTipShown
      address:
        EU: 0x204D588
        NA: 0x204D250
        JP: 0x204D5B0
      description: |-
        Marks a dungeon tip as already shown to the player
        
        r0: Dungeon tip ID
    - name: GetDungeonTipShown
      address:
        EU: 0x204D5C8
        NA: 0x204D290
        JP: 0x204D5F0
      description: |-
        Checks if a dungeon tip has already been shown before or not.
        
        r0: Dungeon tip ID
        return: True if the tip has been shown before, false otherwise.
    - name: SetMaxReachedFloor
      address:
        EU: 0x204D614
        NA: 0x204D2DC
        JP: 0x204D63C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        r1: max floor
    - name: GetMaxReachedFloor
      address:
        EU: 0x204D630
        NA: 0x204D2F8
        JP: 0x204D658
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: max floor
    - name: IncrementNbAdventures
      address:
        EU: 0x204D650
        NA: 0x204D318
        JP: 0x204D678
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GetNbAdventures
      address:
        EU: 0x204D684
        NA: 0x204D34C
        JP: 0x204D6AC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        return: # adventures
    - name: CanMonsterSpawn
      address:
        EU: 0x204D698
        NA: 0x204D360
        JP: 0x204D6C0
      description: |-
        Always returns true.
        
        This function seems to be a debug switch that the developers may have used to disable the random enemy spawn. 
        If it returned false, the call to SpawnMonster inside TrySpawnMonsterAndTickSpawnCounter would not be executed.
        
        r0: monster ID
        return: bool (always true)
    - name: IncrementExclusiveMonsterCounts
      address:
        EU: 0x204D6A0
        NA: 0x204D368
        JP: 0x204D6C8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
    - name: CopyProgressInfoTo
      address:
        EU: 0x204D6F8
        NA: 0x204D3C0
        JP: 0x204D720
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
        others: ?
    - name: CopyProgressInfoFromScratchTo
      address:
        EU: 0x204D880
        NA: 0x204D548
        JP: 0x204D8A8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
        return: ?
    - name: CopyProgressInfoFrom
      address:
        EU: 0x204D8B8
        NA: 0x204D580
        JP: 0x204D8E0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
    - name: CopyProgressInfoFromScratchFrom
      address:
        EU: 0x204DA80
        NA: 0x204D748
        JP: 0x204DAA8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
    - name: InitKaomadoStream
      address:
        EU: 0x204DAB8
        NA: 0x204D780
        JP: 0x204DAE0
      description: |-
        Initializes the stream used to load all Kaomado portraits, called once on game start!
        
        No params.
    - name: InitPortraitParams
      address:
        EU: 0x204DAD4
        NA: 0x204D79C
        JP: 0x204DAFC
      description: |-
        Initializes a struct portrait_params.
        
        The emote is set to PORTRAIT_NONE and the layout to the default. Everything else is initialized to 0.
        
        r0: portrait params pointer
    - name: InitPortraitParamsWithMonsterId
      address:
        EU: 0x204DB0C
        NA: 0x204D7D4
        JP: 0x204DB34
      description: |-
        Calls InitPortraitParams, and also initializes emote to PORTRAIT_NORMAL and monster ID to the passed argument.
        
        r0: portrait params pointer
        r1: monster ID
    - name: SetPortraitEmotion
      address:
        EU: 0x204DB2C
        NA: 0x204D7F4
        JP: 0x204DB54
      description: |-
        Sets the emote in the passed portrait params, only if the monster ID isn't MONSTER_NONE.
        
        r0: portrait params pointer
        r1: emotion ID
    - name: SetPortraitLayout
      address:
        EU: 0x204DB3C
        NA: 0x204D804
        JP: 0x204DB64
      description: |-
        Sets the layout in the passed portrait from the array of possible layouts.
        
        If the layout is 32 or if the monster ID is MONSTER_NONE, then it does nothing.
        
        r0: portrait params pointer
        r1: layout index
    - name: SetPortraitOffset
      address:
        EU: 0x204DB80
        NA: 0x204D848
        JP: 0x204DBA8
      description: |-
        Offsets the portrait from the original offset determined by the layout, by the vector passed as argument.
        
        If the monster ID is MONSTER_NONE, then it does nothing.
        
        r0: portrait params pointer
        r1: (x, y) offset in tiles from the original offset, derived from the layout
    - name: AllowPortraitDefault
      address:
        EU: 0x204DBCC
        NA: 0x204D894
        JP: 0x204DBF4
      description: |-
        Allows the portrait to try and load the default emote (PORTRAIT_NORMAL) if it can't find the specified emote.
        
        r0: portrait params pointer
        r1: allow default
    - name: IsValidPortrait
      address:
        EU: 0x204DBD4
        NA: 0x204D89C
        JP: 0x204DBFC
      description: |-
        Returns whether this portrait params represents a valid portrait.
        
        r0: portrait params pointer
        return: bool
    - name: LoadPortrait
      address:
        EU: 0x204DBF4
        NA: 0x204D8BC
        JP: 0x204DC1C
      description: |-
        Tries to load the portrait data associated with the passed portrait params.
        
        Returns whether the operation was successful (the portrait could be found). If the passed buffer is null, the check if performed without loading any data.
        
        This function also modifies the flip fields in the passed portrait params.
        
        r0: portrait params pointer
        r1: kaomado_buffer pointer
        return: portrait exists
    - name: WonderMailPasswordToMission
      address:
        EU: 0x204E0B8
        NA: 0x204DD80
        JP: 0x204E0E0
      description: |-
        Tries to convert a Wonder Mail S password to a mission struct.
        
        Returns whether the conversion was successful. This function does not include any checks if the mission itself is valid, only if the code is valid.
        
        r0: string
        r1: Pointer to the struct where the data of the converted mission will be written to
        return: successful conversion
    - name: SetEnterDungeon
      address:
        EU: 0x204EC84
        NA: 0x204E94C
        JP: 0x204ECA4
      description: |-
        Used to set the dungeon that will be accessed when switching from ground to dungeon mode.
        
        r0: Dungeon ID
    - name: InitDungeonInit
      address:
        EU: 0x204ED94
        NA: 0x204EA5C
        JP: 0x204EDB4
      description: |-
        Initializes the dungeon_init struct before entering a dungeon.
        
        r0: [output] Pointer to the struct to init
        r1: Dungeon ID
    - name: IsNoLossPenaltyDungeon
      address:
        EU: 0x204F318
        NA: 0x204EFE0
        JP: 0x204F338
      description: |-
        Returns true if the specified dungeon shouldn't have a loss penalty.
        
        If true you won't lose your money and items upon fainting. Also used to initialize dungeon_init::skip_faint_animation_flag.
        
        Returns: True for DUNGEON_CRYSTAL_LAKE and DUNGEON_5TH_STATION_CLEARING, as well as for DUNGEON_DEEP_STAR_CAVE_TEAM_ROGUE if the ground variable SIDE01_BOSS2ND is 0; false otherwise.
    - name: CheckMissionRestrictions
      address:
        EU: 0x204F6FC
        NA: 0x204F3C4
        JP: 0x204F71C
      description: |-
        Seems to be used to check if you have any missions that have unmet restrictions when trying to access a dungeon.
        
        r0: ?
        return: (?) Seems to be composed of multiple bitflags.
    - name: GetNbFloors
      address:
        EU: 0x204F8B4
        NA: 0x204F57C
        JP: 0x204F8D4
      description: |-
        Returns the number of floors of the given dungeon.
        
        The result is hardcoded for certain dungeons, such as dojo mazes.
        
        r0: Dungeon ID
        return: Number of floors
    - name: GetNbFloorsPlusOne
      address:
        EU: 0x204F8EC
        NA: 0x204F5B4
        JP: 0x204F90C
      description: |-
        Returns the number of floors of the given dungeon + 1.
        
        r0: Dungeon ID
        return: Number of floors + 1
    - name: GetDungeonGroup
      address:
        EU: 0x204F900
        NA: 0x204F5C8
        JP: 0x204F920
      description: |-
        Returns the dungeon group associated to the given dungeon.
        
        For IDs greater or equal to dungeon_id::DUNGEON_NORMAL_FLY_MAZE, returns dungeon_group_id::DGROUP_MAROWAK_DOJO.
        
        r0: Dungeon ID
        return: Group ID
    - name: GetNbPrecedingFloors
      address:
        EU: 0x204F918
        NA: 0x204F5E0
        JP: 0x204F938
      description: |-
        Given a dungeon ID, returns the total amount of floors summed by all the previous dungeons in its group.
        
        The value is normally pulled from dungeon_data_list_entry::n_preceding_floors_group, except for dungeons with an ID >= dungeon_id::DUNGEON_NORMAL_FLY_MAZE, for which this function always returns 0.
        
        r0: Dungeon ID
        return: Number of preceding floors of the dungeon
    - name: GetNbFloorsDungeonGroup
      address:
        EU: 0x204F930
        NA: 0x204F5F8
        JP: 0x204F950
      description: |-
        Returns the total amount of floors among all the dungeons in the dungeon group of the specified dungeon.
        
        r0: Dungeon ID
        return: Total number of floors in the group of the specified dungeon
    - name: DungeonFloorToGroupFloor
      address:
        EU: 0x204F984
        NA: 0x204F64C
        JP: 0x204F9A4
      description: |-
        Given a dungeon ID and a floor number, returns a struct with the corresponding dungeon group and floor number in that group.
        
        The function normally uses the data in mappa_s.bin to calculate the result, but there's some dungeons (such as dojo mazes) that have hardcoded return values.
        
        Irdkwia's notes:
          [r1]: dungeon_id
          [r1+1]: dungeon_floor_id
          [r0]: group_id
          [r0+1]: group_floor_id
        
        r0: [output] Struct containing the dungeon group and floor group
        r1: Struct containing the dungeon ID and floor number
    - name: GetMissionRank
      address:
        EU: 0x204FB4C
        NA: 0x204F814
        JP: 0x204FB68
      description: |-
        Gets the mission rank for the given dungeon and floor.
        
        If the dungeon ID is >= DUNGEON_NORMAL_FLY_MAZE or the group of the dungeon is > DGROUP_DUMMY_0x63, returns MISSION_RANK_E.
        
        r0: Dungeon and floor
        return: Mission rank
    - name: GetOutlawLevel
      address:
        EU: 0x204FBC4
        NA: 0x204F88C
        JP: 0x204FBE0
      description: |-
        Gets the level that should be used for outlaws for the given dungeon and floor
        
        r0: Dungeon and floor
        return: Outlaw level
    - name: GetOutlawLeaderLevel
      address:
        EU: 0x204FBE0
        NA: 0x204F8A8
        JP: 0x204FBFC
      description: |-
        Gets the level that should be used for team leader outlaws for the given dungeon and floor. Identical to GetOutlawLevel.
        
        r0: Dungeon and floor
        return: Outlaw leader level
    - name: GetOutlawMinionLevel
      address:
        EU: 0x204FBFC
        NA: 0x204F8C4
        JP: 0x204FC18
      description: |-
        Gets the level that should be used for minion outlaws for the given dungeon and floor.
        
        r0: Dungeon and floor
        return: Outlaw minion level
    - name: AddGuestMonster
      address:
        EU: 0x204FC18
        NA: 0x204F8E0
        JP: 0x204FC34
      description: |-
        Adds a guest monster to the active team
        
        r0: dungeon_init struct for the dungeon that is about to be entered
        r1: Number of the guest monster to add. Used when more than one monster is added.
        r2: Pointer to the guest monster entry to add to the team (usually located within GUEST_MONSTER_DATA)
    - name: GetGroundNameId
      address:
        EU: 0x204FC90
        NA: 0x204F958
        JP: 0x204FCAC
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: SetAdventureLogStructLocation
      address:
        EU: 0x204FD5C
        NA: 0x204FA24
        JP: 0x204FD70
      description: |-
        Sets the location of the adventure log struct in memory.
        
        Sets it in a static memory location (At 0x22AB69C [US], 0x22ABFDC [EU], 0x22ACE58 [JP])
        
        No params.
    - name: SetAdventureLogDungeonFloor
      address:
        EU: 0x204FD74
        NA: 0x204FA3C
        JP: 0x204FD88
      description: |-
        Sets the current dungeon floor pair.
        
        r0: struct dungeon_floor_pair
    - name: GetAdventureLogDungeonFloor
      address:
        EU: 0x204FD94
        NA: 0x204FA5C
        JP: 0x204FDA8
      description: |-
        Gets the current dungeon floor pair.
        
        return: struct dungeon_floor_pair
    - name: ClearAdventureLogStruct
      address:
        EU: 0x204FDA8
        NA: 0x204FA70
        JP: 0x204FDBC
      description: |-
        Clears the adventure log structure.
        
        No params.
    - name: SetAdventureLogCompleted
      address:
        EU: 0x204FED4
        NA: 0x204FB9C
        JP: 0x204FEE8
      description: |-
        Marks one of the adventure log entry as completed.
        
        r0: entry ID
    - name: IsAdventureLogNotEmpty
      address:
        EU: 0x204FEFC
        NA: 0x204FBC4
        JP: 0x204FF10
      description: |-
        Checks if at least one of the adventure log entries is completed.
        
        return: bool
    - name: GetAdventureLogCompleted
      address:
        EU: 0x204FF34
        NA: 0x204FBFC
        JP: 0x204FF48
      description: |-
        Checks if one adventure log entry is completed.
        
        r0: entry ID
        return: bool
    - name: IncrementNbDungeonsCleared
      address:
        EU: 0x204FF60
        NA: 0x204FC28
        JP: 0x204FF74
      description: |-
        Increments by 1 the number of dungeons cleared.
        
        Implements SPECIAL_PROC_INCREMENT_DUNGEONS_CLEARED (see ScriptSpecialProcessCall).
        
        No params.
    - name: GetNbDungeonsCleared
      address:
        EU: 0x204FFA4
        NA: 0x204FC6C
        JP: 0x204FFB8
      description: |-
        Gets the number of dungeons cleared.
        
        return: the number of dungeons cleared
    - name: IncrementNbFriendRescues
      address:
        EU: 0x204FFB8
        NA: 0x204FC80
        JP: 0x204FFCC
      description: |-
        Increments by 1 the number of successful friend rescues.
        
        No params.
    - name: GetNbFriendRescues
      address:
        EU: 0x2050000
        NA: 0x204FCC8
        JP: 0x2050014
      description: |-
        Gets the number of successful friend rescues.
        
        return: the number of successful friend rescues
    - name: IncrementNbEvolutions
      address:
        EU: 0x2050014
        NA: 0x204FCDC
        JP: 0x2050028
      description: |-
        Increments by 1 the number of evolutions.
        
        No params.
    - name: GetNbEvolutions
      address:
        EU: 0x205005C
        NA: 0x204FD24
        JP: 0x2050070
      description: |-
        Gets the number of evolutions.
        
        return: the number of evolutions
    - name: IncrementNbSteals
      address:
        EU: 0x2050070
        NA: 0x204FD38
        JP: 0x2050084
      description: |-
        Leftover from Time & Darkness. Does not do anything.
        
        Calls to this matches the ones for incrementing the number of successful steals in Time & Darkness.
        
        No params.
    - name: IncrementNbEggsHatched
      address:
        EU: 0x2050074
        NA: 0x204FD3C
        JP: 0x2050088
      description: |-
        Increments by 1 the number of eggs hatched.
        
        No params.
    - name: GetNbEggsHatched
      address:
        EU: 0x20500B0
        NA: 0x204FD78
        JP: 0x20500C4
      description: |-
        Gets the number of eggs hatched.
        
        return: the number of eggs hatched
    - name: GetNbPokemonJoined
      address:
        EU: 0x20500C4
        NA: 0x204FD8C
        JP: 0x20500D8
      description: |-
        Gets the number of different pokémon that joined.
        
        return: the number of different pokémon that joined
    - name: GetNbMovesLearned
      address:
        EU: 0x20500D8
        NA: 0x204FDA0
        JP: 0x20500EC
      description: |-
        Gets the number of different moves learned.
        
        return: the number of different moves learned
    - name: SetVictoriesOnOneFloor
      address:
        EU: 0x20500EC
        NA: 0x204FDB4
        JP: 0x2050100
      description: |-
        Sets the record of victories on one floor.
        
        r0: the new record of victories
    - name: GetVictoriesOnOneFloor
      address:
        EU: 0x2050120
        NA: 0x204FDE8
        JP: 0x2050134
      description: |-
        Gets the record of victories on one floor.
        
        return: the record of victories
    - name: SetPokemonJoined
      address:
        EU: 0x2050134
        NA: 0x204FDFC
        JP: 0x2050148
      description: |-
        Marks one pokémon as joined.
        
        r0: monster ID
    - name: SetPokemonBattled
      address:
        EU: 0x2050190
        NA: 0x204FE58
        JP: 0x20501A4
      description: |-
        Marks one pokémon as battled.
        
        r0: monster ID
    - name: GetNbPokemonBattled
      address:
        EU: 0x20501EC
        NA: 0x204FEB4
        JP: 0x2050200
      description: |-
        Gets the number of different pokémon that battled against you.
        
        return: the number of different pokémon that battled against you
    - name: IncrementNbBigTreasureWins
      address:
        EU: 0x2050200
        NA: 0x204FEC8
        JP: 0x2050214
      description: |-
        Increments by 1 the number of big treasure wins.
        
        Implements SPECIAL_PROC_INCREMENT_BIG_TREASURE_WINS (see ScriptSpecialProcessCall).
        
        No params.
    - name: SetNbBigTreasureWins
      address:
        EU: 0x2050220
        NA: 0x204FEE8
        JP: 0x2050234
      description: |-
        Sets the number of big treasure wins.
        
        r0: the new number of big treasure wins
    - name: GetNbBigTreasureWins
      address:
        EU: 0x2050258
        NA: 0x204FF20
        JP: 0x205026C
      description: |-
        Gets the number of big treasure wins.
        
        return: the number of big treasure wins
    - name: SetNbRecycled
      address:
        EU: 0x205026C
        NA: 0x204FF34
        JP: 0x2050280
      description: |-
        Sets the number of items recycled.
        
        r0: the new number of items recycled
    - name: GetNbRecycled
      address:
        EU: 0x20502A4
        NA: 0x204FF6C
        JP: 0x20502B8
      description: |-
        Gets the number of items recycled.
        
        return: the number of items recycled
    - name: IncrementNbSkyGiftsSent
      address:
        EU: 0x20502B8
        NA: 0x204FF80
        JP: 0x20502CC
      description: |-
        Increments by 1 the number of sky gifts sent.
        
        Implements SPECIAL_PROC_SEND_SKY_GIFT_TO_GUILDMASTER (see ScriptSpecialProcessCall).
        
        No params.
    - name: SetNbSkyGiftsSent
      address:
        EU: 0x20502D8
        NA: 0x204FFA0
        JP: 0x20502EC
      description: |-
        Sets the number of Sky Gifts sent.
        
        return: the number of Sky Gifts sent
    - name: GetNbSkyGiftsSent
      address:
        EU: 0x2050310
        NA: 0x204FFD8
        JP: 0x2050324
      description: |-
        Gets the number of Sky Gifts sent.
        
        return: the number of Sky Gifts sent
    - name: ComputeSpecialCounters
      address:
        EU: 0x2050324
        NA: 0x204FFEC
        JP: 0x2050338
      description: |-
        Computes the counters from the bit fields in the adventure log, as they are not updated automatically when bit fields are altered.
        
        Affects GetNbPokemonJoined, GetNbMovesLearned, GetNbPokemonBattled and GetNbItemAcquired.
        
        No params.
    - name: RecruitSpecialPokemonLog
      address:
        EU: 0x205057C
        NA: 0x2050244
        JP: 0x2050590
      description: |-
        Marks a specified special pokémon as recruited in the adventure log.
        
        Irdkwia's notes: Useless in Sky
        
        r0: monster ID
    - name: IncrementNbFainted
      address:
        EU: 0x20505E8
        NA: 0x20502B0
        JP: 0x20505FC
      description: |-
        Increments by 1 the number of times you fainted.
        
        No params.
    - name: GetNbFainted
      address:
        EU: 0x2050624
        NA: 0x20502EC
        JP: 0x2050638
      description: |-
        Gets the number of times you fainted.
        
        return: the number of times you fainted
    - name: SetItemAcquired
      address:
        EU: 0x2050638
        NA: 0x2050300
        JP: 0x205064C
      description: |-
        Marks one specific item as acquired.
        
        r0: item
    - name: GetNbItemAcquired
      address:
        EU: 0x2050704
        NA: 0x20503CC
        JP: 0x2050718
      description: |-
        Gets the number of items acquired.
        
        return: the number of items acquired
    - name: SetChallengeLetterCleared
      address:
        EU: 0x2050758
        NA: 0x2050420
        JP: 0x205076C
      description: |-
        Sets a challenge letter as cleared.
        
        r0: challenge ID
    - name: GetSentryDutyGamePoints
      address:
        EU: 0x20507DC
        NA: 0x20504A4
        JP: 0x20507F0
      description: |-
        Gets the points for the associated rank in the footprints minigame.
        
        r0: the rank (range 0-4, 1st to 5th)
        return: points
    - name: SetSentryDutyGamePoints
      address:
        EU: 0x20507F4
        NA: 0x20504BC
        JP: 0x2050808
      description: |-
        Sets a new record in the footprints minigame.
        
        r0: points
        return: the rank (range 0-4, 1st to 5th; -1 if out of ranking)
    - name: CopyLogTo
      address:
        EU: 0x2050884
        NA: 0x205054C
        JP: 0x2050898
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
    - name: CopyLogFrom
      address:
        EU: 0x2050A70
        NA: 0x2050738
        JP: 0x2050A84
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
    - name: GetAbilityString
      address:
        EU: 0x2050C54
        NA: 0x205091C
        JP: 0x2050C68
      description: |-
        Copies the string for the ability id into the buffer.
        
        r0: [output] buffer
        r1: ability ID
    - name: GetAbilityDescStringId
      address:
        EU: 0x2050C74
        NA: 0x205093C
        JP: 0x2050C88
      description: |-
        Gets the ability description string ID for the corresponding ability.
        
        r0: ability ID
        return: string ID
    - name: GetTypeStringId
      address:
        EU: 0x2050C88
        NA: 0x2050950
        JP: 0x2050C9C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: type ID
        return: string ID
    - name: GetConversion2ConvertToType
      address:
        EU: 0x2050C9C
        NA: 0x2050964
        JP: 0x2050CB0
      description: |-
        Determines which type a monster with Conversion2 should turn into after being hit by a certain
        type of move.
        
        r0: type ID
        return: type ID
    - name: CopyBitsTo
      address:
        EU: 0x2050CF8
        NA: 0x20509C0
        JP: 0x2050D0C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
        r1: buffer_write
        r2: nb_bits
    - name: CopyBitsFrom
      address:
        EU: 0x2050D78
        NA: 0x2050A40
        JP: 0x2050D8C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
        r1: buffer_read
        r2: nb_bits
    - name: StoreDefaultTeamData
      address:
        EU: 0x2050E04
        NA: 0x2050ACC
        JP: 0x2050E18
      description: |-
        Sets the name of the team for the main story to the default team name Poképals. Also initializes
        the team to Normal Rank and possibly set Secret Rank unlocked to false?
        
        No params.
    - name: GetMainTeamNameWithCheck
      address:
        EU: 0x2050E48
        NA: 0x2050B10
        JP: 0x2050E60
      description: |-
        Gets the name of the team for the main story with an additional check if the team name should be
        "???" because the story has not progressed enough.
        
        r0: [output] buffer
    - name: GetMainTeamName
      address:
        EU: 0x2050EB4
        NA: 0x2050B7C
        JP: 0x2050ECC
      description: |-
        Gets the name of the team for the main story.
        
        r0: [output] buffer
    - name: SetMainTeamName
      address:
        EU: 0x2050ECC
        NA: 0x2050B94
        JP: 0x2050EE4
      description: |-
        Sets the main team name to the name in the passed buffer.
        
        r0: buffer
    - name: GetRankupPoints
      address:
        EU: 0x2050EF0
        NA: 0x2050BB8
        JP: 0x2050F08
      description: |-
        Returns the number of points required to reach the next rank.
        
        If PERFORMANCE_PROGRESS_LIST[8] is 0 and the current rank is RANK_MASTER, or if the current rank is RANK_GUILDMASTER, returns 0.
        
        return: Points required to reach the next rank
    - name: GetRank
      address:
        EU: 0x2050FAC
        NA: 0x2050C74
        JP: 0x2050FC4
      description: |-
        Returns the team's rank
        
        If PERFORMANCE_PROGRESS_LIST[8] is 0, the maximum rank that can be returned is RANK_MASTER.
        
        return: Rank
    - name: GetRankStorageSize
      address:
        EU: 0x205101C
        NA: 0x2050CE4
        JP: 0x2051034
      description: |-
        Gets the size of storage for the current rank.
        
        return: storage size
    - name: ResetPlayTimer
      address:
        EU: 0x2051140
        NA: 0x2050E08
        JP: 0x2051158
      description: |-
        Reset the file timer.
        
        r0: play_time
    - name: PlayTimerTick
      address:
        EU: 0x2051150
        NA: 0x2050E18
        JP: 0x2051168
      description: |-
        Advance the file timer by 1 frame.
        
        r0: play_time
    - name: GetPlayTimeSeconds
      address:
        EU: 0x205118C
        NA: 0x2050E54
        JP: 0x20511A4
      description: |-
        Returns the current play time in seconds.
        
        return: play time in seconds
    - name: SubFixedPoint
      address:
        EU: 0x2051248
        NA: 0x2050F10
        JP: 0x2051260
      description: |-
        Compute the subtraction of two decimal fixed-point numbers (16 fraction bits).
        
        Numbers are in the format {16-bit integer part, 16-bit thousandths}, where the integer part is the lower word. Probably used primarily for belly.
        
        r0: number
        r1: decrement
        return: max(number - decrement, 0)
    - name: BinToDecFixedPoint
      address:
        EU: 0x2051358
        NA: 0x2051020
        JP: 0x2051370
      description: |-
        Convert a binary fixed-point number (16 fraction bits) to the decimal fixed-point number (16 fraction bits) used for belly calculations. Thousandths are floored.
        
        If <data> holds the raw binary data, a binary fixed-point number (16 fraction bits) has the value ((unsigned)data) * 2^-16), and the decimal fixed-point number (16 fraction bits) used for belly has the value (data & 0xffff) + (data >> 16)/1000.
        
        r0: pointer p, where ((const unsigned *)p)[1] is the fractional number in binary fixed-point format to convert
        return: fractional number in decimal fixed-point format
    - name: CeilFixedPoint
      address:
        EU: 0x205139C
        NA: 0x2051064
        JP: 0x20513B4
      description: |-
        Compute the ceiling of a decimal fixed-point number (16 fraction bits).
        
        Numbers are in the format {16-bit integer part, 16-bit thousandths}, where the integer part is the lower word. Probably used primarily for belly.
        
        r0: number
        return: ceil(number)
    - name: DungeonGoesUp
      address:
        EU: 0x20515C0
        NA: 0x2051288
        JP: 0x20515D8
      description: |-
        Returns whether the specified dungeon is considered as going upward or not
        
        r0: dungeon id
        return: bool
    - name: GetTurnLimit
      address:
        EU: 0x20515E8
        NA: 0x20512B0
        JP: 0x2051600
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: turn limit
    - name: DoesNotSaveWhenEntering
      address:
        EU: 0x2051600
        NA: 0x20512C8
        JP: 0x2051618
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: TreasureBoxDropsEnabled
      address:
        EU: 0x2051628
        NA: 0x20512F0
        JP: 0x2051640
      description: |-
        Checks if enemy Treasure Box drops are enabled in the dungeon.
        
        r0: dungeon ID
        return: bool
    - name: IsLevelResetDungeon
      address:
        EU: 0x2051650
        NA: 0x2051318
        JP: 0x2051668
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: GetMaxItemsAllowed
      address:
        EU: 0x2051678
        NA: 0x2051340
        JP: 0x2051690
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: max items allowed
    - name: IsMoneyAllowed
      address:
        EU: 0x2051690
        NA: 0x2051358
        JP: 0x20516A8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: GetMaxRescueAttempts
      address:
        EU: 0x20516B8
        NA: 0x2051380
        JP: 0x20516D0
      description: |-
        Returns the maximum rescue attempts allowed in the specified dungeon.
        
        r0: dungeon id
        return: Max rescue attempts, or -1 if rescues are disabled.
    - name: IsRecruitingAllowed
      address:
        EU: 0x20516D0
        NA: 0x2051398
        JP: 0x20516E8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: GetLeaderChangeFlag
      address:
        EU: 0x20516F8
        NA: 0x20513C0
        JP: 0x2051710
      description: |-
        Returns true if the flag that allows changing leaders is set in the restrictions of the specified dungeon
        
        r0: dungeon id
        return: True if the restrictions of the current dungeon allow changing leaders, false otherwise.
    - name: GetRandomMovementChance
      address:
        EU: 0x2051720
        NA: 0x20513E8
        JP: 0x2051738
      description: |-
        Returns dungeon_restriction::random_movement_chance for the specified dungeon ID.
        
        r0: dungeon ID
        return: Random movement chance
    - name: CanEnemyEvolve
      address:
        EU: 0x2051738
        NA: 0x2051400
        JP: 0x2051750
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: GetMaxMembersAllowed
      address:
        EU: 0x2051760
        NA: 0x2051428
        JP: 0x2051778
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: max members allowed
    - name: IsIqEnabled
      address:
        EU: 0x2051778
        NA: 0x2051440
        JP: 0x2051790
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: IsTrapInvisibleWhenAttacking
      address:
        EU: 0x20517A0
        NA: 0x2051468
        JP: 0x20517B8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
        return: bool
    - name: JoinedAtRangeCheck
      address:
        EU: 0x20517C8
        NA: 0x2051490
        JP: 0x20517E0
      description: |-
        Returns whether a certain joined_at field value is between dungeon_id::DUNGEON_JOINED_AT_BIDOOF and dungeon_id::DUNGEON_DUMMY_0xE3.
        
        Irdkwia's notes: IsSupportPokemon
        
        r0: joined_at id
        return: bool
    - name: IsDojoDungeon
      address:
        EU: 0x20517E8
        NA: 0x20514B0
        JP: 0x2051800
      description: |-
        Checks if the given dungeon is a Marowak Dojo dungeon.
        
        r0: dungeon ID
        return: bool
    - name: IsFutureDungeon
      address:
        EU: 0x2051804
        NA: 0x20514CC
        JP: 0x205181C
      description: |-
        Checks if the given dungeon is a dungeon in the future arc of the main story.
        
        r0: dungeon ID
        return: bool
    - name: IsSpecialEpisodeDungeon
      address:
        EU: 0x2051820
        NA: 0x20514E8
        JP: 0x2051838
      description: |-
        Checks if the given dungeon is a special episode dungeon.
        
        r0: dungeon ID
        return: bool
    - name: RetrieveFromItemList1
      address:
        EU: 0x205183C
        NA: 0x2051504
        JP: 0x2051854
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_info
        r1: ?
        return: ?
    - name: IsForbiddenFloor
      address:
        EU: 0x20518A0
        NA: 0x2051568
        JP: 0x20518B8
      description: |-
        Related to missions floors forbidden
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_info
        others: ?
        return: bool
    - name: Copy16BitsFrom
      address:
        EU: 0x2051924
        NA: 0x20515EC
        JP: 0x205193C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
        r1: buffer_read
    - name: RetrieveFromItemList2
      address:
        EU: 0x20519B4
        NA: 0x205167C
        JP: 0x20519CC
      description: |-
        Same as RetrieveFromItemList1, except there is one more comparison
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_info
    - name: IsInvalidForMission
      address:
        EU: 0x2051A14
        NA: 0x20516DC
        JP: 0x2051A2C
      description: |-
        It's a guess
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_id
        return: bool
    - name: IsExpEnabledInDungeon
      address:
        EU: 0x2051A54
        NA: 0x205171C
        JP: 0x2051A6C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_id
        return: bool
    - name: IsSkyExclusiveDungeon
      address:
        EU: 0x2051A7C
        NA: 0x2051744
        JP: 0x2051A94
      description: |-
        Also the dungeons where Giratina has its Origin Form
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon_id
        return: bool
    - name: JoinedAtRangeCheck2
      address:
        EU: 0x2051A98
        NA: 0x2051760
        JP: 0x2051AB0
      description: |-
        Returns whether a certain joined_at field value is equal to dungeon_id::DUNGEON_BEACH or is between dungeon_id::DUNGEON_DUMMY_0xEC and dungeon_id::DUNGEON_DUMMY_0xF0.
        
        Irdkwia's notes: IsSEPokemon
        
        r0: joined_at id
        return: bool
    - name: GetBagCapacity
      address:
        EU: 0x2051B0C
        NA: 0x20517D4
        JP: 0x2051B24
      description: |-
        Returns the player's bag capacity for a given point in the game.
        
        r0: scenario_balance
        return: bag capacity
    - name: GetBagCapacitySpecialEpisode
      address:
        EU: 0x2051B1C
        NA: 0x20517E4
        JP: 0x2051B34
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: se_type
        return: bag capacity
    - name: GetRankUpEntry
      address:
        EU: 0x2051B2C
        NA: 0x20517F4
        JP: 0x2051B44
      description: |-
        Gets the rank up data for the specified rank.
        
        r0: rank index
        return: struct rankup_table_entry*
    - name: GetBgRegionArea
      address:
        EU: 0x20521C4
        NA: 0x2051E8C
        JP: 0x20521DC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: offset
        r1: subregion_id
        r2: region_id
        return: ?
    - name: LoadMonsterMd
      address:
        EU: 0x2052690
        NA: 0x2052358
        JP: 0x20526A8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GetNameRaw
      address:
        EU: 0x20526CC
        NA: 0x2052394
        JP: 0x20526E4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dst_ptr
        r1: id
    - name: GetName
      address:
        EU: 0x2052708
        NA: 0x20523D0
        JP: 0x2052720
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dst_ptr
        r1: id
        r2: color_id
    - name: GetNameWithGender
      address:
        EU: 0x2052778
        NA: 0x2052440
        JP: 0x2052790
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dst_ptr
        r1: id
        r2: color_id
    - name: GetSpeciesString
      address:
        EU: 0x2052838
        NA: 0x2052500
        JP: 0x205283C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dst_ptr
        r1: id
    - name: GetNameString
      address:
        EU: 0x2052A00
        NA: 0x20526C8
        JP: 0x2052A04
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: name
    - name: GetSpriteIndex
      address:
        EU:
          - 0x2052A24
          - 0x2052A40
          - 0x2052A5C
        NA:
          - 0x20526EC
          - 0x2052708
          - 0x2052724
        JP:
          - 0x2052A28
          - 0x2052A44
          - 0x2052A60
      description: |-
        Return the sprite index for this monster (inside m_attack.bin, m_ground.bin and monster.bin)
        All three sprites have the same index
        
        r0: monster id
        return: sprite index
    - name: GetDexNumber
      address:
        EU: 0x2052A78
        NA: 0x2052740
        JP: 0x2052A7C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: dex number
    - name: GetCategoryString
      address:
        EU: 0x2052A94
        NA: 0x205275C
        JP: 0x2052A98
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: category
    - name: GetMonsterGender
      address:
        EU: 0x2052AE0
        NA: 0x20527A8
        JP: 0x2052AE0
      description: |-
        Returns the gender field of a monster given its ID.
        
        r0: monster id
        return: monster gender
    - name: GetBodySize
      address:
        EU: 0x2052AFC
        NA: 0x20527C4
        JP: 0x2052AFC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: body size
    - name: GetSpriteSize
      address:
        EU: 0x2052B18
        NA: 0x20527E0
        JP: 0x2052B18
      description: |-
        Returns the sprite size of the specified monster. If the size is between 1 and 6, 6 will be returned.
        
        r0: monster id
        return: sprite size
    - name: GetSpriteFileSize
      address:
        EU: 0x2052B54
        NA: 0x205281C
        JP: 0x2052B54
      description: |-
        Returns the sprite file size of the specified monster.
        
        r0: monster id
        return: sprite file size
    - name: GetShadowSize
      address:
        EU: 0x2052B74
        NA: 0x205283C
        JP: 0x2052B74
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: shadow size
    - name: GetSpeedStatus
      address:
        EU: 0x2052B90
        NA: 0x2052858
        JP: 0x2052B90
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: speed status
    - name: GetMobilityType
      address:
        EU: 0x2052BAC
        NA: 0x2052874
        JP: 0x2052BAC
      description: |-
        Gets the mobility type for a given monster species.
        
        r0: species ID
        return: mobility type
    - name: GetRegenSpeed
      address:
        EU: 0x2052BC8
        NA: 0x2052890
        JP: 0x2052BC8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: regen speed
    - name: GetCanMoveFlag
      address:
        EU: 0x2052BEC
        NA: 0x20528B4
        JP: 0x2052BEC
      description: |-
        Returns the flag that determines if a monster can move in dungeons.
        
        r0: Monster ID
        return: "Can move" flag
    - name: GetChanceAsleep
      address:
        EU: 0x2052C18
        NA: 0x20528E0
        JP: 0x2052C18
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: chance asleep
    - name: GetWeightMultiplier
      aliases:
        - GetLowKickMultiplier
      address:
        EU: 0x2052C34
        NA: 0x20528FC
        JP: 0x2052C34
      description: |-
        Gets the weight multiplier value for the given species. This value is passed as the damage_mult_fp parameter to DealDamage when calculating the damage dealt by Low Kick and Grass Knot.
        
        r0: monster ID
        return: Monster weight multiplier, as a binary fixed-point number with 8 fraction bits.
    - name: GetSize
      address:
        EU: 0x2052C50
        NA: 0x2052918
        JP: 0x2052C50
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: size
    - name: GetBaseHp
      address:
        EU: 0x2052C6C
        NA: 0x2052934
        JP: 0x2052C6C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: base HP
    - name: CanThrowItems
      address:
        EU: 0x2052C88
        NA: 0x2052950
        JP: 0x2052C88
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: bool
    - name: CanEvolve
      address:
        EU: 0x2052CB4
        NA: 0x205297C
        JP: 0x2052CB4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: bool
    - name: GetMonsterPreEvolution
      address:
        EU: 0x2052CE0
        NA: 0x20529A8
        JP: 0x2052CE0
      description: |-
        Returns the pre-evolution id of a monster given its ID.
        
        r0: monster id
        return: ID of the monster that evolves into the one specified in r0
    - name: GetBaseOffensiveStat
      address:
        EU: 0x2052CFC
        NA: 0x20529C4
        JP: 0x2052CFC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: stat index
        return: base attack/special attack stat
    - name: GetBaseDefensiveStat
      address:
        EU: 0x2052D1C
        NA: 0x20529E4
        JP: 0x2052D1C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: stat index
        return: base defense/special defense stat
    - name: GetType
      address:
        EU: 0x2052D3C
        NA: 0x2052A04
        JP: 0x2052D3C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: type index (0 for primary type or 1 for secondary type)
        return: type
    - name: GetAbility
      address:
        EU: 0x2052D5C
        NA: 0x2052A24
        JP: 0x2052D5C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: ability index (0 for primary ability or 1 for secondary ability)
        return: ability
    - name: GetRecruitRate2
      address:
        EU: 0x2052D7C
        NA: 0x2052A44
        JP: 0x2052D7C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: recruit rate 2
    - name: GetRecruitRate1
      address:
        EU: 0x2052D98
        NA: 0x2052A60
        JP: 0x2052D98
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: recruit rate 1
    - name: GetExp
      address:
        EU: 0x2052DB4
        NA: 0x2052A7C
        JP: 0x2052DB4
      description: |-
        Base Formula = ((Level-1)*ExpYield)//10+ExpYield
        Note: Defeating an enemy without using a move will divide this amount by 2
        
        r0: id
        r1: level
        return: exp
    - name: GetEvoParameters
      address:
        EU: 0x2052DE8
        NA: 0x2052AB0
        JP: 0x2052DE8
      description: |-
        Bx
        Has something to do with evolution
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: [output] struct_evo_param
        r1: id
    - name: GetTreasureBoxChances
      address:
        EU: 0x2052E18
        NA: 0x2052AE0
        JP: 0x2052E18
      description: |-
        Has something to do with bytes 3C-3E
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: [output] struct_chances
    - name: GetIqGroup
      address:
        EU: 0x2052E60
        NA: 0x2052B28
        JP: 0x2052E60
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: IQ group
    - name: GetSpawnThreshold
      address:
        EU: 0x2052E7C
        NA: 0x2052B44
        JP: 0x2052E7C
      description: |-
        Returns the spawn threshold of the given monster ID
        
        The spawn threshold determines the minimum SCENARIO_BALANCE_FLAG value required by a monster to spawn in dungeons.
        
        r0: monster id
        return: Spawn threshold
    - name: NeedsItemToSpawn
      address:
        EU: 0x2052E98
        NA: 0x2052B60
        JP: 0x2052E98
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: bool
    - name: GetExclusiveItem
      address:
        EU: 0x2052EC4
        NA: 0x2052B8C
        JP: 0x2052EC4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        r1: determines which exclusive item
        return: exclusive item
    - name: GetFamilyIndex
      address:
        EU: 0x2052EF0
        NA: 0x2052BB8
        JP: 0x2052EF0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: family index
    - name: LoadM2nAndN2m
      address:
        EU: 0x2052F0C
        NA: 0x2052BD4
        JP: 0x2052F0C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: GuestMonsterToGroundMonster
      address:
        EU: 0x20531CC
        NA: 0x2052E50
        JP: 0x2053188
      description: |-
        Inits a ground_monster entry with the given guest_monster struct.
        
        r0: [output] ground_monster struct to init
        r1: guest_monster struct to use
    - name: StrcmpMonsterName
      address:
        EU: 0x205332C
        NA: 0x2052FB0
        JP: 0x20532E8
      description: |-
        Checks if the string_buffer matches the name of the species
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: string_buffer
        r1: monster ID
        return: bool
    - name: GetLvlUpEntry
      address:
        EU: 0x2053B18
        NA: 0x205379C
        JP: 0x2053AD4
      description: |-
        Gets the level-up entry of the given monster ID at the specified level.
        
        The monster's entire level up data is also decompressed to LEVEL_UP_DATA_DECOMPRESS_BUFFER, and its ID is stored in LEVEL_UP_DATA_MONSTER_ID.
        
        r0: [output] Level-up entry
        r1: monster ID
        r2: level
    - name: GetEncodedHalfword
      address:
        EU: 0x2053BC8
        NA: 0x205384C
        JP: 0x2053B84
      description: |-
        Decodes a 2-byte value that may be encoded using 1 or 2 bytes and writes it to the specified buffer.
        
        The encoding system uses the most significant bit of the first byte to signal if the value is encoded as a single byte or as a halfword. If the bit is unset, the value is read as (encoded byte) & 0x7F. If it's set, the value is read as ((first encoded byte) & 0x7F << 7) | (second encoded byte) & 0x7F.
        
        r0: Pointer to encoded value
        r1: [output] Buffer where the resulting 2-byte value will be stored.
        return: Pointer to the next byte to decode
    - name: GetEvoFamily
      address:
        EU: 0x205414C
        NA: 0x2053DD0
        JP: 0x2054108
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster_str
        r1: evo_family_str
        return: nb_family
    - name: GetEvolutions
      address:
        EU: 0x2054204
        NA: 0x2053E88
        JP: 0x20541C0
      description: |-
        Returns a list of all the possible evolutions for a given monster id.
        
        r0: Monster id
        r1: [Output] Array that will hold the list of monster ids the specified monster can evolve into
        r2: True to skip the check that prevents returning monsters with a different sprite size than the current one
        r3: True to skip the check that prevents Shedinja from being counted as a potential evolution
        return: Number of possible evolutions for the specified monster id
    - name: ShuffleHiddenPower
      address:
        EU: 0x2054344
        NA: 0x2053FC8
        JP: 0x2054300
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dmons_addr
    - name: GetBaseForm
      address:
        EU: 0x20543A0
        NA: 0x2054024
        JP: 0x205435C
      description: |-
        Checks if the specified monster ID corresponds to any of the pokémon that have multiple forms and returns the ID of the base form if so. If it doesn't, the same ID is returned.
        
        Some of the pokémon included in the check are Castform, Unown, Deoxys, Cherrim, Shaymin, and Giratina
        
        r0: Monster ID
        return: ID of the base form of the specified monster, or the same if the specified monster doesn't have a base form.
    - name: GetBaseFormBurmyWormadamShellosGastrodonCherrim
      address:
        EU: 0x20545CC
        NA: 0x2054250
        JP: 0x2054588
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: base form
    - name: GetBaseFormCastformCherrimDeoxys
      address:
        EU: 0x2054714
        NA: 0x2054398
        JP: 0x20546D0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: base form
    - name: GetAllBaseForms
      address:
        EU: 0x20547E0
        NA: 0x2054464
        JP: 0x205479C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: base form
    - name: GetDexNumberVeneer
      address:
        EU: 0x20547F0
        NA: 0x2054474
        JP: 0x20547AC
      description: |-
        Likely a linker-generated veneer for GetDexNumber.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: id
        return: dex number
    - name: GetMonsterIdFromSpawnEntry
      address:
        EU: 0x20547FC
        NA: 0x2054480
        JP: 0x20547B8
      description: |-
        Returns the monster ID of the specified monster spawn entry
        
        r0: Pointer to the monster spawn entry
        return: monster_spawn_entry::id
    - name: SetMonsterId
      address:
        EU: 0x205481C
        NA: 0x20544A0
        JP: 0x20547D8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: mons_spawn_str
        r1: monster ID
    - name: SetMonsterLevelAndId
      address:
        EU: 0x2054824
        NA: 0x20544A8
        JP: 0x20547E0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: mons_spawn_str
        r1: level
        r2: monster ID
    - name: GetMonsterLevelFromSpawnEntry
      address:
        EU: 0x2054834
        NA: 0x20544B8
        JP: 0x20547F0
      description: |-
        Returns the level of the specified monster spawn entry.
        
        r0: pointer to the monster spawn entry
        return: uint8_t
    - name: GetMonsterGenderVeneer
      address:
        EU: 0x2054ADC
        NA: 0x2054760
        JP: 0x2054A98
      description: |-
        Likely a linker-generated veneer for GetMonsterGender.
        
        See https://developer.arm.com/documentation/dui0474/k/image-structure-and-generation/linker-generated-veneers/what-is-a-veneer-
        
        r0: monster id
        return: monster gender
    - name: IsMonsterValid
      address:
        EU: 0x2054AE8
        NA: 0x205476C
        JP: 0x2054AA4
      description: |-
        Checks if an monster ID is valid.
        
        r0: monster ID
        return: bool
    - name: IsUnown
      address:
        EU: 0x2054E04
        NA: 0x2054A88
        JP: 0x2054DC0
      description: |-
        Checks if a monster ID is an Unown.
        
        r0: monster ID
        return: bool
    - name: IsShaymin
      address:
        EU: 0x2054E20
        NA: 0x2054AA4
        JP: 0x2054DDC
      description: |-
        Checks if a monster ID is a Shaymin form.
        
        r0: monster ID
        return: bool
    - name: IsCastform
      address:
        EU: 0x2054E50
        NA: 0x2054AD4
        JP: 0x2054E0C
      description: |-
        Checks if a monster ID is a Castform form.
        
        r0: monster ID
        return: bool
    - name: IsCherrim
      address:
        EU: 0x2054EA8
        NA: 0x2054B2C
        JP: 0x2054E64
      description: |-
        Checks if a monster ID is a Cherrim form.
        
        r0: monster ID
        return: bool
    - name: IsDeoxys
      address:
        EU: 0x2054EF0
        NA: 0x2054B74
        JP: 0x2054EAC
      description: |-
        Checks if a monster ID is a Deoxys form.
        
        r0: monster ID
        return: bool
    - name: GetSecondFormIfValid
      address:
        EU: 0x2054F20
        NA: 0x2054BA4
        JP: 0x2054EDC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: monster ID
        return: second form
    - name: FemaleToMaleForm
      address:
        EU: 0x2054F5C
        NA: 0x2054BE0
        JP: 0x2054F18
      description: |-
        Returns the ID of the first form of the specified monster if the specified ID corresponds to a secondary form with female gender and the first form has male gender. If those conditions don't meet, returns the same ID unchanged.
        
        r0: Monster ID
        return: ID of the male form of the monster if the requirements meet, same ID otherwise.
    - name: GetBaseFormCastformDeoxysCherrim
      address:
        EU: 0x2054FA0
        NA: 0x2054C24
        JP: 0x2054F5C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id
        return: base form
    - name: BaseFormsEqual
      address:
        EU: 0x2055054
        NA: 0x2054CD8
        JP: 0x2055010
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: id1
        r1: id2
        return: if the base forms are the same
    - name: DexNumbersEqual
      address:
        EU: 0x2055140
        NA: 0x2054DC4
        JP: 0x20550FC
      description: |-
        Each Unown is considered as different
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: id1
        r1: id2
        return: bool
    - name: GendersEqual
      address:
        EU: 0x20551C8
        NA: 0x2054E4C
        JP: 0x2055184
      description: |-
        Checks if the genders for two monster IDs are equal.
        
        r0: id1
        r1: id2
        return: bool
    - name: GendersEqualNotGenderless
      address:
        EU: 0x20551F4
        NA: 0x2054E78
        JP: 0x20551B0
      description: |-
        Checks if the genders for two monster IDs are equal. Always returns false if either gender is GENDER_GENDERLESS.
        
        r0: id1
        r1: id2
        return: bool
    - name: IsMonsterOnTeam
      address:
        EU: 0x20554C4
        NA: 0x2055148
        JP: 0x2055480
      description: |-
        Checks if a given monster is on the exploration team (not necessarily the active party)?
        
        Irdkwia's notes:
          recruit_strategy=0: strict equality
          recruit_strategy=1: relative equality
        
        r0: monster ID
        r1: recruit_strategy
        return: bool
    - name: GetNbRecruited
      address:
        EU: 0x20555F0
        NA: 0x2055274
        JP: 0x2055610
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: recruit_str
    - name: IsValidTeamMember
      address:
        EU: 0x205570C
        NA: 0x2055390
        JP: 0x205572C
      description: |-
        Returns whether or not the team member at the given index is valid for the current game mode.
        
        During normal play, this will only be false for the special-episode-reserved indexes (2, 3, 4). During special episodes, this will be false for the hero and partner (0, 1).
        
        r0: team member index
        return: bool
    - name: IsMainCharacter
      address:
        EU: 0x20558A4
        NA: 0x2055528
        JP: 0x20558C4
      description: |-
        Returns whether or not the team member at the given index is a "main character".
        
        During normal play, this will only be true for the hero and partner (0, 1). During special episodes, this will be true for the special-episode-reserved indexes (2, 3, 4).
        
        r0: team member index
        return: bool
    - name: GetTeamMember
      address:
        EU: 0x2055924
        NA: 0x20555A8
        JP: 0x2055944
      description: |-
        Gets the team member at the given index.
        
        r0: team member index
        return: ground monster pointer
    - name: GetHeroMemberIdx
      address:
        EU: 0x20559CC
        NA: 0x2055650
        JP: 0x20559EC
      description: |-
        Returns the team member index of the hero (0) if the hero is valid, otherwise return -1.
        
        return: team member index
    - name: GetPartnerMemberIdx
      address:
        EU: 0x20559F8
        NA: 0x205567C
        JP: 0x2055A18
      description: |-
        Returns the team member index of the partner (1) if the partner is valid, otherwise return -1.
        
        return: team member index
    - name: GetMainCharacter1MemberIdx
      address:
        EU: 0x2055A24
        NA: 0x20556A8
        JP: 0x2055A44
      description: |-
        Returns the team member index of the first main character for the given game mode, if valid, otherwise return -1.
        
        In normal play, this will be the hero (0). During special episodes, this will be 2.
        
        return: team member index
    - name: GetMainCharacter2MemberIdx
      address:
        EU: 0x2055A68
        NA: 0x20556EC
        JP: 0x2055A88
      description: |-
        Returns the team member index of the second main character for the given game mode, if valid, otherwise return -1.
        
        In normal play, this will be the partner (1). During special episodes, this will be 3 if there's a second main character.
        
        return: team member index
    - name: GetMainCharacter3MemberIdx
      address:
        EU: 0x2055AAC
        NA: 0x2055730
        JP: 0x2055ACC
      description: |-
        Returns the team member index of the third main character for the given game mode, if valid, otherwise return -1.
        
        In normal play, this will be invalid (-1). During special episodes, this will be 4 if there's a third main character.
        
        return: team member index
    - name: GetHero
      address:
        EU: 0x2055AEC
        NA: 0x2055770
        JP: 0x2055B0C
      description: |-
        Returns the ground monster data of the hero.
        
        return: ground monster pointer
    - name: GetPartner
      address:
        EU: 0x2055B14
        NA: 0x2055798
        JP: 0x2055B34
      description: |-
        Returns the ground monster data of the partner.
        
        return: ground monster pointer
    - name: GetMainCharacter1
      address:
        EU: 0x2055B40
        NA: 0x20557C4
        JP: 0x2055B60
      description: |-
        Returns the ground monster data of the first main character for the given game mode.
        
        In normal play, this will be the hero. During special episodes, this will be the first special episode main character (index 2).
        
        return: ground monster pointer
    - name: GetMainCharacter2
      address:
        EU: 0x2055B88
        NA: 0x205580C
        JP: 0x2055BA8
      description: |-
        Returns the ground monster data of the second main character for the given game mode, or null if invalid.
        
        In normal play, this will be the partner. During special episodes, this will be the second special episode main character (index 3) if one is present.
        
        return: ground monster pointer
    - name: GetMainCharacter3
      address:
        EU: 0x2055BD0
        NA: 0x2055854
        JP: 0x2055BF0
      description: |-
        Returns the ground monster data of the third main character for the given game mode, or null if invalid.
        
        In normal play, this will be null. During special episodes, this will be the third special episode main character (index 4) if one is present.
        
        return: ground monster pointer
    - name: GetFirstMatchingMemberIdx
      address:
        EU: 0x2055C70
        NA: 0x20558F4
        JP: 0x2055C90
      description: |-
        Gets the first team member index (in the Chimecho Assembly) that has a specific monster ID, or -1 if there is none.
        
        If valid, this will always be 5 or greater, since indexes 0-4 are reserved for main characters.
        
        r0: monster ID
        return: team member index of the first matching slot
    - name: GetFirstEmptyMemberIdx
      address:
        EU: 0x2055CE0
        NA: 0x2055964
        JP: 0x2055D00
      description: |-
        Gets the first unoccupied team member index (in the Chimecho Assembly), or -1 if there is none.
        
        If valid, this will always be 5 or greater, since indexes 0-4 are reserved for main characters.
        
        r0: ?
        return: team member index of the first available slot
    - name: IsMonsterNotNicknamed
      address:
        EU: 0x20563EC
        NA: 0x2056070
        JP: 0x205640C
      description: |-
        Checks if the string_buffer matches the name of the species
        
        r0: ground monster pointer
        return: bool
    - name: RemoveActiveMembersFromAllTeams
      address:
        EU: 0x2056444
        NA: 0x20560C8
        JP: 0x2056464
      description: |-
        Removes all of the active monsters on every type of team from the team member table.
        
        No params.
    - name: RemoveActiveMembersFromSpecialEpisodeTeam
      address:
        EU: 0x20564D4
        NA: 0x2056158
        JP: 0x20564F4
      description: |-
        Removes the active monsters on the Special Episode Team from the team member table.
        
        No params.
    - name: RemoveActiveMembersFromRescueTeam
      address:
        EU: 0x205653C
        NA: 0x20561C0
        JP: 0x205655C
      description: |-
        Removes the active monsters on the Rescue Team from the team member table.
        
        No params.
    - name: CheckTeamMemberIdx
      address:
        EU: 0x20565E0
        NA: 0x2056264
        JP: 0x2056600
      description: |-
        Checks if a team member's member index (team_member::member_idx) is equal to certain values.
        
        This is known to return true for some or all of the guest monsters.
        
        r0: member index
        return: True if the value is equal to 0x55AA or 0x5AA5
    - name: IsMonsterIdInNormalRange
      address:
        EU: 0x2056610
        NA: 0x2056294
        JP: 0x2056630
      description: |-
        Checks if a monster ID is in the range [0, 554], meaning it's before the special story monster IDs and secondary gender IDs.
        
        r0: monster ID
        return: bool
    - name: SetActiveTeam
      address:
        EU: 0x2056648
        NA: 0x20562CC
        JP: 0x2056668
      description: |-
        Sets the specified team to active in TEAM_MEMBER_TABLE.
        
        r0: team ID
    - name: GetActiveTeamMember
      address:
        EU: 0x2056708
        NA: 0x205638C
        JP: 0x2056728
      description: |-
        Returns a struct containing information about the active team member in the given slot index.
        
        r0: roster index
        return: team member pointer, or null if index is -1
    - name: GetActiveRosterIndex
      address:
        EU: 0x2056738
        NA: 0x20563BC
        JP: 0x2056758
      description: |-
        Searches for the roster index for the given team member within the current active roster.
        
        r0: team member index
        return: roster index if the team member is active, -1 otherwise
    - name: TryAddMonsterToActiveTeam
      address:
        EU: 0x2056AD0
        NA: 0x2056754
        JP: 0x2056AF0
      description: |-
        Attempts to add a monster from the team member table to the active team.
        
        Returns the team index of the newly added monster. If the monster was already on the team, returns its current team index. If the monster is not on the team and there's no space left, returns -1.
        
        r0: member index
        return: Team index
    - name: RemoveActiveMembersFromMainTeam
      address:
        EU: 0x2056CDC
        NA: 0x2056960
        JP: 0x2056CFC
      description: |-
        Removes the active monsters on the Main Team from the team member table.
        
        No params.
    - name: SetTeamSetupHeroAndPartnerOnly
      address:
        EU: 0x2056D48
        NA: 0x20569CC
        JP: 0x2056D68
      description: |-
        Implements SPECIAL_PROC_SET_TEAM_SETUP_HERO_AND_PARTNER_ONLY (see ScriptSpecialProcessCall).
        
        No params.
    - name: SetTeamSetupHeroOnly
      address:
        EU: 0x2056E2C
        NA: 0x2056AB0
        JP: 0x2056E48
      description: |-
        Implements SPECIAL_PROC_SET_TEAM_SETUP_HERO_ONLY (see ScriptSpecialProcessCall).
        
        No params.
    - name: GetPartyMembers
      address:
        EU: 0x2056F9C
        NA: 0x2056C20
        JP: 0x2056FB4
      description: |-
        Appears to get the team's active party members. Implements most of SPECIAL_PROC_IS_TEAM_SETUP_SOLO (see ScriptSpecialProcessCall).
        
        r0: [output] Array of 4 2-byte values (they seem to be indexes of some sort) describing each party member, which will be filled in by the function. The input can be a null pointer if the party members aren't needed
        return: Number of party members
    - name: RefillTeam
      address:
        EU: 0x20580D4
        NA: 0x2057D58
        JP: 0x20580EC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        No params.
    - name: ClearItem
      address:
        EU: 0x205856C
        NA: 0x20581F0
        JP: 0x20584F0
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: team_id
        r1: check
    - name: ChangeGiratinaFormIfSkyDungeon
      address:
        EU: 0x2058954
        NA: 0x20585D8
        JP: 0x20588D8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: dungeon ID
    - name: GetIqSkillStringId
      address:
        EU: 0x2058F98
        NA: 0x2058C1C
        JP: 0x2058F18
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: iq skill id
        return: iq skill string id
    - name: DoesTacticFollowLeader
      address:
        EU: 0x2058FB8
        NA: 0x2058C3C
        JP: 0x2058F38
      description: |-
        Returns whether or not the tactic involves following the team leader.
        
        r0: tactic_id
        return: bool
    - name: GetUnlockedTactics
      address:
        EU: 0x2058FC8
        NA: 0x2058C4C
        JP: 0x2058F48
      description: |-
        Returns an array with all the enabled tactics. TACTIC_NONE is used to fill the empty/unused entries
        in the array.
        
        r0: [output] Array of tactic_ids that are enabled
        r1: Monster level
    - name: GetUnlockedTacticFlags
      address:
        EU: 0x2059018
        NA: 0x2058C9C
        JP: 0x2058F98
      description: |-
        Returns an array with an entry for each tactic and if they're unlocked at the passed level.
        
        r0: [output] bool Array where the unlocked status of each tactic is stored
        r1: Monster level
    - name: CanLearnIqSkill
      address:
        EU: 0x2059054
        NA: 0x2058CD8
        JP: 0x2058FD4
      description: |-
        Returns whether an IQ skill can be learned with a given IQ amount or not.
        
        If the specified amount is 0, it always returns false.
        
        r0: IQ amount
        r1: IQ skill
        return: True if the specified skill can be learned with the specified IQ amount.
    - name: GetLearnableIqSkills
      address:
        EU: 0x2059080
        NA: 0x2058D04
        JP: 0x2059000
      description: |-
        Determines the list of IQ skills that a given monster can learn given its IQ value.
        
        The list of skills is written in the array specified in r0. The array has 69 slots in total. Unused slots are set to 0.
        
        r0: [output] Array where the list of skills will be written
        r1: Monster species
        r2: Monster IQ
        return: Amount of skills written to the output array
    - name: DisableIqSkill
      address:
        EU: 0x2059120
        NA: 0x2058DA4
        JP: 0x20590A0
      description: |-
        Disables an IQ skill.
        
        r0: Pointer to the bitarray containing the list of enabled IQ skills
        r1: ID of the skill to disable
    - name: EnableIqSkill
      address:
        EU: 0x2059170
        NA: 0x2058DF4
        JP: 0x20590F0
      description: |-
        Enables an IQ skill and disables any other skills that are incompatible with it.
        
        r0: Pointer to the bitarray containing the list of enabled IQ skills
        r1: ID of the skill to enable
    - name: GetSpeciesIqSkill
      address:
        EU: 0x20591E4
        NA: 0x2058E68
        JP: 0x2059164
      description: |-
        Gets the <index>th skill on the list of IQ skills that a given monster species can learn.
        
        r0: Species ID
        r1: Index (starting at 0)
        return: IQ skill ID
    - name: DisableAllIqSkills
      address:
        EU: 0x2059208
        NA: 0x2058E8C
        JP: 0x2059188
      description: |-
        Disables all IQ skills in the bitarray.
        
        r0: Pointer to the bitarray containing the list of enabled IQ skills
    - name: EnableAllLearnableIqSkills
      address:
        EU: 0x205922C
        NA: 0x2058EB0
        JP: 0x20591AC
      description: |-
        Attempts to enable all the IQ skills available to the monster. If there are incompatible IQ skils,
        the one with the highest ID will be activated while the others will be inactivated.
        
        r0: [output] Array where the list of skills will be written
        r1: Monster species
        r2: Monster IQ
    - name: IqSkillFlagTest
      address:
        EU: 0x2059280
        NA: 0x2058F04
        JP: 0x2059200
      description: |-
        Tests whether an IQ skill with a given ID is active.
        
        r0: IQ skill bitvector to test
        r1: IQ skill ID
        return: bool
    - name: GetNextIqSkill
      address:
        EU: 0x20592A0
        NA: 0x2058F24
        JP: 0x2059220
      description: |-
        Returns the next IQ skill that a given monster will learn given its current IQ value, or IQ_NONE if the monster won't learn any more skills.
        
        r0: Monster ID
        r1: Monster IQ
        return: ID of the next skill learned by the monster, or IQ_NONE if the monster won't learn any more skills.
    - name: GetExplorerMazeTeamName
      address:
        EU: 0x20593DC
        NA: 0x2059060
        JP: 0x205935C
      description: |-
        Returns the name of the explorer maze team. If the language of the team name is different from the
        language of selected in this game a default team name is written to the buffer instead.
        
        r0: [output] Buffer
    - name: GetExplorerMazeMonster
      address:
        EU: 0x2059474
        NA: 0x20590F8
        JP: 0x20593F4
      description: |-
        Returns the data of a monster sent into the Explorer Dojo using the "exchange teams" option.
        
        r0: Entry number (0-3)
        return: Ground monster data of the specified entry
    - name: WriteMonsterInfoToSave
      address:
        EU: 0x2059494
        NA: 0x2059118
        JP: 0x2059414
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
        return: ?
    - name: ReadMonsterInfoFromSave
      address:
        EU: 0x20595A0
        NA: 0x2059224
        JP: 0x2059520
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: start_address
        r1: total_length
    - name: WriteMonsterToSave
      address:
        EU: 0x20596B0
        NA: 0x2059334
        JP: 0x2059630
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: write_info
        r1: ground_monster
    - name: ReadMonsterFromSave
      address:
        EU: 0x20597C0
        NA: 0x2059444
        JP: 0x2059740
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: read_info
        r1: ground_monster
    - name: GetEvolutionPossibilities
      address:
        EU: 0x2059E94
        NA: 0x2059B18
        JP: 0x2059E14
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: ground_monster
        r1: evo_struct_addr
    - name: GetMonsterEvoStatus
      address:
        EU: 0x205A58C
        NA: 0x205A210
        JP: 0x205A50C
      description: |-
        evo_status = 0: Not possible now
        evo_status = 1: Possible now
        evo_status = 2: No further
        
        Note: unverified, ported from Irdkwia's notes
        
        r0: ground_monster
        return: evo_status
    - name: CopyTacticString
      address:
        EU: 0x205A7AC
        NA: 0x205A430
        JP: 0x205A72C
      description: |-
        Gets the string corresponding to a given string ID and copies it to the buffer specified in r0.
        
        This function won't write more than 64 bytes.
        
        r0: [output] buffer
        r1: tactic_id
    - name: GetStatBoostsForMonsterSummary
      address:
        EU: 0x205A7CC
        NA: 0x205A450
        JP: 0x205A74C
      description: |-
        Gets the stat boosts from held items, exclusive items, and iq skills and stores them into the
        monster_summary struct.
        
        r0: monster_summary
        r1: enum monster_id monster_id
        r2: pointer to held item
        r3: iq
        stack[0]: bool if Klutz is active
    - name: CreateMonsterSummaryFromTeamMember
      address:
        EU: 0x205B1A4
        NA: 0x205AE28
        JP: 0x205B128
      description: |-
        Creates a snapshot of the condition of a team_member struct in a monster_summary struct.
        
        r0: [output] monster_summary
        r1: team_member
        r2: bool is leader
    - name: GetSosMailCount
      address:
        EU: 0x205BCF8
        NA: 0x205B97C
        JP: 0x205BC7C
      description: |-
        Implements SPECIAL_PROC_GET_SOS_MAIL_COUNT (see ScriptSpecialProcessCall).
        
        r0: ?
        r1: some flag?
        return: SOS mail count
    - name: IsMissionSuspendedAndValid
      address:
        EU: 0x205CBD0
        NA: 0x205C854
        JP: 0x205CB54
      description: |-
        Checks if a mission is currently suspended and contains valid fields. Calls IsMissionValid for the validity check.
        
        r0: mission to check
        return: bool
    - name: AreMissionsEquivalent
      address:
        EU: 0x205CCB0
        NA: 0x205C934
        JP: 0x205CC34
      description: |-
        Checks if two missions are equivalent.
        
        r0: mission1
        r1: mission2
        return: bool
    - name: IsMissionValid
      address:
        EU: 0x205CDBC
        NA: 0x205CA40
        JP: 0x205CD40
      description: |-
        Checks if a mission contains valid fields.
        
        For example, a mission will be considered invalid if the ID of the monsters or items involved are out of bounds, if their entries are marked as invalid, if the destination floor does not exist, etc.
        If the mission fails one of the checks, the game will print an error message explaining what is wrong using DebugPrint0.
        
        r0: mission to check
        return: True if the mission is valid, false if it's not.
    - name: GenerateMission
      address:
        EU: 0x205D5A0
        NA: 0x205D224
        JP: 0x205D524
      description: |-
        Attempts to generate a random mission.
        
        r0: Pointer to something
        r1: Pointer to the struct where the data of the generated mission will be written to
        return: MISSION_GENERATION_SUCCESS if the mission was successfully generated, MISSION_GENERATION_FAILURE if it failed and MISSION_GENERATION_GLOBAL_FAILURE if it failed and the game shouldn't try to generate more.
    - name: IsMissionTypeSpecialEpisode
      address:
        EU: 0x205E5B4
        NA: 0x205E238
        JP: 0x205E538
      description: |-
        Checks if a mission is for a Special Episode Transmission, which unlocks Special Episode 3. This specifically checks for a mission of type MISSION_SPECIAL_EPISODE and subtype 0x2.
        
        r0: mission pointer
        return: bool
    - name: GenerateDailyMissions
      address:
        EU: 0x205E94C
        NA: 0x205E5D0
        JP: 0x205E8D0
      description: |-
        Generates the missions displayed on the Job Bulletin Board and the Outlaw Notice Board.
        
        No params.
    - name: AlreadyHaveMission
      address:
        EU: 0x205F014
        NA: 0x205EC98
        JP: 0x205EF98
      description: |-
        Checks if a specified mission already exists in the Job List.
        
        r0: mission to check
        return: bool
    - name: CountJobListMissions
      address:
        EU: 0x205F100
        NA: 0x205ED84
        JP: 0x205F084
      description: |-
        Gets the number of missions currently in the Job List.
        
        return: number of missions
    - name: DungeonRequestsDone
      address:
        EU: 0x205F120
        NA: 0x205EDA4
        JP: 0x205F0A4
      description: |-
        Seems to return the number of missions completed.
        
        Part of the implementation for SPECIAL_PROC_DUNGEON_HAD_REQUEST_DONE (see ScriptSpecialProcessCall).
        
        r0: ?
        r1: some flag?
        return: number of missions completed
    - name: DungeonRequestsDoneWrapper
      address:
        EU: 0x205F18C
        NA: 0x205EE10
        JP: 0x205F110
      description: |-
        Calls DungeonRequestsDone with the second argument set to false.
        
        r0: ?
        return: number of mission completed
    - name: AnyDungeonRequestsDone
      address:
        EU: 0x205F19C
        NA: 0x205EE20
        JP: 0x205F120
      description: |-
        Calls DungeonRequestsDone with the second argument set to true, and converts the integer output to a boolean.
        
        r0: ?
        return: bool: whether the number of missions completed is greater than 0
    - name: AddMissionToJobList
      address:
        EU: 0x205F434
        NA: 0x205F0B8
        JP: 0x205F3B8
      description: |-
        Adds a mission to the Job List.
        
        r0: mission to add
    - name: GetAcceptedMission
      address:
        EU: 0x205F454
        NA: 0x205F0D8
        JP: 0x205F3D8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: mission_id
        return: mission
    - name: GetMissionByTypeAndDungeon
      address:
        EU: 0x205F728
        NA: 0x205F3AC
        JP: 0x205F69C
      description: |-
        Returns the position on the mission list of the first mission of the specified type that takes place in the specified dungeon.
        
        If the type of the mission has a subtype, the subtype of the checked mission must match the one in [r2] too for it to be returned.
        
        r0: Position on the mission list where the search should start. Missions before this position on the list will be ignored.
        r1: Mission type
        r2: Pointer to some struct that contains the subtype of the mission to check on its first byte
        r3: Dungeon ID
        return: Index of the first mission that meets the specified requirements, or -1 if there aren't any missions that do so.
    - name: CheckAcceptedMissionByTypeAndDungeon
      address:
        EU: 0x205F820
        NA: 0x205F4A4
        JP: 0x205F794
      description: |-
        Returns true if there are any accepted missions on the mission list that are of the specified type and take place in the specified dungeon.
        
        If the type of the mission has a subtype, the subtype of the checked mission must match the one in [r2] too for it to be returned.
        
        r0: Mission type
        r1: Pointer to some struct that contains the subtype of the mission to check on its first byte
        r2: Dungeon ID
        return: True if at least one mission meets the specified requirements, false otherwise.
    - name: GetAllPossibleMonsters
      address:
        EU: 0x205FAB4
        NA: 0x205F738
        JP: 0x205FA28
      description: |-
        Stores MISSION_MONSTER_LIST_PTR into the passed buffer and retrieves the number of monsters that can be used in a mission.
        
        r0: buffer
        return: Number of monsters usable for a mission
    - name: GenerateAllPossibleMonstersList
      address:
        EU: 0x205FAD4
        NA: 0x205F758
        JP: 0x205FA48
      description: |-
        Attempts to add monster IDs 1 (Bulbasaur) through 535 (Shaymin Sky) as entries to a heap-allocated list.
        
        If no monsters are valid mission targets, the heap-allocated list is freed. Otherwise, sets MISSION_MONSTER_LIST_PTR and MISSION_MONSTER_COUNT.
        
        return: Number of monsters usable for a mission
    - name: DeleteAllPossibleMonstersList
      address:
        EU: 0x205FB40
        NA: 0x205F7C4
        JP: 0x205FAB4
      description: |-
        If MISSION_MONSTER_LIST_PTR is not null, frees its heap-allocated list and nulls MISSION_MONSTER_LIST_PTR and MISSION_MONSTER_COUNT.
        
        No params.
    - name: GenerateAllPossibleDungeonsList
      address:
        EU: 0x205FB70
        NA: 0x205F7F4
        JP: 0x205FAE4
      description: |-
        Attempts to add dungeon IDs 1 (DUNGEON_TEST_DUNGEON) through 179 (DUNGEON_RESCUE) as entries to a heap-allocated list.
        
        If no dungeons are valid mission targets, the heap-allocated list is freed. Otherwise, sets MISSION_DUNGEON_LIST_PTR and MISSION_DUNGEON_COUNT.
        
        return: Number of dungeons usable for a mission
    - name: DeleteAllPossibleDungeonsList
      address:
        EU: 0x205FC1C
        NA: 0x205F8A0
        JP: 0x205FB90
      description: |-
        If MISSION_DUNGEON_LIST_PTR is not null, frees its heap-allocated list and nulls MISSION_DUNGEON_LIST_PTR and MISSION_DUNGEON_COUNT.
        
        No params.
    - name: GenerateAllPossibleDeliverList
      address:
        EU: 0x205FC4C
        NA: 0x205F8D0
        JP: 0x205FBC0
      description: |-
        Attempts to add all items in ITEM_DELIVERY_TABLE as entries to a heap-allocated list.
        
        If no items are valid for a delivery mission, the heap-allocated list is freed. Otherwise, sets MISSION_DELIVER_LIST_PTR and MISSION_DELIVER_COUNT.
        
        return: Number of deliverable items for a mission
    - name: DeleteAllPossibleDeliverList
      address:
        EU: 0x205FC88
        NA: 0x205F90C
        JP: 0x205FBFC
      description: |-
        If MISSION_DELIVER_LIST_PTR is not null, frees its heap-allocated list and nulls MISSION_DELIVER_LIST_PTR and MISSION_DELIVER_COUNT.
        
        No params.
    - name: ClearMissionData
      address:
        EU: 0x205FD34
        NA: 0x205F9B8
        JP: 0x205FCA8
      description: |-
        Given a mission struct, clears some of it fields.
        
        In particular, mission::status is set to mission_status::MISSION_STATUS_INVALID, mission::dungeon_id is set to -1, mission::floor is set to 0 and mission::reward_type is set to mission_reward_type::MISSION_REWARD_MONEY.
        
        r0: Pointer to the mission to clear
    - name: IsMonsterMissionAllowed
      address:
        EU: 0x2062D90
        NA: 0x2062A14
        JP: 0x2062CFC
      description: |-
        Checks if the specified monster is contained in the MISSION_BANNED_MONSTERS array.
        
        The function converts the ID by calling GetBaseForm and FemaleToMaleForm first.
        
        r0: Monster ID
        return: False if the monster ID (after converting it) is contained in MISSION_BANNED_MONSTERS, true if it isn't.
    - name: CanMonsterBeUsedForMissionWrapper
      address:
        EU: 0x2062DD4
        NA: 0x2062A58
        JP: 0x2062D40
      description: |-
        Calls CanMonsterBeUsedForMission with r1 = 1.
        
        r0: Monster ID
        return: Result of CanMonsterBeUsedForMission
    - name: CanMonsterBeUsedForMission
      address:
        EU: 0x2062DE4
        NA: 0x2062A68
        JP: 0x2062D50
      description: |-
        Returns whether a certain monster can be used (probably as the client or as the target) when generating a mission.
        
        Excluded monsters include those that haven't been fought in dungeons yet, the second form of certain monsters and, if PERFOMANCE_PROGRESS_FLAG[9] is 0, monsters in MISSION_BANNED_STORY_MONSTERS, the species of the player and the species of the partner.
        
        r0: Monster ID
        r1: True to exclude monsters in the MISSION_BANNED_MONSTERS array, false to allow them
        return: True if the specified monster can be part of a mission
    - name: IsMonsterMissionAllowedStory
      address:
        EU: 0x2062E60
        NA: 0x2062AE4
        JP: 0x2062DCC
      description: |-
        Checks if the specified monster should be allowed to be part of a mission (probably as the client or the target), accounting for the progress on the story.
        
        If PERFOMANCE_PROGRESS_FLAG[9] is true, the function returns true.
        If it isn't, the function checks if the specified monster is contained in the MISSION_BANNED_STORY_MONSTERS array, or if it corresponds to the ID of the player or the partner.
        
        The function converts the ID by calling GetBaseForm and FemaleToMaleForm first.
        
        r0: Monster ID
        return: True if PERFOMANCE_PROGRESS_FLAG[9] is true, false if it isn't and the monster ID (after converting it) is contained in MISSION_BANNED_STORY_MONSTERS or if it's the ID of the player or the partner, true otherwise.
    - name: CanDungeonBeUsedForMission
      address:
        EU: 0x2062F34
        NA: 0x2062BB8
        JP: 0x2062EA0
      description: |-
        Returns whether a certain dungeon can be used when generating a mission.
        
        Excluded dungeons include DUNGEON_ICE_AEGIS_CAVE, DUNGEON_DESTINY_TOWER, all Special Episode dungeons, dungeons with IDs greater than 174 (DUNGEON_STAR_CAVE), DUNGEON_CRYSTAL_CAVE and DUNGEON_CRYSTAL_CROSSING if PERFORMANCE_PROGRESS_LIST[9] is false, and any dungeon that does not have a dungeon mode of DMODE_OPEN_AND_REQUEST.
        
        r0: Dungeon ID
        return: True if the specified dungeon can be part of a mission
    - name: CanSendItem
      address:
        EU: 0x2063158
        NA: 0x2062DDC
        JP: 0x20630C4
      description: |-
        Returns whether a certain item can be sent to another player via Wonder Mail.
        
        r0: item ID
        r1: to_sky
        return: bool
    - name: IsAvailableItem
      address:
        EU: 0x20637D8
        NA: 0x206345C
        JP: 0x2063744
      description: |-
        Checks if a certain item is valid to be used in delivery missions. 
        
        Validity entails a loop throughout all dungeons, checking if they have been visited before (via a call to GetMaxReachedFloor), and checking if the item is available within a dungeon's group (via a call to IsItemAvailableInDungeonGroup).
        
        r0: item ID
        return: bool
    - name: GetAvailableItemDeliveryList
      address:
        EU: 0x2063824
        NA: 0x20634A8
        JP: 0x2063790
      description: |-
        Iterates through ITEM_DELIVERY_TABLE and checks if each entry is valid to be used in delivery missions.
        
        r0: item_buffer
        return: Number of deliverable items for a mission
    - name: GetActorMatchingStorageId
      address:
        EU: 0x2065D14
        NA: 0x2065998
        JP: 0x2065C80
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        r0: actor_id
        return: storage ID
    - name: SetActorTalkMainAndActorTalkSub
      address:
        EU: 0x2065EB8
        NA: 0x2065B3C
        JP: 0x2065E24
      description: |-
        Sets ACTOR_TALK_MAIN and ACTOR_TALK_SUB to given actor IDs.
        
        r0: actor_id for ACTOR_TALK_MAIN
        r1: actor_id for ACTOR_TALK_SUB
    - name: SetActorTalkMain
      address:
        EU: 0x2065ECC
        NA: 0x2065B50
        JP: 0x2065E38
      description: |-
        Sets ACTOR_TALK_MAIN to be actor_id.
        Implements SPECIAL_PROC_SET_ACTOR_TALK_MAIN (see ScriptSpecialProcessCall).
        
        r0: actor_id
    - name: SetActorTalkSub
      address:
        EU: 0x2065EDC
        NA: 0x2065B60
        JP: 0x2065E48
      description: |-
        Sets ACTOR_TALK_SUB to be actor_id.
        Implements SPECIAL_PROC_SET_ACTOR_TALK_SUB (see ScriptSpecialProcessCall).
        
        r0: actor_id
    - name: RandomizeDemoActors
      address:
        EU: 0x2065FC4
        NA: 0x2065C48
        JP: 0x2065F30
      description: |-
        Randomly picks one of the 18 teams from DEMO_TEAMS and sets ENTITY_NPC_DEMO_HERO and ENTITY_NPC_DEMO_PARTNER
        to the randomly selected hero and partner.
        Implements SPECIAL_PROC_RANDOMIZE_DEMO_ACTORS (see ScriptSpecialProcessCall).
        
        No params.
    - name: ItemAtTableIdx
      address:
        EU: 0x2066074
        NA: 0x2065CF8
        JP: 0x2065FE0
      description: |-
        Gets info about the item at a given item table (not sure what this table is...) index.
        
        Used by SPECIAL_PROC_COUNT_TABLE_ITEM_TYPE_IN_BAG and friends (see ScriptSpecialProcessCall).
        
        r0: table index
        r1: [output] pointer to an owned_item
    - name: MainLoop
      address:
        EU: 0x2066098
        NA: 0x2065D1C
        JP: 0x2066004
      description: |-
        This function gets called shortly after the game is started. Contains a single infinite loop and has no return statement.
        
        No params.
    - name: CreateJobSummary
      address:
        EU: 0x2069B98
        NA: 0x2069800
        JP: 0x2069AF0
      description: |-
        Creates a window containing a summary of a specific mission on the Top Screen.
        
        r0: mission pointer
        r1: ?
    - name: DungeonSwapIdToIdx
      address:
        EU: 0x206AAAC
        NA: 0x206A714
        JP: 0x206AA08
      description: |-
        Converts a dungeon ID to its corresponding index in DUNGEON_SWAP_ID_TABLE, or -1 if not found.
        
        r0: dungeon ID
        return: index
    - name: DungeonSwapIdxToId
      address:
        EU: 0x206AAE8
        NA: 0x206A750
        JP: 0x206AA44
      description: |-
        Converts an index in DUNGEON_SWAP_ID_TABLE to the corresponding dungeon ID, or DUNGEON_DUMMY_0xFF if the index is -1.
        
        r0: index
        return: dungeon ID
    - name: GetDungeonModeSpecial
      address:
        EU: 0x206AB04
        NA: 0x206A76C
        JP: 0x206AA60
      description: |-
        Returns the status of the given dungeon, with some modifications.
        
        If the dungeon ID is DUNGEON_BEACH, returns DMODE_REQUEST.
        If it's DUNGEON_JOINED_AT_UNKNOWN, returns DMODE_OPEN_AND_REQUEST.
        If it's >= DUNGEON_NORMAL_FLY_MAZE and <= DUNGEON_DOJO_0xD3, returns DMODE_OPEN_AND_REQUEST.
        Else, calls GetDungeonMode and returns DMODE_REQUEST if the dungeon has been cleared, or DMODE_OPEN if it's not.
        
        r0: Dungeon ID
        return: Dungeon mode
  data:
    - name: SECURE
      address:
        EU: 0x2000000
        NA: 0x2000000
        JP: 0x2000000
      length:
        EU: 0x800
        NA: 0x800
        JP: 0x800
      description: "The header of the DS cartridge secure area. See https://problemkaputt.de/gbatek.htm#dscartridgesecurearea"
    - name: START_MODULE_PARAMS
      address:
        EU: 0x2000BA0
        NA: 0x2000BA0
        JP: 0x2000BA0
      length:
        EU: 0xCC
        NA: 0xCC
        JP: 0xCC
      description: Parameters used by the NitroSDK to read the ROM.
    - name: DEFAULT_MEMORY_ARENA_SIZE
      address:
        EU: 0x2000E58
        NA: 0x2000E58
        JP: 0x2000E58
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Length in bytes of the default memory allocation arena, 1991680."
    - name: LOG_MAX_ARG
      address:
        NA: 0x2002220
        JP: 0x2002220
      length:
        NA: 0x4
        JP: 0x4
      description: "The maximum argument value for the Log function, 2047."
    - name: DAMAGE_SOURCE_CODE_ORB_ITEM
      address:
        NA: 0x200CA84
        JP: 0x200CA84
      description: "The damage source value for any item in CATEGORY_ORBS, 0x262."
    - name: DAMAGE_SOURCE_CODE_NON_ORB_ITEM
      address:
        NA: 0x200CA88
        JP: 0x200CA88
      description: "The damage source value for any item not in CATEGORY_ORBS, 0x263."
    - name: AURA_BOW_ID_LAST
      address:
        EU: 0x200CCBC
        NA: 0x200CC34
        JP: 0x200CC34
      length:
        EU: 0x4
        NA: 0x4
      description: Highest item ID of the aura bows.
    - name: NUMBER_OF_ITEMS
      address:
        EU:
          - 0x200E88C
          - 0x200E930
        NA:
          - 0x200E7BC
          - 0x200E860
      length:
        EU: 0x4
        NA: 0x4
      description: Number of items in the game.
    - name: MAX_MONEY_CARRIED
      address:
        EU: 0x200EDF8
        NA: 0x200ED50
        JP: 0x200ED80
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Maximum amount of money the player can carry, 99999."
    - name: MAX_MONEY_STORED
      address:
        EU: 0x20107F8
        NA: 0x2010750
        JP: 0x2010720
      length:
        EU: 0x4
        NA: 0x4
      description: "Maximum amount of money the player can store in the Duskull Bank, 9999999."
    - name: WINDOW_LIST_PTR
      address:
        NA: 0x2028350
      length:
        NA: 0x4
      description: Hard-coded pointer to WINDOW_LIST.
    - name: SCRIPT_VARS_VALUES_PTR
      address:
        EU:
          - 0x204B630
          - 0x204B81C
          - 0x204C764
          - 0x204C7BC
        NA:
          - 0x204B2F8
          - 0x204B4E4
          - 0x204C42C
          - 0x204C484
      length:
        EU: 0x4
        NA: 0x4
      description: Hard-coded pointer to SCRIPT_VARS_VALUES.
    - name: MAX_PLAY_TIME
      address:
        EU: 0x2051188
      length:
        EU: 0x4
      description: |-
        Maximum number of seconds that the file timer counts up to.
        
        35999999 seconds (one second under 10000 hours).
    - name: MONSTER_ID_LIMIT
      address:
        EU: 0x2054818
        NA: 0x205449C
      length:
        EU: 0x4
        NA: 0x4
      description: One more than the maximum valid monster ID (0x483).
    - name: MAX_RECRUITABLE_TEAM_MEMBERS
      address:
        EU:
          - 0x20555B4
          - 0x20559C8
        NA:
          - 0x2055238
          - 0x205564C
      length:
        EU: 0x4
        NA: 0x4
      description: "555, appears to be the maximum number of members recruited to an exploration team, at least for the purposes of some checks that need to iterate over all team members."
    - name: NATURAL_LOG_VALUE_TABLE
      address:
        EU: 0x20917E0
        NA: 0x2091448
        JP: 0x2091730
      length:
        NA: 0x1000
      description: |-
        A table of values for the natural log function corresponding to integer arguments in the range [0, 2047].
        
        Each value is stored as a 16-bit fixed-point number with 12 fractional bits. I.e., to get the actual natural log value, take the table entry and divide it by 2^12.
        
        The value at an input of 0 is just listed as 0; the Log function makes sure the input is always at least 1 before reading the table.
        
        type: fx16_12[2048]
    - name: CART_REMOVED_IMG_DATA
      address:
        EU: 0x2092EE4
        NA: 0x2092AE8
        JP: 0x2092DD0
      length:
        EU: 0x2000
        NA: 0x2000
        JP: 0x2000
    - name: STRING_DEBUG_EMPTY
      address:
        EU: 0x2094EF8
        NA: 0x2094AFC
        JP: 0x2094DE4
      length:
        NA: 0x4
    - name: STRING_DEBUG_FORMAT_LINE_FILE
      address:
        EU: 0x2094EFC
        NA: 0x2094B00
        JP: 0x2094DE8
      length:
        NA: 0x1C
    - name: STRING_DEBUG_NO_PROG_POS
      address:
        EU: 0x2094F18
        NA: 0x2094B1C
        JP: 0x2094E04
      length:
        NA: 0x18
    - name: STRING_DEBUG_SPACED_PRINT
      address:
        EU: 0x2094F30
        NA: 0x2094B34
        JP: 0x2094E1C
      length:
        NA: 0xC
    - name: STRING_DEBUG_FATAL
      address:
        EU: 0x2094F3C
        NA: 0x2094B40
        JP: 0x2094E28
      length:
        NA: 0x14
    - name: STRING_DEBUG_NEWLINE
      address:
        EU: 0x2094F50
        NA: 0x2094B54
        JP: 0x2094E3C
      length:
        NA: 0x4
    - name: STRING_DEBUG_LOG_NULL
      address:
        EU: 0x2094F54
        NA: 0x2094B58
        JP: 0x2094E40
      length:
        NA: 0x8
    - name: STRING_DEBUG_STRING_NEWLINE
      address:
        EU: 0x2094F5C
        NA: 0x2094B60
        JP: 0x2094E48
      length:
        NA: 0x4
    - name: STRING_EFFECT_EFFECT_BIN
      address:
        EU: 0x2094F60
        NA: 0x2094B64
        JP: 0x2094E4C
      length:
        NA: 0x14
    - name: STRING_MONSTER_MONSTER_BIN
      address:
        EU: 0x2094F74
        NA: 0x2094B78
        JP: 0x2094E60
      length:
        NA: 0x14
    - name: STRING_BALANCE_M_LEVEL_BIN
      address:
        EU: 0x2094F88
        NA: 0x2094B8C
        JP: 0x2094E74
      length:
        NA: 0x14
    - name: STRING_DUNGEON_DUNGEON_BIN
      address:
        EU: 0x2094F9C
        NA: 0x2094BA0
        JP: 0x2094E88
      length:
        NA: 0x14
    - name: STRING_MONSTER_M_ATTACK_BIN
      address:
        EU: 0x2094FB0
        NA: 0x2094BB4
        JP: 0x2094E9C
      length:
        NA: 0x18
    - name: STRING_MONSTER_M_GROUND_BIN
      address:
        EU: 0x2094FC8
        NA: 0x2094BCC
        JP: 0x2094EB4
      length:
        NA: 0x18
    - name: STRING_FILE_DIRECTORY_INIT
      address:
        EU: 0x2094FE0
        NA: 0x2094BE4
        JP: 0x2094ECC
      length:
        NA: 0x28
    - name: AVAILABLE_ITEMS_IN_GROUP_TABLE
      address:
        EU: 0x2095130
        NA: 0x2094D34
        JP: 0x2095028
      length:
        EU: 0x3200
        NA: 0x3200
        JP: 0x3200
      description: |-
        100*0x80
        Linked to the dungeon group id
        
        Note: unverified, ported from Irdkwia's notes
    - name: ARM9_UNKNOWN_TABLE__NA_2097FF8
      address:
        EU: 0x2098444
        NA: 0x2097FF8
        JP: 0x20982EC
      length:
        EU: 0x40
        NA: 0x40
        JP: 0x40
      description: |-
        16*0x4 (0x2+0x2)
        
        Note: unverified, ported from Irdkwia's notes
    - name: KECLEON_SHOP_ITEM_TABLE_LISTS_1
      address:
        EU: 0x2098504
        NA: 0x20980C0
        JP: 0x20983B4
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: enum item_id[4]
    - name: KECLEON_SHOP_ITEM_TABLE_LISTS_2
      address:
        EU: 0x2098514
        NA: 0x20980D0
        JP: 0x20983C4
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: enum item_id[4]
    - name: EXCLUSIVE_ITEM_STAT_BOOST_DATA
      aliases:
        - EXCLUSIVE_ITEM_ATTACK_BOOSTS
      address:
        EU: 0x209852C
        NA: 0x20980E8
        JP: 0x20983DC
      length:
        EU: 0x3C
        NA: 0x3C
        JP: 0x3C
      description: |-
        Contains stat boost effects for different exclusive item classes.
        
        Each 4-byte entry contains the boost data for (attack, defense, special attack, special defense), 1 byte each, for a specific exclusive item class, indexed according to the stat boost data index list.
        
        type: struct exclusive_item_stat_boost_entry[15]
    - name: EXCLUSIVE_ITEM_DEFENSE_BOOSTS
      address:
        EU: 0x209852D
        NA: 0x20980E9
        JP: 0x20983DD
      length:
        EU: 0x39
        NA: 0x39
        JP: 0x39
      description: "EXCLUSIVE_ITEM_STAT_BOOST_DATA, offset by 1"
    - name: EXCLUSIVE_ITEM_SPECIAL_ATTACK_BOOSTS
      address:
        EU: 0x209852E
        NA: 0x20980EA
        JP: 0x20983DE
      length:
        EU: 0x39
        NA: 0x39
        JP: 0x39
      description: "EXCLUSIVE_ITEM_STAT_BOOST_DATA, offset by 2"
    - name: EXCLUSIVE_ITEM_SPECIAL_DEFENSE_BOOSTS
      address:
        EU: 0x209852F
        NA: 0x20980EB
        JP: 0x20983DF
      length:
        EU: 0x39
        NA: 0x39
        JP: 0x39
      description: "EXCLUSIVE_ITEM_STAT_BOOST_DATA, offset by 3"
    - name: EXCLUSIVE_ITEM_EFFECT_DATA
      address:
        EU: 0x2098568
        NA: 0x2098124
        JP: 0x2098418
      length:
        EU: 0x778
        NA: 0x778
        JP: 0x778
      description: |-
        Contains special effects for each exclusive item.
        
        Each entry is 2 bytes, with the first entry corresponding to the first exclusive item (Prism Ruff). The first byte is the exclusive item effect ID, and the second byte is an index into other data tables (related to the more generic stat boosting effects for specific monsters).
        
        type: struct exclusive_item_effect_entry[956]
    - name: EXCLUSIVE_ITEM_STAT_BOOST_DATA_INDEXES
      address:
        EU: 0x2098569
        NA: 0x2098125
        JP: 0x2098419
      length:
        EU: 0x777
        NA: 0x777
      description: "EXCLUSIVE_ITEM_EFFECT_DATA, offset by 1"
    - name: RECYCLE_SHOP_ITEM_LIST
      address:
        EU: 0x2098D10
        NA: 0x20988CC
        JP: 0x2098BC0
      length:
        EU: 0x360
        NA: 0x360
        JP: 0x360
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: TYPE_SPECIFIC_EXCLUSIVE_ITEMS
      address:
        EU: 0x2099070
        NA: 0x2098C2C
        JP: 0x2098F20
      length:
        EU: 0x88
        NA: 0x88
        JP: 0x88
      description: |-
        Lists of type-specific exclusive items (silk, dust, gem, globe) for each type.
        
        type: struct item_id_16[17][4]
    - name: RECOIL_MOVE_LIST
      address:
        EU: 0x20991B8
        NA: 0x2098D74
        JP: 0x2099068
      length:
        EU: 0x16
        NA: 0x16
        JP: 0x16
      description: |-
        Null-terminated list of all the recoil moves, as 2-byte move IDs.
        
        type: struct move_id_16[11]
    - name: PUNCH_MOVE_LIST
      address:
        EU: 0x20991CE
        NA: 0x2098D8A
        JP: 0x209907E
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Null-terminated list of all the punch moves, as 2-byte move IDs.
        
        type: struct move_id_16[16]
    - name: MOVE_POWER_STARS_TABLE
      address:
        EU: 0x209A150
        NA: 0x2099CD4
        JP: 0x2099FC8
      length:
        NA: 0x18
        JP: 0x18
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int[6]
    - name: MOVE_ACCURACY_STARS_TABLE
      address:
        EU: 0x209A168
        NA: 0x2099CEC
        JP: 0x2099FE0
      length:
        NA: 0x20
        JP: 0x20
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int[8]
    - name: PARENT_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B3CC
        NA: 0x209AE90
        JP: 0x209B7E4
      length:
        NA: 0x10
      description: |-
        Default window_params for a simple_menu created with CreateParentMenuInternal.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateParentMenuInternal.
        
        Additionally, width and height are 0, and will be computed in CreateParentMenuInternal.
    - name: SIMPLE_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B3DC
        NA: 0x209AEA0
        JP: 0x209B7F4
      length:
        NA: 0x10
      description: |-
        Default window_params for a simple_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateSimpleMenuInternal.
        
        Additionally, width and height are 0, and will be computed in CreateSimpleMenuInternal.
    - name: ADVANCED_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B3EC
        NA: 0x209AEB0
        JP: 0x209B804
      length:
        NA: 0x10
      description: |-
        Default window_params for an advanced_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateAdvancedMenu.
        
        Additionally, width and height are 0, and will be computed in CreateAdvancedMenu.
    - name: COLLECTION_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B3FC
        NA: 0x209AEC0
        JP: 0x209B814
      length:
        NA: 0x10
      description: |-
        Default window_params for a collection_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateCollectionMenu.
        
        Additionally, width and height are 0, and will be computed in CreateCollectionMenu.
    - name: OPTIONS_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B40C
        NA: 0x209AED0
        JP: 0x209B824
      length:
        NA: 0x10
      description: |-
        Default window_params for an options_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateOptionsMenu.
        
        Additionally, width and height are 0, and will be computed in CreateOptionsMenu.
    - name: DEBUG_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B448
        NA: 0x209AF0C
        JP: 0x209B860
      length:
        NA: 0x10
      description: |-
        Default window_params for a debug_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateDebugMenu.
        
        Additionally, width and height are 0, and will be computed in CreateDebugMenu.
    - name: SCROLL_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B458
        NA: 0x209AF1C
        JP: 0x209B870
      length:
        NA: 0x10
      description: Default window_params for a scroll_box.
    - name: DIALOGUE_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B468
        NA: 0x209AF2C
        JP: 0x209B880
      length:
        NA: 0x10
      description: Default window_params for a dialogue_box.
    - name: PORTRAIT_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B478
        NA: 0x209AF3C
        JP: 0x209B890
      length:
        NA: 0x10
      description: |-
        Default window_params for a portrait_box.
        
        Note that the screen and box type are unset, and are determined in CreatePortraitBox.
    - name: TEXT_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B488
        NA: 0x209AF4C
        JP: 0x209B8A0
      length:
        NA: 0x10
      description: Default window_params for a text_box.
    - name: AREA_NAME_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B498
        NA: 0x209AF5C
        JP: 0x209B8B0
      length:
        NA: 0x10
      description: |-
        Default window_params for an area_name_box.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateAreaNameBox.
        
        Additionally, width and height are 0, and will be computed in CreateAreaNameBox.
    - name: CONTROLS_CHART_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B4B4
        NA: 0x209AF78
        JP: 0x209B8CC
      length:
        NA: 0x10
      description: Default window_params for a controls_chart.
    - name: ALERT_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B4D0
        NA: 0x209AF94
        JP: 0x209B8E8
      length:
        NA: 0x10
      description: Default window_params for an alert_box.
    - name: ADVANCED_TEXT_BOX_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B4E0
        NA: 0x209AFA4
        JP: 0x209B8F8
      length:
        NA: 0x10
      description: |-
        Default window_params for an advanced_text_box.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateAdvancedTextBoxInternal.
    - name: TEAM_SELECTION_MENU_DEFAULT_WINDOW_PARAMS
      address:
        EU: 0x209B4F0
        NA: 0x209AFB4
        JP: 0x209B908
      length:
        NA: 0x10
      description: |-
        Default window_params for a team_selection_menu.
        
        Note that x_offset and y_offset refer to the right and bottom edges, since they will be paired with the x_offset_end and y_offset_end window flags in CreateTeamSelectionMenu.
        
        Additionally, width and height are 0, and will be computed in CreateTeamSelectionMenu.
    - name: PARTNER_TALK_KIND_TABLE
      address:
        EU: 0x209D268
        NA: 0x209CCE4
        JP: 0x209E0B8
      length:
        EU: 0x58
        NA: 0x58
        JP: 0x58
      description: |-
        Table of values for the PARTNER_TALK_KIND script variable.
        
        type: struct partner_talk_kind_table_entry[11]
    - name: SCRIPT_VARS_LOCALS
      address:
        EU: 0x209D450
        NA: 0x209CECC
        JP: 0x209E2A0
      length:
        EU: 0x40
        NA: 0x40
        JP: 0x40
      description: |-
        List of special "local" variables available to the script engine. There are 4 16-byte entries.
        
        Each entry has the same structure as an entry in SCRIPT_VARS.
        
        type: struct script_local_var_table
    - name: SCRIPT_VARS
      address:
        EU: 0x209DDF4
        NA: 0x209D870
        JP: 0x209EC44
      length:
        EU: 0x730
        NA: 0x730
        JP: 0x730
      description: |-
        List of predefined global variables that track game state, which are available to the script engine. There are 115 16-byte entries.
        
        These variables underpin the various ExplorerScript global variables you can use in the SkyTemple SSB debugger.
        
        type: struct script_var_table
    - name: PORTRAIT_LAYOUTS
      address:
        EU: 0x209E598
        NA: 0x209E014
        JP: 0x209F3E8
      length:
        EU: 0xC0
        NA: 0xC0
        JP: 0xC0
      description: |-
        All the possible layouts a portrait can be placed in by default.
        
        type: struct portrait_layout[32]
    - name: KAOMADO_FILEPATH
      address:
        EU: 0x209E658
        NA: 0x209E0D4
        JP: 0x209F4A8
      length:
        NA: 0x14
      description: |-
        "Path of the file where all the portraits are stored. \"FONT/kaomado.kao\", padded with null to a multiple of 4"
        
        type: char[20]
    - name: WONDER_MAIL_BITS_MAP
      address:
        EU: 0x209E66C
        NA: 0x209E0E8
        JP: 0x209F4BC
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: uint8_t[32]
    - name: WONDER_MAIL_BITS_SWAP
      address:
        EU: 0x209E68C
        NA: 0x209E108
        JP: 0x209F4DC
      length:
        EU: 0x24
        NA: 0x24
        JP: 0x24
      description: |-
        Last 2 bytes are unused
        
        Note: unverified, ported from Irdkwia's notes
        
        type: uint8_t[36]
    - name: ARM9_UNKNOWN_TABLE__NA_209E12C
      address:
        EU: 0x209E6B0
        NA: 0x209E12C
        JP: 0x209F500
      length:
        EU: 0x38
        NA: 0x38
        JP: 0x38
      description: |-
        52*0x2 + 2 bytes unused
        
        Note: unverified, ported from Irdkwia's notes
    - name: ARM9_UNKNOWN_TABLE__NA_209E164
      address:
        EU: 0x209E6E8
        NA: 0x209E164
        JP: 0x209F538
      length:
        EU: 0x100
        NA: 0x100
        JP: 0x100
      description: |-
        256*0x1
        
        Note: unverified, ported from Irdkwia's notes
    - name: ARM9_UNKNOWN_TABLE__NA_209E280
      address:
        EU: 0x209E804
        NA: 0x209E280
        JP: 0x209F654
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        32*0x1
        
        Note: unverified, ported from Irdkwia's notes
    - name: WONDER_MAIL_ENCRYPTION_TABLE
      address:
        EU: 0x209E824
        NA: 0x209E2A0
        JP: 0x209F674
      length:
        EU: 0x100
        NA: 0x100
        JP: 0x100
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: uint8_t[256]
    - name: DUNGEON_DATA_LIST
      address:
        EU: 0x209E924
        NA: 0x209E3A0
        JP: 0x209F774
      length:
        EU: 0x2D0
        NA: 0x2D0
        JP: 0x2D0
      description: |-
        Data about every dungeon in the game.
        
        This is an array of 180 dungeon data list entry structs. Each entry is 4 bytes, and contains floor count information along with an index into the bulk of the dungeon's data in mappa_s.bin.
        
        See the struct definitions and Frostbyte's dungeon data document for more info.
        
        type: struct dungeon_data_list_entry[180]
    - name: ADVENTURE_LOG_ENCOUNTERS_MONSTER_IDS
      address:
        EU: 0x209EBF4
        NA: 0x209E670
        JP: 0x209FA44
      length:
        EU: 0x4C
        NA: 0x4C
        JP: 0x4C
      description: |-
        List of monster IDs with a corresponding milestone in the Adventure Log.
        
        type: struct monster_id_16[38]
    - name: ARM9_UNKNOWN_DATA__NA_209E6BC
      address:
        EU: 0x209EC40
        NA: 0x209E6BC
        JP: 0x209FA90
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: TACTIC_NAME_STRING_IDS
      address:
        EU: 0x209EC44
        NA: 0x209E6C0
        JP: 0x209FA94
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[12]
    - name: STATUS_NAME_STRING_IDS
      address:
        EU: 0x209EC5C
        NA: 0x209E6D8
        JP: 0x209FAAC
      length:
        EU: 0xCC
        NA: 0xCC
        JP: 0xCC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[102]
    - name: DUNGEON_RETURN_STATUS_TABLE
      address:
        EU: 0x209ED28
        NA: 0x209E7A4
        JP: 0x209FB78
      length:
        EU: 0x16C
        NA: 0x16C
        JP: 0x16C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct dungeon_return_status[91]
    - name: STATUSES_FULL_DESCRIPTION_STRING_IDS
      address:
        EU: 0x209EE94
        NA: 0x209E910
        JP: 0x209FCE4
      length:
        EU: 0x19C
        NA: 0x19C
        JP: 0x19C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct status_description[103]
    - name: ARM9_UNKNOWN_DATA__NA_209EAAC
      address:
        EU: 0x209F030
        NA: 0x209EAAC
        JP: 0x209FE80
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_FLOOR_RANKS_AND_ITEM_LISTS_1
      address:
        EU: 0x209F034
        NA: 0x209EAB0
        JP: 0x209FE84
      length:
        EU: 0xC64
        NA: 0xC64
        JP: 0xC64
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_FLOORS_FORBIDDEN
      address:
        EU: 0x209FC98
        NA: 0x209F714
        JP: 0x20A0AE8
      length:
        EU: 0xC8
        NA: 0xC8
        JP: 0xC8
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct mission_floors_forbidden[100]
    - name: MISSION_FLOOR_RANKS_AND_ITEM_LISTS_2
      address:
        EU: 0x209FD60
        NA: 0x209F7DC
        JP: 0x20A0BB0
      length:
        EU: 0x12F8
        NA: 0x12F8
        JP: 0x12F8
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_FLOOR_RANKS_PTRS
      address:
        EU: 0x20A1058
        NA: 0x20A0AD4
        JP: 0x20A1EA8
      length:
        EU: 0x190
        NA: 0x190
        JP: 0x190
      description: |-
        Uses MISSION_FLOOR_RANKS_AND_ITEM_LISTS
        
        Note: unverified, ported from Irdkwia's notes
    - name: DUNGEON_RESTRICTIONS
      address:
        EU: 0x20A11E8
        NA: 0x20A0C64
        JP: 0x20A2038
      length:
        EU: 0xC00
        NA: 0xC00
        JP: 0xC00
      description: |-
        Data related to dungeon restrictions for every dungeon in the game.
        
        This is an array of 256 dungeon restriction structs. Each entry is 12 bytes, and contains information about restrictions within the given dungeon.
        
        See the struct definitions and Frostbyte's dungeon data document for more info.
        
        type: struct dungeon_restriction[256]
    - name: SPECIAL_BAND_STAT_BOOST
      address:
        EU: 0x20A1DF0
        NA: 0x20A186C
        JP: 0x20A2C40
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the Special Band.
    - name: MUNCH_BELT_STAT_BOOST
      address:
        EU: 0x20A1E00
        NA: 0x20A187C
        JP: 0x20A2C50
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the Munch Belt.
    - name: GUMMI_STAT_BOOST
      address:
        EU: 0x20A1E0C
        NA: 0x20A1888
        JP: 0x20A2C5C
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value if a stat boost occurs when eating normal Gummis.
    - name: MIN_IQ_EXCLUSIVE_MOVE_USER
      address:
        EU: 0x20A1E10
        NA: 0x20A188C
        JP: 0x20A2C60
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: Minimum IQ required for enemies to use Exclusive-Move User
    - name: WONDER_GUMMI_IQ_GAIN
      address:
        EU: 0x20A1E14
        NA: 0x20A1890
        JP: 0x20A2C64
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: IQ gain when ingesting wonder gummis.
    - name: AURA_BOW_STAT_BOOST
      address:
        EU: 0x20A1E1C
        NA: 0x20A1898
        JP: 0x20A2C6C
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the aura bows.
    - name: MIN_IQ_ITEM_MASTER
      address:
        EU: 0x20A1E28
        NA: 0x20A18A4
        JP: 0x20A2C78
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: Minimum IQ required for enemies to use Item Master
    - name: DEF_SCARF_STAT_BOOST
      address:
        EU: 0x20A1E2C
        NA: 0x20A18A8
        JP: 0x20A2C7C
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the Defense Scarf.
    - name: POWER_BAND_STAT_BOOST
      address:
        EU: 0x20A1E30
        NA: 0x20A18AC
        JP: 0x20A2C80
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the Power Band.
    - name: WONDER_GUMMI_STAT_BOOST
      address:
        EU: 0x20A1E34
        NA: 0x20A18B0
        JP: 0x20A2C84
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value if a stat boost occurs when eating Wonder Gummis.
    - name: ZINC_BAND_STAT_BOOST
      address:
        EU: 0x20A1E38
        NA: 0x20A18B4
        JP: 0x20A2C88
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: Stat boost value for the Zinc Band.
    - name: EGG_HP_BONUS
      address:
        EU: 0x20A1E3C
        NA: 0x20A18B8
        JP: 0x20A2C8C
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: EVOLUTION_HP_BONUS
      address:
        EU: 0x20A1E48
        NA: 0x20A18C4
        JP: 0x20A2C98
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: DAMAGE_FORMULA_FLV_SHIFT
      address:
        EU: 0x20A1E50
        NA: 0x20A18CC
        JP: 0x20A2CA0
      length:
        NA: 0x4
        JP: 0x4
      description: "The constant shift added to the \"FLV\" intermediate quantity in the damage formula (see dungeon::last_move_damage_calc_flv), as a binary fixed-point number with 8 fraction bits (50)."
    - name: EVOLUTION_PHYSICAL_STAT_BONUSES
      address:
        EU: 0x20A1E54
        NA: 0x20A18D0
        JP: 0x20A2CA4
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: |-
        0x2: Atk + 0x2: Def
        
        Note: unverified, ported from Irdkwia's notes
    - name: DAMAGE_FORMULA_CONSTANT_SHIFT
      address:
        EU: 0x20A1E58
        NA: 0x20A18D4
        JP: 0x20A2CA8
      length:
        NA: 0x4
        JP: 0x4
      description: |-
        The constant shift applied to the overall output of the "unshifted base" damage formula (the sum of the scaled AT, DEF, and ClampedLn terms), as a binary fixed-point number with 8 fraction bits (-311).
        
        The value of -311 is notably equal to -round[DAMAGE_FORMULA_LN_PREFACTOR * ln(DAMAGE_FORMULA_LN_ARG_PREFACTOR * DAMAGE_FORMULA_FLV_SHIFT)]. This is probably not a coincidence.
    - name: DAMAGE_FORMULA_FLV_DEFICIT_DIVISOR
      address:
        EU: 0x20A1E5C
        NA: 0x20A18D8
        JP: 0x20A2CAC
      length:
        NA: 0x4
        JP: 0x4
      description: "The divisor of the (AT - DEF) term within the \"FLV\" intermediate quantity in the damage formula (see dungeon::last_move_damage_calc_flv), as a binary fixed-point number with 8 fraction bits (8)."
    - name: EGG_STAT_BONUSES
      address:
        EU: 0x20A1E60
        NA: 0x20A18DC
        JP: 0x20A2CB0
      length:
        EU: 0x8
        NA: 0x8
        JP: 0x8
      description: |-
        0x2: Atk + 0x2: SpAtk + 0x2: Def + 0x2: SpDef
        
        Note: unverified, ported from Irdkwia's notes
    - name: EVOLUTION_SPECIAL_STAT_BONUSES
      address:
        EU: 0x20A1E68
        NA: 0x20A18E4
        JP: 0x20A2CB8
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: |-
        0x2: SpAtk + 0x2: SpDef
        
        Note: unverified, ported from Irdkwia's notes
    - name: DAMAGE_FORMULA_NON_TEAM_MEMBER_MODIFIER
      address:
        EU: 0x20A1E6C
        NA: 0x20A18E8
        JP: 0x20A2CBC
      length:
        NA: 0x4
        JP: 0x4
      description: "The divisor applied to the overall output of the \"shifted base\" damage formula (the sum of the scaled AT, Def, ClampedLn, and DAMAGE_FORMULA_CONSTANT_SHIFT terms) if the attacker is not a team member (and the current fixed room is not the substitute room...for some reason), as a binary fixed-point number with 8 fraction bits (85/64)."
    - name: DAMAGE_FORMULA_LN_PREFACTOR
      address:
        EU: 0x20A1E70
        NA: 0x20A18EC
        JP: 0x20A2CC0
      length:
        NA: 0x4
        JP: 0x4
      description: "The prefactor to the output of the ClampedLn in the damage formula, as a binary fixed-point number with 8 fraction bits (50)."
    - name: DAMAGE_FORMULA_DEF_PREFACTOR
      address:
        EU: 0x20A1E74
        NA: 0x20A18F0
        JP: 0x20A2CC4
      length:
        NA: 0x4
        JP: 0x4
      description: "The prefactor to the \"DEF\" (defense) intermediate quantity in the damage formula (see dungeon::last_move_damage_calc_def), as a binary fixed-point number with 8 fraction bits (-0.5)."
    - name: DAMAGE_FORMULA_AT_PREFACTOR
      address:
        EU: 0x20A1E78
        NA: 0x20A18F4
        JP: 0x20A2CC8
      length:
        NA: 0x4
        JP: 0x4
      description: "The prefactor to the \"AT\" (attack) intermediate quantity in the damage formula (see dungeon::last_move_damage_calc_at), as a binary fixed-point number with 8 fraction bits (153/256, which is close to 0.6)."
    - name: DAMAGE_FORMULA_LN_ARG_PREFACTOR
      address:
        EU: 0x20A1E7C
        NA: 0x20A18F8
        JP: 0x20A2CCC
      length:
        NA: 0x4
        JP: 0x4
      description: "The prefactor to the argument of ClampedLn in the damage formula (FLV + DAMAGE_FORMULA_FLV_SHIFT), as a binary fixed-point number with 8 fraction bits (10)."
    - name: FORBIDDEN_FORGOT_MOVE_LIST
      address:
        EU: 0x20A1E9C
        NA: 0x20A1918
        JP: 0x20A2CEC
      length:
        EU: 0x12
        NA: 0x12
        JP: 0x12
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct forbidden_forgot_move_entry[3]
    - name: TACTICS_UNLOCK_LEVEL_TABLE
      address:
        EU: 0x20A1EC4
        NA: 0x20A1940
        JP: 0x20A2D14
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "type: int16_t[12]"
    - name: CLIENT_LEVEL_TABLE
      address:
        EU: 0x20A1EFC
        NA: 0x20A1978
        JP: 0x20A2D4C
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Still a guess
        
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[16]
    - name: OUTLAW_LEVEL_TABLE
      address:
        EU: 0x20A1F1C
        NA: 0x20A1998
        JP: 0x20A2D6C
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Table of 2-byte outlaw levels for outlaw missions, indexed by mission rank.
        
        type: int16_t[16]
    - name: OUTLAW_MINION_LEVEL_TABLE
      address:
        EU: 0x20A1F3C
        NA: 0x20A19B8
        JP: 0x20A2D8C
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Table of 2-byte outlaw minion levels for outlaw hideout missions, indexed by mission rank.
        
        type: int16_t[16]
    - name: HIDDEN_POWER_BASE_POWER_TABLE
      address:
        EU: 0x20A1F5C
        NA: 0x20A19D8
        JP: 0x20A2DAC
      length:
        EU: 0x28
        NA: 0x28
        JP: 0x28
      description: |-
        Still a guess
        
        Note: unverified, ported from Irdkwia's notes
        
        type: int[10]
    - name: VERSION_EXCLUSIVE_MONSTERS
      address:
        EU: 0x20A1F84
        NA: 0x20A1A00
        JP: 0x20A2DD4
      length:
        EU: 0x5C
        NA: 0x5C
        JP: 0x5C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct version_exclusive_monster[23]
    - name: IQ_SKILL_RESTRICTIONS
      address:
        EU: 0x20A1FE0
        NA: 0x20A1A5C
        JP: 0x20A2E30
      length:
        EU: 0x8A
        NA: 0x8A
        JP: 0x8A
      description: |-
        Table of 2-byte values for each IQ skill that represent a group. IQ skills in the same group can not be enabled at the same time.
        
        type: int16_t[69]
    - name: SECONDARY_TERRAIN_TYPES
      address:
        EU: 0x20A206C
        NA: 0x20A1AE8
        JP: 0x20A2EBC
      length:
        EU: 0xC8
        NA: 0xC8
        JP: 0xC8
      description: |-
        The type of secondary terrain for each dungeon in the game.
        
        This is an array of 200 bytes. Each byte is an enum corresponding to one dungeon.
        
        type: struct secondary_terrain_type_8[200]
    - name: SENTRY_DUTY_MONSTER_IDS
      address:
        EU: 0x20A2134
        NA: 0x20A1BB0
        JP: 0x20A2F84
      length:
        EU: 0xCC
        NA: 0xCC
        JP: 0xCC
      description: |-
        Table of monster IDs usable in the sentry duty minigame.
        
        type: struct monster_id_16[102]
    - name: IQ_SKILLS
      address:
        EU: 0x20A2200
        NA: 0x20A1C7C
        JP: 0x20A3050
      length:
        EU: 0x114
        NA: 0x114
        JP: 0x114
      description: |-
        Table of 4-byte values for each IQ skill that represent the required IQ value to unlock a skill.
        
        type: int[69]
    - name: IQ_GROUP_SKILLS
      address:
        EU: 0x20A2314
        NA: 0x20A1D90
        JP: 0x20A3164
      length:
        EU: 0x190
        NA: 0x190
        JP: 0x190
      description: "Irdkwia's notes: 25*16*0x1"
    - name: MONEY_QUANTITY_TABLE
      address:
        EU: 0x20A24A4
        NA: 0x20A1F20
        JP: 0x20A32F4
      length:
        EU: 0x190
        NA: 0x190
        JP: 0x190
      description: |-
        Table that maps money quantity codes (as recorded in, e.g., struct item) to actual amounts.
        
        type: int[100]
    - name: ARM9_UNKNOWN_TABLE__NA_20A20B0
      address:
        EU: 0x20A2634
        NA: 0x20A20B0
        JP: 0x20A3484
      length:
        EU: 0x200
        NA: 0x200
        JP: 0x200
      description: |-
        256*0x2
        
        Note: unverified, ported from Irdkwia's notes
    - name: IQ_GUMMI_GAIN_TABLE
      address:
        EU: 0x20A2834
        NA: 0x20A22B0
        JP: 0x20A3684
      length:
        EU: 0x288
        NA: 0x288
        JP: 0x288
      description: "type: int16_t[18][18]"
    - name: GUMMI_BELLY_RESTORE_TABLE
      address:
        EU: 0x20A2ABC
        NA: 0x20A2538
        JP: 0x20A390C
      length:
        EU: 0x288
        NA: 0x288
        JP: 0x288
      description: "type: int16_t[18][18]"
    - name: BAG_CAPACITY_TABLE_SPECIAL_EPISODES
      address:
        EU: 0x20A2D44
        NA: 0x20A27C0
        JP: 0x20A3B94
      length:
        EU: 0x14
        NA: 0x14
        JP: 0x14
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: uint32_t[5]
    - name: BAG_CAPACITY_TABLE
      address:
        EU: 0x20A2D58
        NA: 0x20A27D4
        JP: 0x20A3BA8
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Array of 4-byte integers containing the bag capacity for each bag level.
        
        type: uint32_t[8]
    - name: SPECIAL_EPISODE_MAIN_CHARACTERS
      address:
        EU: 0x20A2D78
        NA: 0x20A27F4
        JP: 0x20A3BC8
      length:
        EU: 0xC8
        NA: 0xC8
        JP: 0xC8
      description: "type: struct monster_id_16[100]"
    - name: GUEST_MONSTER_DATA
      address:
        EU: 0x20A2E40
        NA: 0x20A28BC
        JP: 0x20A3C90
      length:
        EU: 0x288
        NA: 0x288
        JP: 0x288
      description: |-
        Data for guest monsters that join you during certain story dungeons.
        
        Array of 18 36-byte entries.
        
        See the struct definitions and Frostbyte's dungeon data document for more info.
        
        type: struct guest_monster[18]
    - name: RANK_UP_TABLE
      address:
        EU: 0x20A30C8
        NA: 0x20A2B44
        JP: 0x20A3F18
      length:
        EU: 0xD0
        NA: 0xD0
        JP: 0xD0
    - name: DS_DOWNLOAD_TEAMS
      address:
        EU: 0x20A3198
        NA: 0x20A2C14
        JP: 0x20A3FE8
      length:
        EU: 0x70
        NA: 0x70
        JP: 0x70
      description: |-
        Seems like this is just a collection of null-terminated lists concatenated together.
        
        Note: unverified, ported from Irdkwia's notes
        
        struct monster_id_16[56]
    - name: ARM9_UNKNOWN_PTR__NA_20A2C84
      address:
        EU: 0x20A3208
        NA: 0x20A2C84
        JP: 0x20A4058
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: UNOWN_SPECIES_ADDITIONAL_CHARS
      address:
        EU: 0x20A320C
        NA: 0x20A2C88
        JP: 0x20A405C
      length:
        EU: 0x80
        NA: 0x80
        JP: 0x80
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: enum monster_id[28]
    - name: MONSTER_SPRITE_DATA
      address:
        EU: 0x20A332C
        NA: 0x20A2D08
        JP: 0x20A40DC
      length:
        EU: 0x4B0
        NA: 0x4B0
        JP: 0x4B0
      description: Contains information about the sprite size and sprite file size of each monster
    - name: REMOTE_STRINGS
      address:
        EU: 0x20A4140
        NA: 0x20A3B40
        JP: 0x20A4F24
      length:
        EU: 0x2C
        NA: 0x2C
        JP: 0x2C
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: RANK_STRINGS_1
      address:
        EU: 0x20A416C
        NA: 0x20A3B6C
        JP: 0x20A4F60
      length:
        EU: 0x30
        NA: 0x30
        JP: 0x30
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_MENU_STRING_IDS_1
      address:
        EU: 0x20A419C
        NA: 0x20A3B9C
        JP: 0x20A4F50
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[8]
    - name: RANK_STRINGS_2
      address:
        EU: 0x20A41AC
        NA: 0x20A3BAC
        JP: 0x20A4F90
      length:
        EU: 0x30
        NA: 0x30
        JP: 0x30
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_MENU_STRING_IDS_2
      address:
        EU: 0x20A41DC
        NA: 0x20A3BDC
        JP: 0x20A4FC0
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[8]
    - name: RANK_STRINGS_3
      address:
        EU: 0x20A41EC
        NA: 0x20A3BEC
        JP: 0x20A4FD0
      length:
        EU: 0xB4
        NA: 0xB4
        JP: 0xB4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: MISSION_DUNGEON_UNLOCK_TABLE
      address:
        EU: 0x20A42AC
        NA: 0x20A3CAC
        JP: 0x20A5090
      length:
        EU: 0x6
        NA: 0x6
        JP: 0x6
      description: |-
        Irdkwia's notes: SpecialDungeonMissions
        
        type: struct dungeon_unlock_entry[3]
    - name: NO_SEND_ITEM_TABLE
      address:
        EU: 0x20A42B2
        NA: 0x20A3CB2
        JP: 0x20A5096
      length:
        EU: 0x6
        NA: 0x6
        JP: 0x6
      description: |-
        A list of items that are forbidden from being used in a mission sent by Wonder Mail.
        
        type: struct item_id_16[3]
    - name: ARM9_UNKNOWN_TABLE__NA_20A3CC8
      address:
        EU: 0x20A42C8
        NA: 0x20A3CC8
        JP: 0x20A50AC
      length:
        EU: 0x1C
        NA: 0x1C
        JP: 0x1C
      description: |-
        14*0x2
        Linked to ARM9_UNKNOWN_TABLE__NA_20A3CE4
        
        Note: unverified, ported from Irdkwia's notes
    - name: ARM9_UNKNOWN_TABLE__NA_20A3CE4
      address:
        EU: 0x20A42E4
        NA: 0x20A3CE4
        JP: 0x20A50C8
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: |-
        8*0x2
        
        Note: unverified, ported from Irdkwia's notes
    - name: ARM9_UNKNOWN_FUNCTION_TABLE__NA_20A3CF4
      address:
        EU: 0x20A42F4
        NA: 0x20A3CF4
        JP: 0x20A50D8
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: |-
        Could be related to missions
        
        Note: unverified, ported from Irdkwia's notes
    - name: MISSION_BANNED_STORY_MONSTERS
      address:
        EU: 0x20A4314
        NA: 0x20A3D14
        JP: 0x20A50F8
      length:
        EU: 0x2A
        NA: 0x2A
        JP: 0x2A
      description: |-
        Null-terminated list of monster IDs that can't be used (probably as clients or targets) when generating missions before a certain point in the story.
        
        To be precise, PERFOMANCE_PROGRESS_FLAG[9] must be enabled so these monsters can appear as mission clients.
        
        type: struct monster_id_16[length / 2]
    - name: ITEM_DELIVERY_TABLE
      address:
        EU: 0x20A433E
        NA: 0x20A3D3E
        JP: 0x20A5122
      length:
        EU: 0x2E
        NA: 0x2E
        JP: 0x2E
      description: |-
        A list of valid items used for delivering an item for a mission client.
        
        type: struct item_id_16[23]
    - name: MISSION_RANK_POINTS
      address:
        EU: 0x20A436C
        NA: 0x20A3D6C
        JP: 0x20A5150
      length:
        EU: 0x40
        NA: 0x40
        JP: 0x40
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int[16]
    - name: MISSION_BANNED_MONSTERS
      address:
        EU: 0x20A43AC
        NA: 0x20A3DAC
        JP: 0x20A5190
      length:
        EU: 0xF8
        NA: 0xF8
        JP: 0xF8
      description: |-
        Null-terminated list of monster IDs that can't be used (probably as clients or targets) when generating missions.
        
        type: struct monster_id_16[124]
    - name: MISSION_STRING_IDS
      address:
        EU: 0x20A44A4
        NA: 0x20A3EA4
        JP: 0x20A5288
      length:
        EU: 0x788
        NA: 0x788
        JP: 0x788
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[964]
    - name: LEVEL_LIST
      address:
        EU: 0x20A4CEC
        NA: 0x20A46EC
        JP: 0x20A5AD0
      length:
        EU: 0x2470
        NA: 0x21D0
        JP: 0x2234
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: EVENTS
      address:
        EU: 0x20A5BD8
        NA: 0x20A5488
        JP: 0x20A6894
      length:
        EU: 0x1584
        NA: 0x1434
        JP: 0x1470
      description: |-
        Table of levels for the script engine, in which scenes can take place. There are a version-dependent number of 12-byte entries.
        
        type: struct script_level[length / 12]
    - name: ARM9_UNKNOWN_TABLE__NA_20A68BC
      address:
        EU: 0x20A715C
        NA: 0x20A68BC
        JP: 0x20A7D04
      length:
        EU: 0xC
        NA: 0xC
        JP: 0xC
      description: |-
        6*0x2
        
        Note: unverified, ported from Irdkwia's notes
    - name: DEMO_TEAMS
      address:
        EU: 0x20A7168
        NA: 0x20A68C8
        JP: 0x20A7D10
      length:
        EU: 0x48
        NA: 0x48
        JP: 0x48
      description: |-
        18*0x4 (Hero ID 0x2, Partner ID 0x2)
        
        Note: unverified, ported from Irdkwia's notes
    - name: ACTOR_LIST
      address:
        EU: 0x20A71B0
        NA: 0x20A6910
        JP: 0x20A7D58
      length:
        EU: 0x28F8
        NA: 0x28F8
        JP: 0x28F8
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: ENTITIES
      address:
        EU: 0x20A8890
        NA: 0x20A7FF0
        JP: 0x20A9438
      length:
        EU: 0x1218
        NA: 0x1218
        JP: 0x1218
      description: |-
        Table of entities for the script engine, which can move around and do things within a scene. There are 386 12-byte entries.
        
        type: struct script_entity[386]
    - name: JOB_WINDOW_PARAMS_1
      address:
        EU: 0x20A9AB8
        NA: 0x20A9218
        JP: 0x20AA660
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_1
      address:
        EU: 0x20A9AC8
        NA: 0x20A9228
        JP: 0x20AA670
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_2
      address:
        EU: 0x20A9AE8
        NA: 0x20A9248
        JP: 0x20AA690
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_3
      address:
        EU: 0x20A9B58
        NA: 0x20A92B8
        JP: 0x20AA700
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_4
      address:
        EU: 0x20A9B70
        NA: 0x20A92D0
        JP: 0x20AA718
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_5
      address:
        EU: 0x20A9B88
        NA: 0x20A92E8
        JP: 0x20AA730
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_6
      address:
        EU: 0x20A9BA0
        NA: 0x20A9300
        JP: 0x20AA748
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_7
      address:
        EU: 0x20A9BB8
        NA: 0x20A9318
        JP: 0x20AA760
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_8
      address:
        EU: 0x20A9BD0
        NA: 0x20A9330
        JP: 0x20AA778
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_9
      address:
        EU: 0x20A9BE8
        NA: 0x20A9348
        JP: 0x20AA790
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_10
      address:
        EU: 0x20A9C00
        NA: 0x20A9360
        JP: 0x20AA7A8
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_11
      address:
        EU: 0x20A9C18
        NA: 0x20A9378
        JP: 0x20AA7C0
      length:
        EU: 0x18
        NA: 0x18
        JP: 0x18
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_12
      address:
        EU: 0x20A9C30
        NA: 0x20A9390
        JP: 0x20AA7D8
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_MENU_ITEMS_13
      address:
        EU: 0x20A9C50
        NA: 0x20A93B0
        JP: 0x20AA7F8
      length:
        EU: 0x20
        NA: 0x20
        JP: 0x20
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: JOB_WINDOW_PARAMS_2
      address:
        EU: 0x20A9C70
        NA: 0x20A93D0
        JP: 0x20AA818
      length:
        EU: 0x10
        NA: 0x10
        JP: 0x10
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: DUNGEON_SWAP_ID_TABLE
      address:
        EU: 0x20A9C80
        NA: 0x20A93E0
        JP: 0x20AA828
      length:
        EU: 0xD4
        NA: 0xD4
        JP: 0xD4
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: struct dungeon_id_8[212]
    - name: MAP_MARKER_PLACEMENTS
      address:
        EU: 0x20A9D70
        NA: 0x20A94D0
        JP: 0x20AA918
      length:
        EU: 0x9B0
        NA: 0x9B0
        JP: 0x9B0
      description: |-
        The map marker position of each dungeon on the Wonder Map.
        
        This is an array of 310 map marker structs. Each entry is 8 bytes, and contains positional information about a dungeon on the map.
        
        See the struct definitions and Frostbyte's dungeon data document for more info.
        
        type: struct map_marker[310]
    - name: LFO_OUTPUT_VOICE_UPDATE_FLAGS
      address:
        EU: 0x20AA840
        NA: 0x20A9FA0
        JP: 0x20AB3E8
      length:
        EU: 0x10
        NA: 0x10
    - name: TRIG_TABLE
      address:
        EU: 0x20AA850
        NA: 0x20A9FB0
        JP: 0x20AB3F8
      length:
        EU: 0x4974
        NA: 0x4974
        JP: 0x4974
      description: |-
        Interleaved table of sine and cosine values at 4096 divisions over a full period (2π radians).
        
        More precisely, the trig_values entry at index i corresponds to {sin(i * 2π/4096), cos(i * 2π/4096)} (each division is ~1/10 of a degree). Values are stored as signed fixed-point numbers with 12 fraction bits.
        
        type: struct trig_values[4096]
    - name: FX_ATAN_IDX_TABLE
      address:
        EU: 0x20AE850
        NA: 0x20ADFB0
        JP: 0x20AF3F8
      length:
        EU: 0x102
        NA: 0x102
        JP: 0x102
      description: |-
        Table of arctangent values at 129 divisions over the domain [0, 1].
        
        More precisely, entry at index i corresponds to (atan(i/128) / (π/2)). Values are stored as signed fixed-point numbers with 14 fraction bits.
    - name: TEX_PLTT_START_ADDR_TABLE
      address:
        EU: 0x20AE954
        NA: 0x20AE0B4
        JP: 0x20AF4FC
      length:
        EU: 0x10
        NA: 0x10
    - name: TEX_START_ADDR_TABLE
      address:
        EU: 0x20AE964
        NA: 0x20AE0C4
        JP: 0x20AF50C
      length:
        EU: 0x60
        NA: 0x60
    - name: ARM9_UNKNOWN_TABLE__NA_20AE924
      address:
        EU: 0x20AF1C4
        NA: 0x20AE924
        JP: 0x20AFD6C
      length:
        EU: 0x2D4
        NA: 0x2D4
        JP: 0x2D4
      description: |-
        724*0x1
        
        Note: unverified, ported from Irdkwia's notes
    - name: MEMORY_ALLOCATION_ARENA_GETTERS
      address:
        EU: 0x20AF7A0
        NA: 0x20AEF00
        JP: 0x20B0340
      length:
        EU: 0x8
        NA: 0x8
      description: |-
        Functions to get the desired memory arena for allocating and freeing heap memory.
        
        type: struct mem_arena_getters
    - name: PRNG_SEQUENCE_NUM
      address:
        EU: 0x20AF7CC
        NA: 0x20AEF2C
        JP: 0x20B036C
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: "[Runtime] The current PRNG sequence number for the general-purpose PRNG. See Rand16Bit for more information on how the general-purpose PRNG works."
    - name: LOADED_OVERLAY_GROUP_0
      address:
        EU: 0x20AFAD0
        NA: 0x20AF230
        JP: 0x20B0670
      length:
        EU: 0x4
        NA: 0x4
      description: |-
        [Runtime] The overlay group ID of the overlay currently loaded in slot 0. A group ID of 0 denotes no overlay.
        
        Overlay group IDs that can be loaded in slot 0:
        - 0x06 (overlay 3)
        - 0x07 (overlay 6)
        - 0x08 (overlay 4)
        - 0x09 (overlay 5)
        - 0x0A (overlay 7)
        - 0x0B (overlay 8)
        - 0x0C (overlay 9)
        - 0x10 (overlay 12)
        - 0x11 (overlay 13)
        - 0x12 (overlay 14)
        - 0x13 (overlay 15)
        - 0x14 (overlay 16)
        - 0x15 (overlay 17)
        - 0x16 (overlay 18)
        - 0x17 (overlay 19)
        - 0x18 (overlay 20)
        - 0x19 (overlay 21)
        - 0x1A (overlay 22)
        - 0x1B (overlay 23)
        - 0x1C (overlay 24)
        - 0x1D (overlay 25)
        - 0x1E (overlay 26)
        - 0x1F (overlay 27)
        - 0x20 (overlay 28)
        - 0x21 (overlay 30)
        - 0x22 (overlay 31)
        - 0x23 (overlay 32)
        - 0x24 (overlay 33)
        
        type: enum overlay_group_id
    - name: LOADED_OVERLAY_GROUP_1
      address:
        EU: 0x20AFAD4
        NA: 0x20AF234
        JP: 0x20B0674
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: |-
        [Runtime] The overlay group ID of the overlay currently loaded in slot 1. A group ID of 0 denotes no overlay.
        
        Overlay group IDs that can be loaded in slot 1:
        - 0x4 (overlay 1)
        - 0x5 (overlay 2)
        - 0xD (overlay 11)
        - 0xE (overlay 29)
        - 0xF (overlay 34)
        
        type: enum overlay_group_id
    - name: LOADED_OVERLAY_GROUP_2
      address:
        EU: 0x20AFAD8
        NA: 0x20AF238
      length:
        EU: 0x4
        NA: 0x4
      description: |-
        [Runtime] The overlay group ID of the overlay currently loaded in slot 2. A group ID of 0 denotes no overlay.
        
        Overlay group IDs that can be loaded in slot 2:
        - 0x1 (overlay 0)
        - 0x2 (overlay 10)
        - 0x3 (overlay 35)
        
        type: enum overlay_group_id
    - name: DEBUG_IS_INITIALIZED
      address:
        EU: 0x20AFF50
        NA: 0x20AF698
        JP: 0x20B0AD8
      length:
        NA: 0x1
    - name: PACK_FILES_OPENED
      aliases:
        - DIRECTORY_FILES_EXTRACTED
      address:
        EU: 0x20AFF54
        NA: 0x20AF69C
      length:
        EU: 0x4
        NA: 0x4
      description: |-
        [Runtime] A pointer to the 6 opened Pack files (listed at PACK_FILE_PATHS_TABLE)
        
        type: struct pack_file_opened*
    - name: PACK_FILE_PATHS_TABLE
      aliases:
        - DIRECTORY_FILE_TABLE
      address:
        EU: 0x20AFF58
        NA: 0x20AF6A0
      length:
        EU: 0x18
        NA: 0x18
      description: |-
        List of pointers to path strings to all known pack files.
        The game uses this table to load its resources when launching dungeon mode.
        
        type: char*[6]
    - name: GAME_STATE_VALUES
      address:
        EU: 0x20AFF70
        NA: 0x20AF6B8
        JP: 0x20B0AF8
      description: "[Runtime]"
    - name: BAG_ITEMS_PTR_MIRROR
      address:
        EU: 0x20AFF70
        NA: 0x20AF6B8
        JP: 0x20B0AF8
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: |-
        [Runtime] Probably a mirror of ram.yml::BAG_ITEMS_PTR?
        
        Note: unverified, ported from Irdkwia's notes
    - name: ITEM_DATA_TABLE_PTRS
      address:
        EU: 0x20AFF78
        NA: 0x20AF6C0
        JP: 0x20B0B00
      length:
        EU: 0xC
        NA: 0xC
      description: |-
        [Runtime] List of pointers to various item data tables.
        
        The first two pointers are definitely item-related (although the order appears to be flipped between EU/NA?). Not sure about the third pointer.
    - name: DUNGEON_MOVE_TABLES
      address:
        EU: 0x20AFFA8
        NA: 0x20AF6DC
        JP: 0x20B0B1C
      description: "[Runtime] Seems to be some sort of region (a table of tables?) that holds pointers to various important tables related to moves."
    - name: MOVE_DATA_TABLE_PTR
      address:
        EU: 0x20AFFB0
        NA: 0x20AF6E4
      length:
        EU: 0x4
        NA: 0x4
      description: |-
        [Runtime] Points to the contents of the move data table loaded from waza_p.bin
        
        type: struct move_data_table*
    - name: WAN_TABLE
      address:
        EU: 0x20B0524
        NA: 0x20AFC68
        JP: 0x20B10A8
      length:
        NA: 0x4
      description: |-
        pointer to the list of wan sprite loaded in RAM
        
        struct wan_table*
    - name: RENDER_3D
      address:
        EU: 0x20B0540
        NA: 0x20AFC80
        JP: 0x20B10C0
      length:
        EU: 0x44
        NA: 0x44
      description: |-
        The (seemingly) unique instance render_3d_global in the game
        
        type: struct render_3d_global
    - name: RENDER_3D_FUNCTIONS_64
      address:
        EU: 0x20B0584
        NA: 0x20AFCC4
        JP: 0x20B1104
      length:
        EU: 0x20
        NA: 0x20
      description: |-
        Pointers to the 8 functions available for rendering a render_3d_element_64
        
        type: render_3d_element_64_fn_t[8]
    - name: LANGUAGE_INFO_DATA
      address:
        EU: 0x20B05A8
        NA: 0x20AFCE8
        JP: 0x20B1128
      description: "[Runtime]"
    - name: TBL_TALK_GROUP_STRING_ID_START
      address:
        EU: 0x20B0614
        NA: 0x20AFCF8
        JP: 0x20B1140
      length:
        NA: 0xC
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[6]
    - name: KEYBOARD_STRING_IDS
      address:
        EU: 0x20B0718
        NA: 0x20AFDFC
        JP: 0x20B1240
      length:
        EU: 0x3C
        NA: 0x3C
        JP: 0x3C
      description: |-
        30*0x2
        
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[30]
    - name: NOTIFY_NOTE
      address:
        EU: 0x20B0814
        NA: 0x20AFEF8
        JP: 0x20B176C
      length:
        EU: 0x1
        NA: 0x1
        JP: 0x1
      description: |-
        [Runtime] Flag related to saving and loading state?
        
        type: bool
    - name: DEFAULT_HERO_ID
      address:
        EU: 0x20B0818
        NA: 0x20AFEFC
        JP: 0x20B1770
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: |-
        The default monster ID for the hero (0x4: Charmander)
        
        type: struct monster_id_16
    - name: DEFAULT_PARTNER_ID
      address:
        EU: 0x20B081A
        NA: 0x20AFEFE
        JP: 0x20B1772
      length:
        EU: 0x2
        NA: 0x2
        JP: 0x2
      description: |-
        The default monster ID for the partner (0x1: Bulbasaur)
        
        type: struct monster_id_16
    - name: GAME_MODE
      address:
        EU: 0x20B088C
        NA: 0x20AFF70
        JP: 0x20B17E4
      length:
        EU: 0x1
        NA: 0x1
        JP: 0x1
      description: |-
        [Runtime] Game mode, see enum game_mode for possible values.
        
        type: uint8_t
    - name: GLOBAL_PROGRESS_PTR
      address:
        EU: 0x20B0890
        NA: 0x20AFF74
        JP: 0x20B17E8
      length:
        EU: 0x4
        NA: 0x4
      description: |-
        [Runtime]
        
        type: struct global_progress*
    - name: ADVENTURE_LOG_PTR
      address:
        EU: 0x20B0894
        NA: 0x20AFF78
        JP: 0x20B17EC
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: |-
        [Runtime]
        
        type: struct adventure_log*
    - name: ITEM_TABLES_PTRS_1
      address:
        EU: 0x20B1264
        NA: 0x20B0948
        JP: 0x20B21BC
      length:
        EU: 0x68
        NA: 0x68
        JP: 0x68
      description: "Irdkwia's notes: 26*0x4, uses MISSION_FLOOR_RANKS_AND_ITEM_LISTS"
    - name: UNOWN_SPECIES_ADDITIONAL_CHAR_PTR_TABLE
      address:
        EU: 0x20B131C
        NA: 0x20B09D8
        JP: 0x20B224C
      length:
        EU: 0x70
        NA: 0x70
        JP: 0x70
      description: |-
        Uses UNOWN_SPECIES_ADDITIONAL_CHARS
        
        Note: unverified, ported from Irdkwia's notes
        
        type: enum monster_id*[28]
    - name: TEAM_MEMBER_TABLE_PTR
      address:
        EU: 0x20B138C
        NA: 0x20B0A48
        JP: 0x20B22BC
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: Pointer to TEAM_MEMBER_TABLE
    - name: MISSION_DELIVER_LIST_PTR
      address:
        EU: 0x20B13A4
        NA: 0x20B0A60
        JP: 0x20B22D4
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: A pointer to a heap-allocated list of items usable for delivery missions
    - name: MISSION_DELIVER_COUNT
      address:
        EU: 0x20B13A8
        NA: 0x20B0A64
        JP: 0x20B22D8
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: The total number of items usable for delivery missions
    - name: MISSION_DUNGEON_LIST_PTR
      address:
        EU: 0x20B13AC
        NA: 0x20B0A68
        JP: 0x20B22DC
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: A pointer to a heap-allocated list of dungeons usable for missions
    - name: MISSION_DUNGEON_COUNT
      address:
        EU: 0x20B13B0
        NA: 0x20B0A6C
        JP: 0x20B22E0
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: The total number of dungeons usable for missions
    - name: MISSION_MONSTER_LIST_PTR
      address:
        EU: 0x20B13B4
        NA: 0x20B0A70
        JP: 0x20B22E4
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: A pointer to a heap-allocated list of monsters usable for missions
    - name: MISSION_MONSTER_COUNT
      address:
        EU: 0x20B13B8
        NA: 0x20B0A74
        JP: 0x20B22E8
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: The total number of monsters usable for missions
    - name: MISSION_LIST_PTR
      address:
        EU: 0x20B13BC
        NA: 0x20B0A78
        JP: 0x20B22EC
      length:
        EU: 0x4
        NA: 0x4
        JP: 0x4
      description: "Note: unverified, ported from Irdkwia's notes"
    - name: REMOTE_STRING_PTR_TABLE
      address:
        EU: 0x20B13C0
        NA: 0x20B0A7C
        JP: 0x20B22F0
      length:
        EU: 0x1C
        NA: 0x1C
        JP: 0x1C
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: const char*[7]
    - name: RANK_STRING_PTR_TABLE
      address:
        EU: 0x20B13DC
        NA: 0x20B0A98
        JP: 0x20B230C
      length:
        EU: 0x40
        NA: 0x40
        JP: 0x40
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: const char*[16]
    - name: SMD_EVENTS_FUN_TABLE
      address:
        EU: 0x20B14D4
        NA: 0x20B0B90
        JP: 0x20B2404
      length:
        EU: 0x1FC
        NA: 0x1FC
      description: |-
        Table of all DSE events, see https://projectpokemon.org/docs/mystery-dungeon-nds/procyon-studios-digital-sound-elements-r12/
        
        Irdkwia's notes: named DSEEventFunctionPtrTable with length 0x3C0 (note the disagreement), 240*0x4.
    - name: MUSIC_DURATION_LOOKUP_TABLE_1
      address:
        EU: 0x20B1894
        NA: 0x20B0F50
        JP: 0x20B27C4
      length:
        EU: 0x100
        NA: 0x100
        JP: 0x100
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int16_t[128]
    - name: MUSIC_DURATION_LOOKUP_TABLE_2
      address:
        EU: 0x20B1994
        NA: 0x20B1050
        JP: 0x20B28C4
      length:
        EU: 0x200
        NA: 0x200
        JP: 0x200
      description: |-
        Note: unverified, ported from Irdkwia's notes
        
        type: int32_t[128]
    - name: LFO_WAVEFORM_CALLBACKS
      address:
        EU: 0x20B1B94
        NA: 0x20B1250
        JP: 0x20B2AC4
      length:
        EU: 0x40
        NA: 0x40
    - name: IS_DISP_ON
      address:
        EU: 0x20B34D8
        NA: 0x20B2B94
        JP: 0x20B4408
      length:
        EU: 0x1
        NA: 0x1
    - name: GXI_DMA_ID
      address:
        EU: 0x20B34DC
        NA: 0x20B2B98
        JP: 0x20B440C
      length:
        EU: 0x4
        NA: 0x4
